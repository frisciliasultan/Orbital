{"ast":null,"code":"var _jsxFileName = \"/Users/frisciliasultan/Documents/Orbital/client/src/App.js\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport React from \"react\";\nimport { ModuleSelectionPage } from \"./Pages/Module Selection Page/ModuleSelectionPage\";\nimport { Login, Register, LoginPage } from './Pages/Login/LoginPage'; //import \"./App.scss\";\n\nimport { Switch, Route } from \"react-router-dom\";\nimport { ModTreeNav } from \"./navbar\";\nimport ModulePlannerPageTemp from \"./Pages/Module Planner Page/ModulePlannerPage\";\nimport { CAPCalculatorPage } from \"./Pages/CAP Calculator Page/CAPCalculatorPage\";\nimport FirstSetting from './Pages/Login/FirstSetting';\nimport PrivateRoute from './Components/PrivateRoute';\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\nimport Landing from \"./Pages/Login/Landing\";\nimport RegisterTemp from \"./Components/auth/Register\";\nimport LoginTemp from \"./Components/auth/Login\";\nimport PrivateRouteTemp from \"./Components/PrivateRoute\";\nimport Dashboard from \"./Components/dashboard/Dashboard\";\nimport { Provider } from \"react-redux\";\nimport store from './store'; // Check for token to keep user logged in\n\nif (localStorage.jwtToken) {\n  // Set auth token header auth\n  const token = localStorage.jwtToken;\n  setAuthToken(token); // Decode token and get user info and exp\n\n  const decoded = jwt_decode(token); // Set user and isAuthenticated\n\n  store.dispatch(setCurrentUser(decoded)); // Check for expired token\n\n  const currentTime = Date.now() / 1000; // to get in milliseconds\n\n  if (decoded.exp < currentTime) {\n    // Logout user\n    store.dispatch(logoutUser()); // Redirect to login\n\n    window.location.href = \"./login\";\n  }\n}\n\nlet totalGEMMCs = 0;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoggedIn: false\n    };\n    this.updateLoginStatus = this.updateLoginStatus.bind(this);\n  }\n\n  updateLoginStatus(status) {\n    this.setState({\n      isLoggedIn: status\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Provider, {\n      store: store,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(ModTreeNav, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 12\n      }\n    }), /*#__PURE__*/React.createElement(Landing, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 12\n      }\n    }), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/login\",\n      component: () => /*#__PURE__*/React.createElement(LoginPage, {\n        isLoggedIn: this.state.isLoggedIn,\n        updateLoginStatus: this.updateLoginStatus,\n        location: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 19\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 14\n      }\n    }), /*#__PURE__*/React.createElement(PrivateRoute, {\n      path: \"/select-modules\",\n      component: ModuleSelectionPage,\n      isLoggedIn: this.state.isLoggedIn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 14\n      }\n    }), /*#__PURE__*/React.createElement(PrivateRoute, {\n      path: \"/module-planner\",\n      component: ModulePlannerPageTemp,\n      isLoggedIn: this.state.isLoggedIn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 14\n      }\n    }), /*#__PURE__*/React.createElement(PrivateRoute, {\n      path: \"/cap-calculator\",\n      component: CAPCalculatorPage,\n      isLoggedIn: this.state.isLoggedIn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 14\n      }\n    }), /*#__PURE__*/React.createElement(PrivateRoute, {\n      path: \"/first-setting\",\n      component: FirstSetting,\n      isLoggedIn: this.state.isLoggedIn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 14\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      component: () => /*#__PURE__*/React.createElement(\"div\", {\n        className: \"display-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 39\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 66\n        }\n      }, \"404 NOT FOUND\")),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 15\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/frisciliasultan/Documents/Orbital/client/src/App.js"],"names":["$","Popper","React","ModuleSelectionPage","Login","Register","LoginPage","Switch","Route","ModTreeNav","ModulePlannerPageTemp","CAPCalculatorPage","FirstSetting","PrivateRoute","jwt_decode","setAuthToken","setCurrentUser","logoutUser","Landing","RegisterTemp","LoginTemp","PrivateRouteTemp","Dashboard","Provider","store","localStorage","jwtToken","token","decoded","dispatch","currentTime","Date","now","exp","window","location","href","totalGEMMCs","App","Component","constructor","props","state","isLoggedIn","updateLoginStatus","bind","status","setState","render"],"mappings":"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","sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport React from \"react\";\nimport { ModuleSelectionPage } from \"./Pages/Module Selection Page/ModuleSelectionPage\"\nimport { Login, Register, LoginPage } from './Pages/Login/LoginPage'\n//import \"./App.scss\";\nimport {\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport { ModTreeNav } from \"./navbar\";\nimport  ModulePlannerPageTemp  from \"./Pages/Module Planner Page/ModulePlannerPage\";\nimport { CAPCalculatorPage } from \"./Pages/CAP Calculator Page/CAPCalculatorPage\";\nimport FirstSetting from './Pages/Login/FirstSetting';\n\nimport PrivateRoute from './Components/PrivateRoute';\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\n\nimport Landing from \"./Pages/Login/Landing\"\nimport RegisterTemp from \"./Components/auth/Register\";\nimport LoginTemp from \"./Components/auth/Login\";\nimport PrivateRouteTemp from \"./Components/PrivateRoute\";\nimport Dashboard from \"./Components/dashboard/Dashboard\";\n\nimport { Provider } from \"react-redux\";\nimport store from './store';\n\n// Check for token to keep user logged in\nif (localStorage.jwtToken) {\n  // Set auth token header auth\n  const token = localStorage.jwtToken;\n  setAuthToken(token);\n  // Decode token and get user info and exp\n  const decoded = jwt_decode(token);\n  // Set user and isAuthenticated\n  store.dispatch(setCurrentUser(decoded));\n// Check for expired token\n  const currentTime = Date.now() / 1000; // to get in milliseconds\n  if (decoded.exp < currentTime) {\n    // Logout user\n    store.dispatch(logoutUser());\n    // Redirect to login\n    window.location.href = \"./login\";\n  }\n}\n\nlet totalGEMMCs = 0;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoggedIn: false\n    }\n\n    this.updateLoginStatus = this.updateLoginStatus.bind(this);\n  }\n\n  updateLoginStatus(status) {\n    this.setState({isLoggedIn: status});\n  }\n\n  render() {\n      \n       return (\n         <Provider store={store}>\n           <ModTreeNav />\n           <Landing/>\n\n           \n           <Switch>\n            {/* <Route \n                exact path=\"/\" \n                component={() => \n                  <LoginPage \n                    isLoggedIn={this.state.isLoggedIn} \n                    updateLoginStatus={this.updateLoginStatus}\n                    location/>}/> */}\n             <Route \n                exact path=\"/login\" \n                component={() => \n                  <LoginPage \n                    isLoggedIn={this.state.isLoggedIn} \n                    updateLoginStatus={this.updateLoginStatus}\n                    location/>}/>\n\n             <PrivateRoute \n                path=\"/select-modules\" \n                component={ModuleSelectionPage} \n                isLoggedIn={this.state.isLoggedIn}/>\n\n             <PrivateRoute \n                path=\"/module-planner\" \n                component={ModulePlannerPageTemp} \n                isLoggedIn={this.state.isLoggedIn}/>\n\n             <PrivateRoute \n                path=\"/cap-calculator\" \n                component={CAPCalculatorPage} \n                isLoggedIn={this.state.isLoggedIn}/> \n\n             <PrivateRoute \n                path=\"/first-setting\" \n                component={FirstSetting} \n                isLoggedIn={this.state.isLoggedIn}/> \n\n              <Route component={() => <div className=\"display-2\"><strong>404 NOT FOUND</strong></div>}/>\n           </Switch>\n         </Provider>\n   );\n    }\n}\n\n\n\nexport default App;\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}