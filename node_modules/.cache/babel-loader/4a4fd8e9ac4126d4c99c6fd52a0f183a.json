{"ast":null,"code":"var _jsxFileName = \"/Users/frisciliasultan/Documents/Orbitalhosting/src/Pages/Module Selection Page/Table Content.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { generateOptions } from \"../../utils/commonFunctions\";\nimport { Select, Empty } from \"antd\";\nimport isEmpty from \"is-empty\";\nlet semesterCount = 0;\nlet noModulesSemesterCount = 0;\nexport const TableContent = props => {\n  let totalMCs = 0; // const [modules, setModules] = useState();\n\n  const modules = props.module.filter((object, i) => object.location === props.title); //update modules\n  // useEffect(() => {\n  //     const filteredModules =  props.module.filter((object, i) => object.location === props.title);\n  //     setModules(filteredModules);\n  // }, [props.module])\n\n  const makeTable = () => {\n    if (isEmpty(modules) && (props.category !== \"capTable\" || props.lastInCategory && semesterCount === noModulesSemesterCount)) {\n      return /*#__PURE__*/React.createElement(Empty, {\n        imageStyle: {\n          margin: \"20px\"\n        },\n        description: /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 25\n          }\n        }, \"No data\"), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }\n        }), !props.category && /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 29\n          }\n        }, \"Add modules by clicking the button below!\")),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }\n      });\n    }\n\n    return modules.map((object, i) => {\n      const {\n        moduleCode,\n        title,\n        moduleCredit\n      } = object;\n\n      if (props.category === \"tables\") {\n        const desc = title.replace(/ /g, '-');\n        const link = `https://nusmods.com/modules/${moduleCode}/${desc}`;\n        totalMCs += Number(object.moduleCredit);\n        return /*#__PURE__*/React.createElement(\"tr\", {\n          key: moduleCode,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"a\", {\n          href: link,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          className: \"text-white text-decoration-none\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 37\n          }\n        }, moduleCode), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 37\n          }\n        }, title), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 37\n          }\n        }, moduleCredit + 'MCs')));\n      } else {\n        return /*#__PURE__*/React.createElement(\"tr\", {\n          className: \"cap-table-row\",\n          key: moduleCode,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }\n        }, moduleCode), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }\n        }, title), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }\n        }, moduleCredit + 'MCs'), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(Select, {\n          name: object,\n          value: object.grade || object.targetGrade,\n          onChange: (value, object) => props.handleGradeClick(value, object, props.isPast),\n          style: {\n            width: 70\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 33\n          }\n        }, generateOptions(props.gradeList, \"grade\", object))), props.isPast && /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"input\", {\n          className: \"checkbox\",\n          type: \"checkbox\",\n          checked: object.SU,\n          onChange: e => props.handleCheckboxChange(e, object),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 33\n          }\n        })), !props.category && /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: \"fa fa-trash-alt fa-border\",\n          style: {\n            cursor: \"pointer\"\n          },\n          onClick: () => props.setModuleLocation({\n            id: object.moduleCode\n          }, null, null, props.module),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 37\n          }\n        })));\n      }\n    });\n  };\n\n  const handleEmpty = () => {\n    if (props.lastInCategory) {\n      console.log('last');\n      semesterCount = 0;\n      noModulesSemesterCount = 0;\n    } else {\n      console.log('called');\n\n      if (props.category === \"capTable\") {\n        if (isEmpty(modules)) {\n          console.log('empty and not last');\n          semesterCount += 1;\n          noModulesSemesterCount += 1;\n        } else {\n          console.log('not empty and not last');\n          semesterCount += 1;\n        }\n      }\n    }\n\n    console.log(semesterCount);\n    console.log(noModulesSemesterCount);\n    return makeTable(); // console.log(props.lastInCategory)\n    //     if(isEmpty(modules)) {\n    //         console.log(props.category) \n    //         console.log(props.lastInCategory)\n    //         console.log(semesterCount)\n    //         console.log(noModulesSemesterCount)\n    //         if(props.category === \"capTable\" && !props.lastInCategory) {\n    //             console.log('empty and not last')\n    //             semesterCount += 1;\n    //             noModulesSemesterCount += 1;\n    //         } else if (!props.category || props.category === \"tables\" ||\n    //             (semesterCount === noModulesSemesterCount && props.lastInCategory)) {\n    //                 //reset sem and nomodulesem count\n    //                 console.log('empty and last')\n    //                 semesterCount = 0;\n    //                 noModulesSemesterCount = 0;\n    //                 return (\n    //                     <Empty\n    //                         imageStyle={{margin: \"20px\"}}\n    //                         description={\n    //                             <div>\n    //                                 <span>\n    //                                     No data\n    //                                 </span> \n    //                                 <br/>\n    //                                 {!props.category && (\n    //                                     <span>\n    //                                         Add modules by clicking the button below!\n    //                                     </span>\n    //                                 )}  \n    //                             </div>\n    //                             }/>\n    //                 )\n    //         } else {\n    //             console.log(\"do nth add sem\")\n    //             semesterCount += 1\n    //             return null;\n    //         }\n    //     } else if (props.category === \"capTable\" && !props.lastInCategory) {\n    //         console.log('calld')\n    //             semesterCount += 1;\n    //             return makeTable();\n    //     } else {\n    //         console.log('reset')\n    //         semesterCount = 0;\n    //         noModulesSemesterCount = 0;\n    //         return makeTable();\n    //     }\n  };\n\n  if (props.category === \"tables\") {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 21\n      }\n    }, props.title), /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table table-hover\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 25\n      }\n    }, handleEmpty())));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cap-table-header-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 17\n      }\n    }, props.displayHeader && /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 29\n      }\n    }, props.isPast ? \"Past Semester\" : \"Future Semester\"), (!props.category || props.displayHeader) && /*#__PURE__*/React.createElement(\"thead\", {\n      className: props.isPast ? \"cap-table-header\" : \"cap-table-header isPast\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 33\n      }\n    }, \"Module Code\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 33\n      }\n    }, \"Module Title\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 33\n      }\n    }, \"Modular Credits\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 33\n      }\n    }, props.isPast ? \"Grade\" : \"Target Grade\"), props.isPast && /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 50\n      }\n    }, \"S/U\"), !props.category && /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 53\n      }\n    })), /*#__PURE__*/React.createElement(\"tbody\", {\n      className: \"cap-table-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 29\n      }\n    }, props.category && !isEmpty(modules) && /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"table-semester-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 41\n      }\n    }, props.title)), handleEmpty()));\n  }\n};","map":{"version":3,"sources":["/Users/frisciliasultan/Documents/Orbitalhosting/src/Pages/Module Selection Page/Table Content.js"],"names":["React","useState","useEffect","generateOptions","Select","Empty","isEmpty","semesterCount","noModulesSemesterCount","TableContent","props","totalMCs","modules","module","filter","object","i","location","title","makeTable","category","lastInCategory","margin","map","moduleCode","moduleCredit","desc","replace","link","Number","grade","targetGrade","value","handleGradeClick","isPast","width","gradeList","SU","e","handleCheckboxChange","cursor","setModuleLocation","id","handleEmpty","console","log","displayHeader"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { generateOptions } from \"../../utils/commonFunctions\";\nimport { Select, Empty } from \"antd\";\nimport isEmpty from \"is-empty\"\n\n\nlet semesterCount = 0;\nlet noModulesSemesterCount = 0;\nexport const TableContent = (props) => {\n    let totalMCs = 0;\n    // const [modules, setModules] = useState();\n    const modules =  props.module.filter((object, i) => object.location === props.title);\n    \n    //update modules\n    // useEffect(() => {\n    //     const filteredModules =  props.module.filter((object, i) => object.location === props.title);\n    //     setModules(filteredModules);\n    // }, [props.module])\n\n    const makeTable = () => {\n        if(isEmpty(modules) && (props.category !== \"capTable\" || props.lastInCategory && semesterCount === noModulesSemesterCount)) {\n            return (\n                <Empty\n                imageStyle={{margin: \"20px\"}}\n                description={\n                    <div>\n                        <span>\n                            No data\n                        </span> \n                        <br/>\n                        {!props.category && (\n                            <span>\n                                Add modules by clicking the button below!\n                            </span>\n                        )}  \n                    </div>\n                    }\n                />\n            )\n        }\n        return (\n            modules.map((object, i) => {\n                const {moduleCode, title, moduleCredit} = object;\n\n                if(props.category === \"tables\") {\n                    const desc = title.replace(/ /g, '-');\n                    const link = `https://nusmods.com/modules/${moduleCode}/${desc}`\n                    totalMCs += Number(object.moduleCredit);\n\n                    return (\n                        <tr key={moduleCode} >\n                            <a href={link} \n                                target=\"_blank\" \n                                rel=\"noopener noreferrer\"\n                                className=\"text-white text-decoration-none\">\n                                    <td>{moduleCode}</td>\n                                    <td>{title}</td>\n                                    <td>{moduleCredit + 'MCs'}</td>\n                            </a>\n                        </tr>\n                    )   \n                } else {\n                    return (\n                        \n                        <tr className=\"cap-table-row\" key={moduleCode}>\n                            <td>{moduleCode}</td>\n                            <td>{title}</td>\n                            <td>{moduleCredit + 'MCs'}</td>\n                            <td>\n                                <Select \n                                    name={object}\n                                    value={object.grade || object.targetGrade} \n                                    onChange={(value, object) => props.handleGradeClick(value, object, props.isPast)}\n                                    style={{ width: 70 }}>\n                                    {generateOptions(props.gradeList, \"grade\", object)}\n                                </Select>\n                            </td>\n                            {props.isPast && \n                            <td>\n                                <input\n                                    className=\"checkbox\"\n                                    type=\"checkbox\"\n                                    checked={object.SU}\n                                    onChange={(e) => props.handleCheckboxChange(e, object)}/>\n                            </td>}\n                            {!props.category && (\n                                <td>\n                                    <i  \n                                        className=\"fa fa-trash-alt fa-border\"\n                                        style={{cursor: \"pointer\"}}\n                                        onClick={() => props.setModuleLocation({id: object.moduleCode}, null, null, props.module)} />\n                                </td>\n                            )}\n                        </tr>\n                    )\n                }     \n            })\n        )\n    }\n\n    const handleEmpty = () => {\n        if(props.lastInCategory) {\n            console.log('last')\n            semesterCount = 0;\n            noModulesSemesterCount = 0;\n        } else {\n            console.log('called')\n            if(props.category === \"capTable\") {\n                if(isEmpty(modules)) {\n                    console.log('empty and not last')\n                    semesterCount += 1;\n                    noModulesSemesterCount += 1;\n                } else {\n                    console.log('not empty and not last')\n                    semesterCount += 1;\n                }\n            } \n        }\n\n        console.log(semesterCount)\n        console.log(noModulesSemesterCount)\n\n\n        return makeTable();\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        // console.log(props.lastInCategory)\n        //     if(isEmpty(modules)) {\n        //         console.log(props.category) \n        //         console.log(props.lastInCategory)\n        //         console.log(semesterCount)\n        //         console.log(noModulesSemesterCount)\n        //         if(props.category === \"capTable\" && !props.lastInCategory) {\n        //             console.log('empty and not last')\n        //             semesterCount += 1;\n        //             noModulesSemesterCount += 1;\n        //         } else if (!props.category || props.category === \"tables\" ||\n        //             (semesterCount === noModulesSemesterCount && props.lastInCategory)) {\n        //                 //reset sem and nomodulesem count\n        //                 console.log('empty and last')\n        //                 semesterCount = 0;\n        //                 noModulesSemesterCount = 0;\n        //                 return (\n        //                     <Empty\n        //                         imageStyle={{margin: \"20px\"}}\n        //                         description={\n        //                             <div>\n        //                                 <span>\n        //                                     No data\n        //                                 </span> \n        //                                 <br/>\n        //                                 {!props.category && (\n        //                                     <span>\n        //                                         Add modules by clicking the button below!\n        //                                     </span>\n        //                                 )}  \n        //                             </div>\n        //                             }/>\n        //                 )\n        //         } else {\n        //             console.log(\"do nth add sem\")\n        //             semesterCount += 1\n        //             return null;\n        //         }\n        //     } else if (props.category === \"capTable\" && !props.lastInCategory) {\n        //         console.log('calld')\n        //             semesterCount += 1;\n        //             return makeTable();\n                \n        //     } else {\n        //         console.log('reset')\n        //         semesterCount = 0;\n        //         noModulesSemesterCount = 0;\n        //         return makeTable();\n        //     }\n    }\n    \n        if(props.category === \"tables\") {\n            return (\n                <div>\n                    <h3>{props.title}</h3> \n                    <table className=\"table table-hover\">\n                        <tbody>\n                            {handleEmpty()}\n                        </tbody>\n                    </table>\n                </div>\n            )\n        } else {\n            return (\n                <div className=\"cap-table-header-body\">\n                        {props.displayHeader && (\n                            <h4>{props.isPast ? \"Past Semester\" : \"Future Semester\"}</h4>\n                        )}\n                        {(!props.category || props.displayHeader) &&  \n                            (   \n                                <thead className={props.isPast ? \"cap-table-header\" : \"cap-table-header isPast\"}>\n                                <th>Module Code</th>\n                                <th>Module Title</th>\n                                <th>Modular Credits</th>\n                                <th>{props.isPast ? \"Grade\" : \"Target Grade\"}</th>\n                                {props.isPast && <th>S/U</th>}\n                                {!props.category && <th></th>}\n                                </thead>\n                            )\n                        }\n                            <tbody className=\"cap-table-body\">\n                                {props.category && !isEmpty(modules) && (\n                                    <tr>\n                                        <h6 className=\"table-semester-header\">{props.title}</h6>\n                                    </tr>\n                                )}\n                                {handleEmpty()}\n                            </tbody>\n                </div>\n            )\n            \n        }\n}\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}