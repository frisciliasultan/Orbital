{"ast":null,"code":"var _jsxFileName = \"/Users/frisciliasultan/Documents/Orbital/client/src/Pages/CAP Calculator Page/CAPCalculatorPage.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport { setSemesterOptions } from '../../actions/capActions';\nimport { updateSettings, initialSettings } from \"../../actions/settingsActions\";\nimport { generateOptions } from \"../../utils/optionGenerator\";\nimport isEmpty from 'is-empty';\n\nconst CAPCalculatorPage = props => {\n  const gradeList = [\"A+\", \"A\", \"A-\", \"B+\", \"B\", \"B-\", \"C+\", \"C\", \"D+\", \"D\", \"F\"];\n  useEffect(() => {\n    if (isEmpty(props.cap.semesterOptions) && !isEmpty(props.settings.userInfo)) {\n      const start = props.settings.userInfo.matriculationYear.substr(0, 4);\n      const end = props.settings.userInfo.targetGradYear.substr(5, 4);\n      const diff = end - start;\n      props.setSemesterOptions(diff);\n    }\n  }, [props.settings.userInfo]);\n  const generateTable = selectedModules.filter((object, i) => object.location === props.id).map((object, i) => {\n    totalMCs += Number(object.moduleCredit);\n    return /*#__PURE__*/React.createElement(ModuleCard, {\n      id: object.moduleCode,\n      location: props.id,\n      title: `${object.moduleCode}: ${object.title}`,\n      MCs: object.moduleCredit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 25\n      }\n    });\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ml-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"display-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, \"CAP Calculator\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, \"CAP at the beginning of the semester: \", props.user.name, \" \"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, \"Semester: \"), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, isEmpty(props.cap.semesterOptions) && /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 52\n    }\n  }, \"Year 1 Semester 1\"), generateOptions(props.cap.semesterOptions)), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, \"Courses taken this semester\"));\n};\n\nCAPCalculatorPage.propType = {\n  setSemesterOptions: PropTypes.func.isRequired,\n  updateSettings: PropTypes.func.isRequired,\n  initialSettings: PropTypes.func.isRequired,\n  generateOptions: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired,\n  settings: PropTypes.object.isRequired,\n  cap: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  user: state.auth.user,\n  settings: state.settings,\n  cap: state.cap\n});\n\nexport default connect(mapStateToProps, {\n  setSemesterOptions,\n  updateSettings,\n  initialSettings\n})(CAPCalculatorPage);\n{\n  /* <label>CAP: </label>\n            <input type=\"text\" name=\"prevCAP\" />\n            <label>Credits Earned: </label>\n            <input type=\"text\" name=\"prevCreditsEarned\" />\n            <br/>\n            <br/> */\n}\n{\n  /* <label>Module</label>\n            <label>Grade</label>\n            <br/>\n            <input type=\"text\" placeholder=\"Credits\"/>\n            <input type=\"text\" placeholder=\"MCs\" /> */\n}","map":{"version":3,"sources":["/Users/frisciliasultan/Documents/Orbital/client/src/Pages/CAP Calculator Page/CAPCalculatorPage.jsx"],"names":["React","useState","useEffect","connect","PropTypes","setSemesterOptions","updateSettings","initialSettings","generateOptions","isEmpty","CAPCalculatorPage","props","gradeList","cap","semesterOptions","settings","userInfo","start","matriculationYear","substr","end","targetGradYear","diff","generateTable","selectedModules","filter","object","i","location","id","map","totalMCs","Number","moduleCredit","moduleCode","title","user","name","propType","func","isRequired","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport { setSemesterOptions } from '../../actions/capActions';\nimport { updateSettings, initialSettings } from \"../../actions/settingsActions\";\nimport { generateOptions } from \"../../utils/optionGenerator\";\nimport isEmpty from 'is-empty';\n\n\nconst CAPCalculatorPage = (props) => {\n    const gradeList = [\"A+\", \"A\", \"A-\", \"B+\", \"B\", \"B-\", \"C+\", \"C\", \"D+\", \"D\", \"F\"];\n    \n    useEffect(() => {\n            if(isEmpty(props.cap.semesterOptions) && !isEmpty(props.settings.userInfo)){\n                const start = props.settings.userInfo.matriculationYear.substr(0, 4);\n                const end = props.settings.userInfo.targetGradYear.substr(5, 4);\n                const diff = end - start;\n                props.setSemesterOptions(diff);\n            }\n    }, [props.settings.userInfo])\n    \n    const generateTable = selectedModules\n        .filter((object, i) => object.location === props.id)\n        .map((object, i) => {\n                totalMCs += Number(object.moduleCredit)\n                return (<ModuleCard\n                    id={object.moduleCode}\n                    location={props.id}\n                    title={`${object.moduleCode}: ${object.title}`}\n                    MCs={object.moduleCredit}/>)});\n\n    return(\n        <div className=\"ml-4\">\n        <h1 className=\"display-3\">CAP Calculator</h1>\n        <h3>CAP at the beginning of the semester: {props.user.name} </h3>\n        {/* <h5 onClick={() => {this.setState({open: true})}}>Or click here to manually input CAP</h5> */}\n        {/* {this.state.open && (<input type=\"text\"/>)} */}\n        <label>Semester: </label>\n        <select id=\"time\">\n            {isEmpty(props.cap.semesterOptions) && <option>Year 1 Semester 1</option>}\n            {generateOptions(props.cap.semesterOptions)}\n        </select>\n        <br/>\n        \n        <h3>Courses taken this semester</h3>\n        \n        </div>\n    );\n}\n\n\nCAPCalculatorPage.propType = {\n    setSemesterOptions: PropTypes.func.isRequired,\n    updateSettings: PropTypes.func.isRequired,\n    initialSettings: PropTypes.func.isRequired,\n    generateOptions: PropTypes.func.isRequired,\n    user: PropTypes.object.isRequired,\n    settings: PropTypes.object.isRequired,\n    cap: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    user: state.auth.user,\n    settings: state.settings,\n    cap: state.cap\n});\n\nexport default connect(mapStateToProps,\n                        { setSemesterOptions, updateSettings, initialSettings })\n                        (CAPCalculatorPage);\n\n\n\n {/* <label>CAP: </label>\n            <input type=\"text\" name=\"prevCAP\" />\n            <label>Credits Earned: </label>\n            <input type=\"text\" name=\"prevCreditsEarned\" />\n            <br/>\n            <br/> */}\n\n\n\n {/* <label>Module</label>\n            <label>Grade</label>\n            <br/>\n            <input type=\"text\" placeholder=\"Credits\"/>\n            <input type=\"text\" placeholder=\"MCs\" /> */}"]},"metadata":{},"sourceType":"module"}