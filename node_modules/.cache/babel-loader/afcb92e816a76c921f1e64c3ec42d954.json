{"ast":null,"code":"var _jsxFileName = \"/Users/frisciliasultan/Documents/Orbitalhosting/src/Settings/DegreeSettings.js\";\nimport React, { useState } from \"react\";\nimport Options from \"./Options\";\nimport isEmpty from \"is-empty\";\nimport { Card } from \"react-bootstrap\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { setEditAll } from \"../actions/settingsActions\";\nimport { Spin } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\n\nconst DegreeSettings = props => {\n  const antIcon = /*#__PURE__*/React.createElement(LoadingOutlined, {\n    style: {\n      fontSize: 24\n    },\n    spin: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 21\n    }\n  });\n\n  const renderButton = () => {\n    if (!props.settings.isEditing.editAll) {\n      if (!props.settings.isEditing[1]) {\n        return /*#__PURE__*/React.createElement(\"button\", {\n          className: \"button settings-button\",\n          onClick: () => props.setEditAll(true, props.settings.isEditing, 1),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 24\n          }\n        }, \"Edit Settings\");\n      } else {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          className: \"button settings-button\",\n          onClick: () => props.handleSubmit(1),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 25\n          }\n        }, \"Save Settings\"), /*#__PURE__*/React.createElement(Spin, {\n          indicator: antIcon,\n          spinning: props.settings.isLoading,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }\n        }));\n      }\n    }\n  };\n\n  const renderMajorOptions = () => {};\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"container\",\n    id: \"degree-settings\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"card-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, \"Degree Settings\"), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table settings-table table-hover \",\n    id: \"degree-acad-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Options, {\n    editing: props.settings.isEditing[1] || props.settings.isEditing.editAll,\n    label: \"Degree\",\n    handleChange: props.handleChange,\n    name: \"major\",\n    value: props.userInput.major,\n    optionList: !isEmpty(props.settings.bachelorOptions) ? props.settings.bachelorOptions : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }), renderMajorOptions(), /*#__PURE__*/React.createElement(Options, {\n    editing: props.settings.isEditing[1] || props.settings.isEditing.editAll,\n    hidden: true,\n    label: \"Second Major\",\n    handleChange: props.handleChange,\n    name: \"secondMajors\",\n    value: props.userInput.secondMajors,\n    setUserInput: props.setUserInput,\n    optionList: !isEmpty(props.settings.secondMajorOptions) ? props.settings.secondMajorOptions : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Options, {\n    editing: props.settings.isEditing[1] || props.settings.isEditing.editAll,\n    hidden: true,\n    label: \"Minor\",\n    handleChange: props.handleChange,\n    name: \"minors\",\n    value: props.userInput.minors,\n    setUserInput: props.setUserInput,\n    optionList: !isEmpty(props.settings.minorOptions) ? props.settings.minorOptions : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }))), renderButton()));\n};\n\nDegreeSettings.propType = {\n  setEditAll: PropTypes.func.isRequired,\n  settings: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  settings: state.settings\n});\n\nexport default connect(mapStateToProps, {\n  setEditAll\n})(DegreeSettings);","map":{"version":3,"sources":["/Users/frisciliasultan/Documents/Orbitalhosting/src/Settings/DegreeSettings.js"],"names":["React","useState","Options","isEmpty","Card","PropTypes","connect","setEditAll","Spin","LoadingOutlined","DegreeSettings","props","antIcon","fontSize","renderButton","settings","isEditing","editAll","handleSubmit","isLoading","renderMajorOptions","handleChange","userInput","major","bachelorOptions","secondMajors","setUserInput","secondMajorOptions","minors","minorOptions","propType","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Options from \"./Options\";\nimport isEmpty from \"is-empty\";\nimport { Card } from \"react-bootstrap\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { setEditAll } from \"../actions/settingsActions\"\nimport { Spin } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\n\nconst DegreeSettings = (props) => {\n    const antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\n    const renderButton = () => {\n        if(!props.settings.isEditing.editAll) {\n            if(!props.settings.isEditing[1]) {\n                return <button \n                    className=\"button settings-button\" \n                    onClick={() => props.setEditAll(true, props.settings.isEditing, 1)}>\n                        Edit Settings\n                </button>\n            } else {\n                return (\n                    <div>\n                        <button \n                            className=\"button settings-button\" \n                            onClick={() => props.handleSubmit(1)}>\n                            Save Settings\n                        </button>\n                        <Spin indicator={antIcon} spinning={props.settings.isLoading}/>\n                    </div>\n                )\n            }\n        }\n    }\n\n    const renderMajorOptions = () => {\n        \n    }\n\n    return (\n        <div>\n        <Card className=\"container\" id=\"degree-settings\">\n            <h2 className=\"card-header\">Degree Settings</h2>\n\n            <table className=\"table settings-table table-hover \" id=\"degree-acad-table\">\n            <tbody>\n                {/* <Options\n                    status={props.status}\n                    editing={isEditing || props.settings.editAll}\n                    label={props.status === \"first\" ? \"Faculty : \" : `${props.status} Faculty : `}\n                    handleChange={props.handleChange}\n                    name={\"faculty\"}\n                    value={props.userInput.faculty}\n                    optionList={props.settings.facultyOptions}/> */}\n\n                <Options\n                    editing={props.settings.isEditing[1] || props.settings.isEditing.editAll}\n                    label=\"Degree\"\n                    handleChange={props.handleChange}\n                    name=\"major\"\n                    value={props.userInput.major}\n                    optionList={!isEmpty(props.settings.bachelorOptions)\n                        ? props.settings.bachelorOptions\n                            : null}/>\n                \n                {renderMajorOptions()}\n                {/* <Options \n                   editing={props.settings.isEditing[1] || props.settings.isEditing.editAll}\n                    hidden={true}\n                    label=\"Specialisation\"\n                    handleChange={props.handleChange}\n                    name=\"specialisation\"\n                    value={props.userInput.specialisation}\n                    setUserInput={props.setUserInput}\n                    optionList={!isEmpty(props.settings.bachelorOptions)\n                        ?  props.settings.bachelorOptions\n                        : null}/> */}\n\n                <Options \n                    editing={props.settings.isEditing[1] || props.settings.isEditing.editAll}\n                    hidden={true}\n                    label=\"Second Major\"\n                    handleChange={props.handleChange}\n                    name=\"secondMajors\"\n                    value={props.userInput.secondMajors}\n                    setUserInput={props.setUserInput}\n                    optionList={!isEmpty(props.settings.secondMajorOptions) \n                        ? props.settings.secondMajorOptions\n                        : null}/>\n                \n                <Options \n                    editing={props.settings.isEditing[1] || props.settings.isEditing.editAll}\n                    hidden={true}\n                    label=\"Minor\"\n                    handleChange={props.handleChange}\n                    name=\"minors\"\n                    value={props.userInput.minors}\n                    setUserInput={props.setUserInput}\n                    optionList={(!isEmpty(props.settings.minorOptions)) \n                        ? props.settings.minorOptions\n                        : null}/>\n\n            </tbody>\n        </table>\n        \n        {renderButton()}\n        </Card>\n    </div>)\n}\n\n\nDegreeSettings.propType = {\n    setEditAll: PropTypes.func.isRequired,\n    settings: PropTypes.object.isRequired\n}\n\n\nconst mapStateToProps = state => ({\n    settings: state.settings\n})\n\nexport default connect(mapStateToProps, { setEditAll }) (DegreeSettings);"]},"metadata":{},"sourceType":"module"}