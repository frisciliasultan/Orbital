{"ast":null,"code":"var _jsxFileName = \"/Users/frisciliasultan/Documents/Orbitalhosting/src/Settings/ChangePassword.jsx\";\nimport React, { useState } from 'react';\nimport { Form, Input, Button, Modal } from 'antd';\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 8\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 16\n    }\n  }\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0\n    },\n    sm: {\n      span: 16,\n      offset: 8\n    }\n  }\n};\n\nconst RegistrationForm = props => {\n  const [form] = Form.useForm(); // const onFinish = values => {\n  //   console.log('Received values of form: ', values);\n  //   props.setVisible(false);\n  // };\n\n  return /*#__PURE__*/React.createElement(Modal, {\n    visible: true,\n    title: \"Change Password\",\n    onOk: () => console.log(\"ok\"),\n    onCancel: () => console.log(\"ok\"),\n    footer: [/*#__PURE__*/React.createElement(Button, {\n      key: \"back\",\n      onClick: () => console.log(\"ok\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, \"Return\"),\n    /*#__PURE__*/\n    // <Button key=\"submit\" type=\"primary\" loading={props.auth.isLoading} onClick={handleOk}>\n    // Save\n    // </Button>,\n    React.createElement(Form.Item, Object.assign({}, tailFormItemLayout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, \"Submit\"))],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form, Object.assign({}, formItemLayout, {\n    form: form,\n    name: \"register\" // onFinish={onFinish}\n    ,\n    scrollToFirstError: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"password\",\n    label: \"Password\",\n    rules: [{\n      required: true,\n      message: 'Please input your password!'\n    }],\n    hasFeedback: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input.Password, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"confirm\",\n    label: \"Confirm Password\",\n    dependencies: ['password'],\n    hasFeedback: true,\n    rules: [{\n      required: true,\n      message: 'Please confirm your password!'\n    }, ({\n      getFieldValue\n    }) => ({\n      validator(rule, value) {\n        if (!value || getFieldValue('password') === value) {\n          return Promise.resolve();\n        }\n\n        return Promise.reject('The two passwords that you entered do not match!');\n      }\n\n    })],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input.Password, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, tailFormItemLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, \"Submit\"))));\n};\n\nexport default RegistrationForm;","map":{"version":3,"sources":["/Users/frisciliasultan/Documents/Orbitalhosting/src/Settings/ChangePassword.jsx"],"names":["React","useState","Form","Input","Button","Modal","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","RegistrationForm","props","form","useForm","console","log","required","message","getFieldValue","validator","rule","value","Promise","resolve","reject"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {\n  Form,\n  Input,\n  Button,\n  Modal\n} from 'antd';\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 8 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 16 },\n  },\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 16,\n      offset: 8,\n    },\n  },\n};\n\nconst RegistrationForm = (props) => {\n  const [form] = Form.useForm();\n\n  // const onFinish = values => {\n  //   console.log('Received values of form: ', values);\n  //   props.setVisible(false);\n  // };\n\n  return (\n    <Modal\n    visible={true}\n    title=\"Change Password\"\n    onOk={()=> console.log(\"ok\")}\n    onCancel={()=> console.log(\"ok\")}\n    footer={[\n        <Button key=\"back\" onClick={()=> console.log(\"ok\")}>\n        Return\n        </Button>,\n        // <Button key=\"submit\" type=\"primary\" loading={props.auth.isLoading} onClick={handleOk}>\n        // Save\n        // </Button>,\n        <Form.Item {...tailFormItemLayout}>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Submit\n        </Button>\n      </Form.Item>\n    ]}\n>\n    <Form\n      {...formItemLayout}\n      form={form}\n      name=\"register\"\n      // onFinish={onFinish}\n      scrollToFirstError\n    >\n\n      <Form.Item\n        name=\"password\"\n        label=\"Password\"\n        rules={[\n          {\n            required: true,\n            message: 'Please input your password!',\n          },\n        ]}\n        hasFeedback\n      >\n        <Input.Password />\n      </Form.Item>\n\n      <Form.Item\n        name=\"confirm\"\n        label=\"Confirm Password\"\n        dependencies={['password']}\n        hasFeedback\n        rules={[\n          {\n            required: true,\n            message: 'Please confirm your password!',\n          },\n          ({ getFieldValue }) => ({\n            validator(rule, value) {\n              if (!value || getFieldValue('password') === value) {\n                return Promise.resolve();\n              }\n              return Promise.reject('The two passwords that you entered do not match!');\n            },\n          }),\n        ]}\n      >\n        <Input.Password />\n      </Form.Item>\n\n      \n      <Form.Item {...tailFormItemLayout}>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Submit\n        </Button>\n      </Form.Item>\n    </Form>\n    </Modal>          \n  );\n};\n\nexport default RegistrationForm;"]},"metadata":{},"sourceType":"module"}