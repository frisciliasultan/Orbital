{"ast":null,"code":"var _jsxFileName = \"/Users/frisciliasultan/Documents/Orbitalhosting/src/Pages/Login/Login.js\";\nimport React, { useState, useEffect, useReducer } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../../actions/authActions\";\nimport isEmpty from \"is-empty\";\nimport classnames from \"classnames\";\nimport Facebook from \"./Facebook\";\nimport Google from \"./Google\";\n\nconst Login = props => {\n  const [userInput, setUserInput] = useReducer((state, newState) => ({ ...state,\n    ...newState\n  }), {\n    email: \"\",\n    password: \"\",\n    errors: {}\n  });\n  useEffect(() => {\n    // If logged in and not first time registering and initial setup (current AY, userInfo) done, \n    // if user navigates to Login page, should redirect them to module planner\n    if (props.auth.isAuthenticated && !props.auth.firstTimeRegistered) {\n      props.history.push(\"/module-planner\");\n    }\n  }, [props.auth.isAuthenticated]);\n  useEffect(() => {\n    if (props.errors) {\n      setUserInput({\n        errors: props.errors\n      });\n    }\n  }, [props.errors]);\n\n  const onChange = e => {\n    const {\n      id,\n      value\n    } = e.target;\n    setUserInput({\n      [id]: value\n    });\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const userData = {\n      email: userInput.email,\n      password: userInput.password\n    };\n    props.loginUser(userData, false, false); // since we handle the redirect within our component, we don't need to pass in this.props.history as a parameter\n  };\n\n  const {\n    errors\n  } = userInput;\n  return /*#__PURE__*/React.createElement(\"form\", {\n    noValidate: true,\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, \"Sign in\"), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"social-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Facebook, {\n    source: \"login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Google, {\n    source: \"login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#\",\n    class: \"social\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    class: \"fab fa-instagram\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 42\n    }\n  }))), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, \"or use your account\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: onChange,\n    value: userInput.email,\n    error: errors.email,\n    id: \"email\",\n    type: \"email\",\n    placeholder: \"Email\",\n    className: classnames(\"\", {\n      invalid: errors.email || errors.emailnotfound\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, errors.email, errors.emailnotfound), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: onChange,\n    value: userInput.password,\n    error: errors.password,\n    id: \"password\",\n    type: \"password\",\n    placeholder: \"Password\",\n    className: classnames(\"\", {\n      invalid: errors.password || errors.passwordincorrect\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, errors.password, errors.passwordincorrect), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, \"Forgot your password?\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, \"Sign In\"));\n};\n\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n  settings: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors,\n  settings: state.settings\n});\n\nexport default connect(mapStateToProps, {\n  loginUser\n})(withRouter(Login));","map":{"version":3,"sources":["/Users/frisciliasultan/Documents/Orbitalhosting/src/Pages/Login/Login.js"],"names":["React","useState","useEffect","useReducer","withRouter","PropTypes","connect","loginUser","isEmpty","classnames","Facebook","Google","Login","props","userInput","setUserInput","state","newState","email","password","errors","auth","isAuthenticated","firstTimeRegistered","history","push","onChange","e","id","value","target","onSubmit","preventDefault","userData","invalid","emailnotfound","color","passwordincorrect","propTypes","func","isRequired","object","settings","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useReducer } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../../actions/authActions\";\nimport isEmpty from \"is-empty\";\nimport classnames from \"classnames\";\nimport Facebook from \"./Facebook\";\nimport Google from \"./Google\";\n\n\nconst Login = (props) => {\n  \n  const [userInput, setUserInput] = useReducer(\n    (state, newState) => ({...state, ...newState}),\n    {\n      email: \"\",\n      password: \"\",\n      errors: {}\n    }\n  );\n  \n  useEffect(() => {\n    // If logged in and not first time registering and initial setup (current AY, userInfo) done, \n    // if user navigates to Login page, should redirect them to module planner\n    if(props.auth.isAuthenticated && !props.auth.firstTimeRegistered ) {\n      props.history.push(\"/module-planner\");\n    }\n  }, [props.auth.isAuthenticated]);\n\n  useEffect(() => {\n    if (props.errors) {\n      setUserInput({errors: props.errors})\n    }\n  }, [props.errors]);\n\n  const onChange = e => {\n    const { id, value } = e.target; \n    setUserInput({[id]: value});\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const userData = {\n          email: userInput.email,\n          password: userInput.password\n        };  \n    props.loginUser(userData, false, false); // since we handle the redirect within our component, we don't need to pass in this.props.history as a parameter\n  };\n\n  const { errors } = userInput;\n\n  return (\n      <form noValidate onSubmit={onSubmit}>\n          <h1>Sign in</h1>\n          <div class=\"social-container\">\n              <Facebook source=\"login\"/>\n              <Google source=\"login\"/>\n              <a href=\"#\" class=\"social\"><i class=\"fab fa-instagram\"></i></a>\n          </div>\n          <span>or use your account</span>\n\n          <input\n            onChange={onChange}\n            value={userInput.email}\n            error={errors.email}\n            id=\"email\"\n            type=\"email\"\n            placeholder=\"Email\"\n            className={classnames(\"\", {\n              invalid: errors.email || errors.emailnotfound\n            })}\n          />\n          <span style={{color: \"red\"}}>\n            {errors.email}\n            {errors.emailnotfound}\n          </span>\n\n          <input\n            onChange={onChange}\n            value={userInput.password}\n            error={errors.password}\n            id=\"password\"\n            type=\"password\"\n            placeholder=\"Password\"\n            className={classnames(\"\", {\n              invalid: errors.password || errors.passwordincorrect\n            })}\n          />\n          <span style={{color: \"red\"}}>\n            {errors.password}\n            {errors.passwordincorrect}\n          </span>\n\n          <a href=\"#\">Forgot your password?</a>\n          <button type=\"submit\">Sign In</button>\n      </form>\n  );\n}\n\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n  settings: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors,\n  settings: state.settings\n});\n\nexport default connect(\n  mapStateToProps,\n  { loginUser }\n)(withRouter(Login));"]},"metadata":{},"sourceType":"module"}