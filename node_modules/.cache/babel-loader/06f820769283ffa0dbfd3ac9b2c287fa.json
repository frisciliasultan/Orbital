{"ast":null,"code":"var _jsxFileName = \"/Users/frisciliasultan/Documents/Orbital/client/src/App.js\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport React from \"react\";\nimport { ModuleSelectionPage } from \"./Pages/Module Selection Page/ModuleSelectionPage\";\nimport { LoginPage } from './Pages/Login/LoginPage';\nimport \"./login.css\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { PrivateNav } from './Components/Navbar/PrivateNav';\nimport { PublicNav } from './Components/Navbar/PublicNav';\nimport ModulePlannerPageTemp from \"./Pages/Module Planner Page/ModulePlannerPage\";\nimport CAPCalculatorPage from \"./Pages/CAP Calculator Page/CAPCalculatorPage\";\nimport AcadSettings from './Settings/AcadSettings';\nimport PrivateRoute from './Components/PrivateRoute';\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\nimport { initialSettings, setCurrentSemester } from \"./actions/settingsActions\";\nimport PrivateRouteTemp from \"./Components/PrivateRoute\";\nimport Dashboard from \"./Components/dashboard/Dashboard\";\nimport ServerError from './Pages/Error Page/ServerError';\nimport store from './store';\nimport { connect } from 'react-redux';\nlet totalGEMMCs = 0; // Check for token to keep user logged in\n\nif (localStorage.jwtToken) {\n  // Set auth token header auth\n  const token = localStorage.jwtToken;\n  setAuthToken(token); // Decode token and get user info and exp\n\n  const decoded = jwt_decode(token); // Set user and isAuthenticated\n\n  store.dispatch(setCurrentUser(decoded, false)); // Set current AY and semester\n\n  const time = new Date();\n  const month = time.getMonth() + 1;\n  const year = time.getFullYear();\n  const isSem2 = month <= 7;\n  let currentSemester;\n  let currentAY;\n\n  if (isSem2) {\n    currentAY = `${year - 1}/${year}`;\n    currentSemester = \"Semester 2\";\n  } else {\n    currentAY = `${year}/${year + 1}`;\n    currentSemester = \"Semester 1\";\n  }\n\n  store.dispatch(setCurrentSemester(currentAY, currentSemester)); // Check for expired token\n\n  const currentTime = Date.now() / 1000; // to get in milliseconds\n\n  if (decoded.exp < currentTime) {\n    // Logout user\n    store.dispatch(logoutUser()); // Redirect to login\n\n    window.location.href = \"./login\";\n  }\n}\n\nclass App extends React.Component {\n  componentWillMount() {\n    // Set user academic info \n    store.dispatch(initialSettings());\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, this.props.isAuthenticated ? /*#__PURE__*/React.createElement(PrivateNav, {\n      class: \"navbar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 41\n      }\n    }) : /*#__PURE__*/React.createElement(PublicNav, {\n      class: \"navbar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 73\n      }\n    }), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: LoginPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/login\",\n      component: LoginPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(PrivateRouteTemp, {\n      exact: true,\n      path: \"/dashboard\",\n      component: Dashboard,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(PrivateRouteTemp, {\n      exact: true,\n      path: \"/select-modules\",\n      component: ModuleSelectionPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(PrivateRouteTemp, {\n      exact: true,\n      path: \"/module-planner\",\n      component: ModulePlannerPageTemp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(PrivateRouteTemp, {\n      exact: true,\n      path: \"/cap-calculator\",\n      component: CAPCalculatorPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(PrivateRouteTemp, {\n      exact: true,\n      path: \"/settings/academics\",\n      component: AcadSettings,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/500-error\",\n      component: ServerError,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      component: () => /*#__PURE__*/React.createElement(\"div\", {\n        className: \"display-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 64\n        }\n      }, \"404 NOT FOUND\")),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps)(App);","map":{"version":3,"sources":["/Users/frisciliasultan/Documents/Orbital/client/src/App.js"],"names":["React","ModuleSelectionPage","LoginPage","Switch","Route","PrivateNav","PublicNav","ModulePlannerPageTemp","CAPCalculatorPage","AcadSettings","PrivateRoute","jwt_decode","setAuthToken","setCurrentUser","logoutUser","initialSettings","setCurrentSemester","PrivateRouteTemp","Dashboard","ServerError","store","connect","totalGEMMCs","localStorage","jwtToken","token","decoded","dispatch","time","Date","month","getMonth","year","getFullYear","isSem2","currentSemester","currentAY","currentTime","now","exp","window","location","href","App","Component","componentWillMount","render","props","isAuthenticated","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport React from \"react\";\nimport { ModuleSelectionPage } from \"./Pages/Module Selection Page/ModuleSelectionPage\"\nimport { LoginPage } from './Pages/Login/LoginPage'\nimport \"./login.css\";\nimport {\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nimport { PrivateNav } from './Components/Navbar/PrivateNav';\nimport { PublicNav } from './Components/Navbar/PublicNav';\nimport  ModulePlannerPageTemp  from \"./Pages/Module Planner Page/ModulePlannerPage\";\nimport  CAPCalculatorPage  from \"./Pages/CAP Calculator Page/CAPCalculatorPage\";\nimport AcadSettings from './Settings/AcadSettings';\n\nimport PrivateRoute from './Components/PrivateRoute';\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\nimport { initialSettings, setCurrentSemester } from \"./actions/settingsActions\";\n\nimport PrivateRouteTemp from \"./Components/PrivateRoute\";\nimport Dashboard from \"./Components/dashboard/Dashboard\";\n\nimport ServerError from './Pages/Error Page/ServerError';\n\nimport store from './store';\nimport { connect } from 'react-redux';\n\n\nlet totalGEMMCs = 0;\n\n// Check for token to keep user logged in\nif (localStorage.jwtToken) {\n  // Set auth token header auth\n  const token = localStorage.jwtToken;\n  setAuthToken(token);\n\n  // Decode token and get user info and exp\n  const decoded = jwt_decode(token);\n\n  // Set user and isAuthenticated\n  store.dispatch(setCurrentUser(decoded, false));\n\n    \n\n    // Set current AY and semester\n    const time = new Date();\n    const month = time.getMonth() + 1;\n    const year = time.getFullYear();\n    const isSem2 = (month <= 7);\n    let currentSemester;\n    let currentAY;\n\n    if(isSem2) {\n        currentAY = `${year - 1}/${year}`\n        currentSemester = \"Semester 2\"\n    } else {\n        currentAY = `${year}/${year + 1}`\n        currentSemester = \"Semester 1\"\n    }\n    store.dispatch(setCurrentSemester(currentAY, currentSemester));\n    \n// Check for expired token\n  const currentTime = Date.now() / 1000; // to get in milliseconds\n  if (decoded.exp < currentTime) {\n    // Logout user\n    store.dispatch(logoutUser());\n    // Redirect to login\n    window.location.href = \"./login\";\n  }\n}\n\nclass App extends React.Component {\n  componentWillMount () {\n    // Set user academic info \n    store.dispatch(initialSettings());\n  }\n\n  render() {\n       return (\n        <div>\n          {this.props.isAuthenticated ? <PrivateNav class=\"navbar\" /> : <PublicNav class=\"navbar\" />}\n          \n          \n\n          <Switch>\n          <Route exact path=\"/\" component={LoginPage} />\n          <Route exact path=\"/login\" component={LoginPage} />\n            <PrivateRouteTemp \n              exact path=\"/dashboard\" \n              component={Dashboard} />\n\n            <PrivateRouteTemp \n                exact path=\"/select-modules\" \n                component={ModuleSelectionPage} />\n\n            <PrivateRouteTemp \n                exact path=\"/module-planner\" \n                component={ModulePlannerPageTemp} />\n\n            <PrivateRouteTemp \n                exact path=\"/cap-calculator\" \n                component={CAPCalculatorPage} /> \n\n            <PrivateRouteTemp \n                exact path=\"/settings/academics\" \n                component={AcadSettings} /> \n\n            <Route exact path=\"/500-error\" component={ServerError}/>\n            <Route component={() => <div className=\"display-2\"><strong>404 NOT FOUND</strong></div>}/>\n            \n          </Switch>\n\n           </div>\n\n   );\n    }\n}\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n})\n\nexport default connect(mapStateToProps)(App);\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}