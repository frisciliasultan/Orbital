{"ast":null,"code":"import axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\nimport { GET_ERRORS, SET_CURRENT_USER, USER_LOADING, USER_REGISTERED } from \"./types\";\nimport { setCurrentSemester, initialSettings, cleanUpSettings } from \"./settingsActions\";\nimport { cleanUpModPlan } from \"./modplanActions\";\nimport { cleanUpCAP } from \"./capActions\"; // Register User\n\nexport const registerUser = (userData, social) => dispatch => {\n  const link = social ? \"http://172.19.162.53:3000/user/sociallogin\" : \"http://172.19.162.53:3000/user/register\";\n  axios.defaults.timeout = 2000; // //indicate beginnning of request\n  // dispatch(setUserLoading(true));\n\n  console.log(\"registered\"); //fetching\n\n  axios.post(link, userData) //set firstTimeRegistered to true\n  .then(res => dispatch(setUserRegistered())).catch(err => {\n    if (err.response) {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    } else {\n      console.log(err); // window.location.replace(\"/500-error\")\n    }\n  });\n}; // Login - get user token\n\nexport const loginUser = (userData, status, social) => dispatch => {\n  const link = social ? \"http://172.19.162.53:3000/user/sociallogin\" : \"http://172.19.162.53:3000/user/login\"; //indicate beginnning of request\n\n  dispatch(setUserLoading(true));\n  axios.defaults.timeout = 2000; //fetching\n\n  axios.post(link, userData).then(res => {\n    // Set token to localStorage\n    const {\n      token\n    } = res.data;\n    localStorage.setItem(\"jwtToken\", token); // Set token to Auth header\n\n    setAuthToken(token); // Decode token to get user data\n\n    const decoded = jwt_decode(token); // Set current user\n\n    dispatch(setCurrentUser(decoded, status, social)); //Set userInfo\n    // dispatch(initialSettings());\n    //Set current AY and sem\n\n    const time = new Date();\n    const month = time.getMonth() + 1;\n    const year = time.getFullYear();\n    const isSem2 = month <= 7;\n    let currentSemester;\n    let currentAY;\n\n    if (isSem2) {\n      currentAY = `${year - 1}/${year}`;\n      currentSemester = \"Semester 2\";\n    } else {\n      currentAY = `${year}/${year + 1}`;\n      currentSemester = \"Semester 1\";\n    }\n\n    dispatch(setCurrentSemester(currentAY, currentSemester, month));\n  }).then(res => dispatch(initialSettings())) //Indicate end of request\n  // .then(res => \n  // dispatch(setUserLoading(false))) \n  .catch(err => {\n    //end of request \n    dispatch(setUserLoading(false)); //get error information\n\n    if (err.response) {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    } else {\n      //if server error redirect to error page\n      // window.location.replace(\"/500-error\")\n      console.log(err);\n    }\n  });\n}; // Set logged in user\n\nexport const setCurrentUser = (decoded, status, social) => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded,\n    firstTimeRegistered: status,\n    socialLogin: social\n  };\n}; // User loading\n\nexport const setUserLoading = status => {\n  return {\n    type: USER_LOADING,\n    payload: status\n  };\n}; // User registered\n\nexport const setUserRegistered = () => {\n  return {\n    type: USER_REGISTERED\n  };\n}; // Log user out\n\nexport const logoutUser = () => dispatch => {\n  // Remove token from local storage\n  localStorage.removeItem(\"jwtToken\"); // Remove auth header for future requests\n\n  setAuthToken(false); // Set current user to empty object {} which will set isAuthenticated to false\n\n  dispatch(setCurrentUser({}, false));\n  dispatch(cleanUpSettings());\n  dispatch(cleanUpModPlan());\n  dispatch(cleanUpCAP());\n};\nexport const deleteUser = () => dispatch => {\n  axios.delete(\"http://172.19.162.53:3000/account\").then(res => dispatch(logoutUser())).catch(err => console.log(err));\n};","map":{"version":3,"sources":["/Users/frisciliasultan/Documents/Orbital/client/src/actions/authActions.js"],"names":["axios","setAuthToken","jwt_decode","GET_ERRORS","SET_CURRENT_USER","USER_LOADING","USER_REGISTERED","setCurrentSemester","initialSettings","cleanUpSettings","cleanUpModPlan","cleanUpCAP","registerUser","userData","social","dispatch","link","defaults","timeout","console","log","post","then","res","setUserRegistered","catch","err","response","type","payload","data","loginUser","status","setUserLoading","token","localStorage","setItem","decoded","setCurrentUser","time","Date","month","getMonth","year","getFullYear","isSem2","currentSemester","currentAY","firstTimeRegistered","socialLogin","logoutUser","removeItem","deleteUser","delete"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\nimport {\n  GET_ERRORS,\n  SET_CURRENT_USER,\n  USER_LOADING,\n  USER_REGISTERED,\n} from \"./types\";\nimport { setCurrentSemester, initialSettings, cleanUpSettings } from \"./settingsActions\";\nimport { cleanUpModPlan } from \"./modplanActions\";\nimport { cleanUpCAP } from \"./capActions\";\n\n// Register User\nexport const registerUser = (userData, social) => dispatch => {\n  const link = social ? \"http://172.19.162.53:3000/user/sociallogin\" : \"http://172.19.162.53:3000/user/register\"\n  axios.defaults.timeout = 2000;\n\n  // //indicate beginnning of request\n  // dispatch(setUserLoading(true));\n  console.log(\"registered\")\n  //fetching\n  axios\n    .post(link, userData)\n    //set firstTimeRegistered to true\n    .then(res => dispatch(setUserRegistered())) \n    .catch(err => {\n      if(err.response) {\n        dispatch({\n          type: GET_ERRORS,\n          payload: err.response.data\n        })\n      }\n\n      else {\n        console.log(err);\n        // window.location.replace(\"/500-error\")\n      }\n    }\n    );\n};\n\n// Login - get user token\nexport const loginUser = (userData, status, social) => dispatch => {\n  const link = social ? \"http://172.19.162.53:3000/user/sociallogin\" : \"http://172.19.162.53:3000/user/login\"\n  \n  //indicate beginnning of request\n  dispatch(setUserLoading(true));\n\n  axios.defaults.timeout = 2000;\n  \n  //fetching\n  axios\n    .post(link, userData)\n    .then(res => {\n      // Set token to localStorage\n      const { token } = res.data;\n      localStorage.setItem(\"jwtToken\", token);\n\n      // Set token to Auth header\n      setAuthToken(token);\n\n      // Decode token to get user data\n      const decoded = jwt_decode(token);\n\n      // Set current user\n      dispatch(setCurrentUser(decoded, status, social));\n\n      //Set userInfo\n      // dispatch(initialSettings());\n\n      //Set current AY and sem\n      const time = new Date();\n      const month = time.getMonth() + 1;\n      const year = time.getFullYear();\n      const isSem2 = (month <= 7);\n      let currentSemester;\n      let currentAY;\n\n      if(isSem2) {\n          currentAY = `${year - 1}/${year}`\n          currentSemester = \"Semester 2\"\n      } else {\n          currentAY = `${year}/${year + 1}`\n          currentSemester = \"Semester 1\"\n      }\n        dispatch(setCurrentSemester(currentAY, currentSemester, month));\n      })\n    .then(res => dispatch(initialSettings()))\n    //Indicate end of request\n    // .then(res => \n      // dispatch(setUserLoading(false))) \n\n    .catch(err => {\n      //end of request \n      dispatch(setUserLoading(false)); \n\n      //get error information\n      if(err.response) {\n        dispatch({\n          type: GET_ERRORS,\n          payload: err.response.data\n        })\n      } else {\n        //if server error redirect to error page\n        // window.location.replace(\"/500-error\")\n        console.log(err);\n      } \n    \n    }\n    );\n};\n\n// Set logged in user\nexport const setCurrentUser = (decoded, status, social) => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded,\n    firstTimeRegistered: status,\n    socialLogin: social\n  };\n};\n\n// User loading\nexport const setUserLoading = (status) => {\n  return {\n    type: USER_LOADING,\n    payload: status\n  };\n};\n\n// User registered\nexport const setUserRegistered = () => {\n  return {\n    type: USER_REGISTERED\n  };\n};\n\n// Log user out\nexport const logoutUser = () => dispatch => {\n  // Remove token from local storage\n  localStorage.removeItem(\"jwtToken\");\n  // Remove auth header for future requests\n  setAuthToken(false);\n  // Set current user to empty object {} which will set isAuthenticated to false\n  dispatch(setCurrentUser({}, false));\n  dispatch(cleanUpSettings());\n  dispatch(cleanUpModPlan());\n  dispatch(cleanUpCAP());\n\n};\n\nexport const deleteUser = () => dispatch => {\n  axios.delete(\"http://172.19.162.53:3000/account\")\n    .then(res => dispatch(logoutUser()))\n    .catch(err => console.log(err))\n}"]},"metadata":{},"sourceType":"module"}