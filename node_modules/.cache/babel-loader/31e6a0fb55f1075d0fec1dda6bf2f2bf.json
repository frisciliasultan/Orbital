{"ast":null,"code":"var _jsxFileName = \"/Users/frisciliasultan/Documents/Orbitalhosting/src/Pages/Module Planner Page/ModulePlannerPage.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport Board from './Board';\nimport Rules from './Rules';\nimport TrashBox from './TrashBox';\nimport './plannertemp.css';\nimport { Button, Card } from 'react-bootstrap';\nimport { Alert, Spin, message } from \"antd\";\nimport { HTML5Backend as Backend } from 'react-dnd-html5-backend';\nimport { DndProvider } from 'react-dnd';\nimport { connect } from 'react-redux';\nimport { callBackendAPI, setCallBackendNow, setSelectedModules, evalRules, setRules } from '../../actions/modplanActions';\nimport { updateSettings, initialSettings } from \"../../actions/settingsActions\";\nimport { removeSuccess } from \"../../actions/successActions\";\nimport { handleSaveClick, generateObject } from \"../../utils/commonFunctions\";\nimport PropTypes from 'prop-types';\nimport isEmpty from 'is-empty';\nimport LoadingDots from '../Loading Page/LoadingDots';\nimport { LoadingOutlined } from '@ant-design/icons';\n\nconst ModulePlannerPageTemp = props => {\n  const module = props.modplan.modules;\n  const [ruleFunction, setRuleFunction] = useState();\n  const [alert, setAlert] = useState(false);\n  const antIcon = /*#__PURE__*/React.createElement(LoadingOutlined, {\n    style: {\n      fontSize: 24\n    },\n    spin: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 21\n    }\n  });\n  useEffect(() => {\n    const fetchRules = async () => {\n      const evalfunc = await props.callBackendAPI(\"Rules\", props.settings.userInfo.modPlan, props.history);\n      setRuleFunction(evalfunc);\n    };\n\n    if (!isEmpty(props.settings.userInfo)) {\n      if (isEmpty(props.modplan.rules)) {\n        fetchRules();\n      }\n\n      if (!isEmpty(props.settings.userInfo.modPlan) && isEmpty(props.modplan.selectedModules)) {\n        props.setSelectedModules(null, props.settings.userInfo.modPlan, props.history);\n      }\n    }\n  }, [props.settings.userInfo]);\n  useEffect(() => {\n    if (isEmpty(props.modplan.modules)) {\n      props.callBackendAPI('NUSMods', null, props.history);\n    }\n  }, []);\n\n  const handleEvalButtonClick = () => {\n    const modules = props.modplan.selectedModules;\n\n    if (!isEmpty(modules)) {\n      props.setCallBackendNow(true);\n      const modplan = modules.map(obj => {\n        return obj.moduleCode;\n      });\n\n      const asyncEvalRules = async () => {\n        const newEvaluatedRules = await evalRules(ruleFunction, modplan);\n        console.log(newEvaluatedRules);\n        props.setRules(newEvaluatedRules);\n      };\n\n      asyncEvalRules();\n    } else {\n      message.warning({\n        content: 'Please add modules before evaluating'\n      });\n      message.config({\n        maxCount: 1,\n        duration: .7,\n        top: '70px'\n      });\n    }\n  };\n\n  return isEmpty(props.settings.userInfo) ? /*#__PURE__*/React.createElement(LoadingDots, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(DndProvider, {\n    backend: Backend,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 16\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-module-planner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    id: \"module-planner-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, \"Module Planner\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"year-display\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, !isEmpty(props.settings.userInfo.matriculationYear) && generateObject(props.settings.userInfo.matriculationYear, props.settings.userInfo.targetGradYear, \"yearDisplay\", module)), /*#__PURE__*/React.createElement(TrashBox, {\n    module: module,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    className: \"button\",\n    id: \"eval-button\",\n    onClick: () => handleEvalButtonClick(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  }, \"Evaluate\"), /*#__PURE__*/React.createElement(Button, {\n    className: \"button\",\n    onClick: () => handleSaveClick(props),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }, \"Save\"), !isEmpty(props.success) && /*#__PURE__*/React.createElement(Alert, {\n    message: props.success,\n    type: \"success\",\n    showIcon: true,\n    closable: true,\n    style: {\n      margin: \"15px 0px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 25\n    }\n  }), !isEmpty(props.success) && setTimeout(props.removeSuccess, 4000) && clearTimeout(setTimeout(props.removeSuccess, 2000)), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 21\n    }\n  }, \"Click on each requirement for further information\"), /*#__PURE__*/React.createElement(Spin, {\n    indicator: antIcon,\n    tip: \"Loading...\",\n    spinning: props.modplan.loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"container rule-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Card.Title, {\n    className: \"card-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 29\n    }\n  }, \"Degree Requirements\"), /*#__PURE__*/React.createElement(Rules, {\n    rules: props.modplan.rules,\n    settings: props.settings,\n    ruleFunction: ruleFunction,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 21\n    }\n  })));\n};\n\nModulePlannerPageTemp.propTypes = {\n  callBackendAPI: PropTypes.func.isRequired,\n  setCallBackendNow: PropTypes.func.isRequired,\n  updateSettings: PropTypes.func.isRequired,\n  removeSuccess: PropTypes.func.isRequired,\n  modplan: PropTypes.object.isRequired,\n  settings: PropTypes.object.isRequired,\n  cap: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  settings: state.settings,\n  cap: state.cap,\n  modplan: state.modplan,\n  success: state.success\n});\n\nexport default connect(mapStateToProps, {\n  callBackendAPI,\n  setCallBackendNow,\n  updateSettings,\n  initialSettings,\n  setSelectedModules,\n  removeSuccess,\n  setRules\n})(ModulePlannerPageTemp);","map":{"version":3,"sources":["/Users/frisciliasultan/Documents/Orbitalhosting/src/Pages/Module Planner Page/ModulePlannerPage.jsx"],"names":["React","useEffect","useState","Board","Rules","TrashBox","Button","Card","Alert","Spin","message","HTML5Backend","Backend","DndProvider","connect","callBackendAPI","setCallBackendNow","setSelectedModules","evalRules","setRules","updateSettings","initialSettings","removeSuccess","handleSaveClick","generateObject","PropTypes","isEmpty","LoadingDots","LoadingOutlined","ModulePlannerPageTemp","props","module","modplan","modules","ruleFunction","setRuleFunction","alert","setAlert","antIcon","fontSize","fetchRules","evalfunc","settings","userInfo","modPlan","history","rules","selectedModules","handleEvalButtonClick","map","obj","moduleCode","asyncEvalRules","newEvaluatedRules","console","log","warning","content","config","maxCount","duration","top","matriculationYear","targetGradYear","success","margin","setTimeout","clearTimeout","loading","propTypes","func","isRequired","object","cap","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Board from './Board';\nimport Rules from './Rules';\nimport TrashBox from './TrashBox';\nimport './plannertemp.css';\nimport { Button, Card } from 'react-bootstrap';\nimport { Alert, Spin, message } from \"antd\";\nimport { HTML5Backend as Backend } from 'react-dnd-html5-backend';\nimport { DndProvider } from 'react-dnd';\nimport { connect } from 'react-redux';\nimport { callBackendAPI, setCallBackendNow, setSelectedModules, evalRules, setRules } from '../../actions/modplanActions';\nimport { updateSettings, initialSettings } from \"../../actions/settingsActions\";\nimport { removeSuccess } from \"../../actions/successActions\";\nimport { handleSaveClick, generateObject } from \"../../utils/commonFunctions\";\nimport PropTypes from 'prop-types';\nimport isEmpty from 'is-empty'\nimport LoadingDots from '../Loading Page/LoadingDots';\nimport { LoadingOutlined } from '@ant-design/icons';\n\n\n\nconst ModulePlannerPageTemp = (props) => {\n    const module = props.modplan.modules;\n    const [ruleFunction, setRuleFunction] = useState();\n    const [alert, setAlert] = useState(false);\n    const antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\n\n    useEffect(() => {\n        const fetchRules = async () => {\n            const evalfunc = await props.callBackendAPI(\"Rules\", props.settings.userInfo.modPlan, props.history);\n            setRuleFunction(evalfunc);\n        } \n        if(!isEmpty(props.settings.userInfo)) {\n            if(isEmpty(props.modplan.rules)) {\n                fetchRules();\n            }\n\n            if(!isEmpty(props.settings.userInfo.modPlan) && isEmpty(props.modplan.selectedModules)) {   \n                props.setSelectedModules(null, props.settings.userInfo.modPlan, props.history);\n            }\n        }\n    }, [props.settings.userInfo])\n\n    useEffect(() => {\n        if(isEmpty(props.modplan.modules)){\n            props.callBackendAPI('NUSMods', null, props.history);\n        } \n    }, [])\n\n    const handleEvalButtonClick = () => {\n        const modules = props.modplan.selectedModules;\n        if(!isEmpty(modules)) {\n            props.setCallBackendNow(true);\n            const modplan = modules.map((obj) => {\n                return obj.moduleCode\n            });\n            const asyncEvalRules = async () => {\n                const newEvaluatedRules = await evalRules(ruleFunction, modplan);\n                console.log(newEvaluatedRules)\n                props.setRules(newEvaluatedRules);\n            }\n            asyncEvalRules();\n        } else {\n            message.warning({\n                content: 'Please add modules before evaluating',\n              })\n      \n              message.config({\n                maxCount: 1,\n                duration: .7,\n                top: '70px',\n              })\n        }\n    }\n\n    return (\n        isEmpty(props.settings.userInfo) \n            ? <LoadingDots/>\n            : (<DndProvider backend={Backend} >\n                <div className=\"container-module-planner\">\n                    <h3 id=\"module-planner-title\">Module Planner</h3>\n                    <div className=\"year-display\">\n                    {!isEmpty(props.settings.userInfo.matriculationYear) \n                        && generateObject(props.settings.userInfo.matriculationYear, \n                                props.settings.userInfo.targetGradYear, \n                                \"yearDisplay\",\n                                module\n                                )}\n                    </div>\n                    \n                    <TrashBox\n                            module={module}/>\n    \n    \n                    <br/>\n    \n                    <Button className=\"button\" id=\"eval-button\" onClick={() => handleEvalButtonClick()}>Evaluate</Button>\n\n                    <Button className=\"button\" onClick={() => handleSaveClick(props)} >Save</Button>\n                    \n                    {!isEmpty(props.success) && \n                        <Alert \n                            message={props.success} \n                            type=\"success\" \n                            showIcon \n                            closable\n                            style={{margin: \"15px 0px\"}} />\n                    }\n                    \n                    {!isEmpty(props.success) && \n                        setTimeout(props.removeSuccess, 4000) &&\n                        clearTimeout(setTimeout(props.removeSuccess, 2000))}\n                    <br/>\n                    <br/>\n                    <p>Click on each requirement for further information</p>\n                    \n                    <Spin indicator={antIcon} tip=\"Loading...\" spinning={props.modplan.loading}>\n                        <Card className=\"container rule-container\">\n                            <Card.Title className=\"card-title\">Degree Requirements</Card.Title>\n                           \n                                <Rules\n                                    rules={props.modplan.rules}\n                                    settings={props.settings}\n                                    ruleFunction={ruleFunction}/>\n                                 \n                        </Card>\n                        </Spin>\n                    <br/>\n                </div>\n            </DndProvider>)\n    )\n}\n\nModulePlannerPageTemp.propTypes = {\n    callBackendAPI: PropTypes.func.isRequired,\n    setCallBackendNow: PropTypes.func.isRequired,\n    updateSettings: PropTypes.func.isRequired,\n    removeSuccess: PropTypes.func.isRequired,\n    modplan: PropTypes.object.isRequired,\n    settings: PropTypes.object.isRequired,\n    cap: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    settings: state.settings,\n    cap: state.cap,\n    modplan: state.modplan,\n    success: state.success,\n});\n\nexport default connect(mapStateToProps, \n                    { callBackendAPI, setCallBackendNow, updateSettings, initialSettings, \n                        setSelectedModules, removeSuccess, setRules  }) \n                    (ModulePlannerPageTemp);\n"]},"metadata":{},"sourceType":"module"}