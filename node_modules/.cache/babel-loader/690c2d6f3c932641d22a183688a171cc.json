{"ast":null,"code":"var _jsxFileName = \"/Users/frisciliasultan/Documents/Orbitalhosting/src/Settings/DegreeSettings.js\";\nimport React, { useState } from \"react\";\nimport Options from \"./Options\";\nimport isEmpty from \"is-empty\";\nimport { Card } from \"react-bootstrap\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nconst DegreeSettings = props => {\n  const [degreeEditing, setDegreeEditing] = useState(false);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"container\",\n    id: \"degree-settings\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    className: \"card-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }, \"Degree Settings\"), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table table-hover settings-table\",\n    id: \"degree-acad-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Options, {\n    status: props.status,\n    editing: degreeEditing,\n    label: props.status === \"first\" ? \"Faculty : \" : `${props.status} Faculty : `,\n    handleChange: props.handleChange,\n    name: \"faculty\",\n    value: props.userInput.faculty,\n    optionList: props.facultyOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Options, {\n    status: props.status,\n    editing: degreeEditing,\n    label: \"Degree : \",\n    handleChange: props.handleChange,\n    name: \"major\",\n    value: props.userInput.major,\n    optionList: props.userInput.faculty && !isEmpty(props.facultyOptions) ? props.facultyOptions[props.userInput.facIndex].undergraduate.degrees : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Options, {\n    status: props.status,\n    editing: degreeEditing,\n    hidden: true,\n    title: \"Add Specialisation\",\n    label: \"Specialisation : \",\n    handleChange: props.handleChange,\n    name: \"specialisation\",\n    value: props.userInput.specialisation,\n    optionList: props.userInput.major && !isEmpty(props.facultyOptions) ? props.facultyOptions[props.userInput.facIndex].undergraduate.degrees : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Options, {\n    status: props.status,\n    editing: degreeEditing,\n    hidden: true,\n    label: \"Second Major : \",\n    handleChange: props.handleChange,\n    name: \"secondMajor\",\n    value: props.userInput.secondMajor,\n    optionList: props.userInput.major && !isEmpty(props.facultyOptions) ? props.facultyOptions[props.userInput.facIndex].undergraduate.secondMajors : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Options, {\n    status: props.status,\n    editing: degreeEditing,\n    hidden: true,\n    label: \"Minor : \",\n    handleChange: props.handleChange,\n    name: \"minor\",\n    value: props.userInput.minor,\n    optionList: props.userInput.major && !isEmpty(props.facultyOptions) ? props.facultyOptions[props.userInput.facIndex].undergraduate.minors : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }))), !degreeEditing ? /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button settings-button\",\n    onClick: () => setDegreeEditing(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }, \"Edit Settings\") : /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button settings-button\",\n    onClick: () => setDegreeEditing(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  }, \"Save Settings\"), props.status !== \"first\" && /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button settings-button\",\n    onClick: () => setDegreeEditing(!degreeEditing),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, \"Delete Degree\")), addDegree && /*#__PURE__*/React.createElement(DegreeSettings, {\n    status: \"first\",\n    userInput: props.userInput,\n    handleChange: props.handleChange,\n    facultyOptions: props.facultyOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }));\n};\n\nDegreeSettings.propType = {\n  settings: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  settings: state.settings\n});\n\nexport default connect(mapStateToProps)(DegreeSettings);","map":{"version":3,"sources":["/Users/frisciliasultan/Documents/Orbitalhosting/src/Settings/DegreeSettings.js"],"names":["React","useState","Options","isEmpty","Card","PropTypes","connect","DegreeSettings","props","degreeEditing","setDegreeEditing","status","handleChange","userInput","faculty","facultyOptions","major","facIndex","undergraduate","degrees","specialisation","secondMajor","secondMajors","minor","minors","addDegree","propType","settings","object","isRequired","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Options from \"./Options\";\nimport isEmpty from \"is-empty\";\nimport { Card } from \"react-bootstrap\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nconst DegreeSettings = (props) => {\n    const [degreeEditing, setDegreeEditing] = useState(false)\n    return (\n        <div>\n        <Card className=\"container\" id=\"degree-settings\">\n            <Card.Header className=\"card-header\">Degree Settings</Card.Header>\n\n            <table className=\"table table-hover settings-table\" id=\"degree-acad-table\">\n            <tbody>\n                <Options\n                    status={props.status}\n                    editing={degreeEditing}\n                    label={props.status === \"first\" ? \"Faculty : \" : `${props.status} Faculty : `}\n                    handleChange={props.handleChange}\n                    name={\"faculty\"}\n                    value={props.userInput.faculty}\n                    optionList={props.facultyOptions}/>\n\n                <Options\n                    status={props.status}\n                    editing={degreeEditing}\n                    label=\"Degree : \"\n                    handleChange={props.handleChange}\n                    name=\"major\"\n                    value={props.userInput.major}\n                    optionList={(props.userInput.faculty && !isEmpty(props.facultyOptions)) \n                        ? props.facultyOptions[props.userInput.facIndex].undergraduate.degrees\n                            : null}/>\n\n                <Options \n                    status={props.status}\n                    editing={degreeEditing}\n                    hidden={true}\n                    title=\"Add Specialisation\"\n                    label=\"Specialisation : \"\n                    handleChange={props.handleChange}\n                    name=\"specialisation\"\n                    value={props.userInput.specialisation}\n                    optionList={(props.userInput.major && !isEmpty(props.facultyOptions))\n                        ?  props.facultyOptions[props.userInput.facIndex].undergraduate.degrees\n                        : null}/>\n\n                <Options \n                    status={props.status}\n                    editing={degreeEditing}\n                    hidden={true}\n                    label=\"Second Major : \"\n                    handleChange={props.handleChange}\n                    name=\"secondMajor\"\n                    value={props.userInput.secondMajor}\n                    optionList={(props.userInput.major && !isEmpty(props.facultyOptions)) \n                        ? props.facultyOptions[props.userInput.facIndex].undergraduate.secondMajors\n                        : null}/>\n                \n                <Options \n                    status={props.status}\n                    editing={degreeEditing}\n                    hidden={true}\n                    label=\"Minor : \"\n                    handleChange={props.handleChange}\n                    name=\"minor\"\n                    value={props.userInput.minor}\n                    optionList={(props.userInput.major && !isEmpty(props.facultyOptions)) \n                        ? props.facultyOptions[props.userInput.facIndex].undergraduate.minors\n                        : null}/>\n\n            </tbody>\n        </table>\n\n       {!degreeEditing \n            ? <button \n                className=\"button settings-button\" \n                onClick={() => setDegreeEditing(true)}>\n                    Edit Settings\n            </button>\n            : <button \n                className=\"button settings-button\" \n                onClick={() => setDegreeEditing(false)}>\n                    Save Settings\n            </button>} \n       \n\n        {props.status !== \"first\" && (\n            <button \n            className=\"button settings-button\" \n            onClick={() => setDegreeEditing(!degreeEditing)}>\n            Delete Degree\n        </button>\n        )}\n        \n        </Card>\n\n        {addDegree && (\n            <DegreeSettings\n            status=\"first\"\n            userInput={props.userInput}\n            handleChange={props.handleChange}\n            facultyOptions={props.facultyOptions}\n            />\n        )}\n\n    </div>)\n}\n\n\nDegreeSettings.propType = {\n    settings: PropTypes.object.isRequired\n}\n\n\nconst mapStateToProps = state => ({\n    settings: state.settings\n})\n\nexport default connect(mapStateToProps) (DegreeSettings);"]},"metadata":{},"sourceType":"module"}