{"ast":null,"code":"var _jsxFileName = \"/Users/frisciliasultan/Documents/Orbitalhosting/src/Settings/DegreeSettings.js\";\nimport React, { useState } from \"react\";\nimport Options from \"./Options\";\nimport isEmpty from \"is-empty\";\nimport { Card } from \"react-bootstrap\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\"; // import { handleSaveClick } from \"\"\n\nconst DegreeSettings = props => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [addDegree, setAddDegree] = useState(false);\n\n  const presentButton = () => {\n    if (!props.settings.editAll) {\n      if (!isEditing) {\n        return /*#__PURE__*/React.createElement(\"button\", {\n          className: \"button settings-button\",\n          onClick: () => setIsEditing(true),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 20\n          }\n        }, \"Edit Settings\");\n      } else {\n        return /*#__PURE__*/React.createElement(\"button\", {\n          className: \"button settings-button\",\n          onClick: () => {\n            props.handleSubmit();\n            setIsEditing(false);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 20\n          }\n        }, \"Save Settings\");\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"container\",\n    id: \"degree-settings\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    className: \"card-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, props.status === \"first\" ? \"Degree Settings\" : `${props.status} Degree Settings`), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table table-hover settings-table\",\n    id: \"degree-acad-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Options, {\n    status: props.status,\n    editing: isEditing,\n    label: props.status === \"first\" ? \"Faculty : \" : `${props.status} Faculty : `,\n    handleChange: props.handleChange,\n    name: \"faculty\",\n    value: props.userInput.faculty // optionList={props.settings.facultyOptions}/>\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Options, {\n    status: props.status,\n    editing: isEditing,\n    label: \"Degree : \",\n    handleChange: props.handleChange,\n    name: \"major\",\n    value: props.userInput.major,\n    optionList: props.userInput.faculty && !isEmpty(props.settings.facultyOptions) ? props.settings.facultyOptions[props.userInput.facIndex].undergraduate.degrees : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Options, {\n    status: props.status,\n    editing: isEditing,\n    hidden: true,\n    title: \"Add Specialisation\",\n    label: \"Specialisation : \",\n    handleChange: props.handleChange,\n    name: \"specialisation\",\n    value: props.userInput.specialisation,\n    optionList: props.userInput.major && !isEmpty(props.settings.facultyOptions) ? props.settings.facultyOptions[props.userInput.facIndex].undergraduate.degrees : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Options, {\n    status: props.status,\n    editing: isEditing,\n    hidden: true,\n    label: \"Second Major : \",\n    handleChange: props.handleChange,\n    name: \"secondMajor\",\n    value: props.userInput.secondMajor,\n    optionList: props.userInput.major && !isEmpty(props.settings.facultyOptions) ? props.settings.facultyOptions[props.userInput.facIndex].undergraduate.secondMajors : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Options, {\n    status: props.status,\n    editing: isEditing,\n    hidden: true,\n    label: \"Minor : \",\n    handleChange: props.handleChange,\n    name: \"minor\",\n    value: props.userInput.minor,\n    optionList: props.userInput.major && !isEmpty(props.settings.facultyOptions) ? props.settings.facultyOptions[props.userInput.facIndex].undergraduate.minors : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }))), presentButton(), !addDegree && /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button settings-button\",\n    onClick: () => setAddDegree(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, \"Add Degree\"), props.status !== \"first\" && /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button settings-button\",\n    onClick: () => props.setAddDegree(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, \"Delete Degree\")), addDegree && /*#__PURE__*/React.createElement(DegreeSettings, {\n    status: \"Second\",\n    setAddDegree: setAddDegree,\n    userInput: props.userInput,\n    handleChange: props.handleChange,\n    facultyOptions: props.facultyOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }));\n};\n\nDegreeSettings.propType = {\n  settings: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  settings: state.settings\n});\n\nexport default connect(mapStateToProps)(DegreeSettings);","map":{"version":3,"sources":["/Users/frisciliasultan/Documents/Orbitalhosting/src/Settings/DegreeSettings.js"],"names":["React","useState","Options","isEmpty","Card","PropTypes","connect","DegreeSettings","props","isEditing","setIsEditing","addDegree","setAddDegree","presentButton","settings","editAll","handleSubmit","status","handleChange","userInput","faculty","major","facultyOptions","facIndex","undergraduate","degrees","specialisation","secondMajor","secondMajors","minor","minors","propType","object","isRequired","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Options from \"./Options\";\nimport isEmpty from \"is-empty\";\nimport { Card } from \"react-bootstrap\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n// import { handleSaveClick } from \"\"\n\nconst DegreeSettings = (props) => {\n    const [isEditing, setIsEditing] = useState(false);\n    const [addDegree, setAddDegree] = useState(false);\n\n    const presentButton = () => {\n        if(!props.settings.editAll) {\n          if(!isEditing) {\n            return <button \n              className=\"button settings-button\" \n              onClick={() => setIsEditing(true)}>\n                  Edit Settings\n            </button>\n          } else {\n            return <button \n              className=\"button settings-button\" \n              onClick={() => {\n                props.handleSubmit();\n                setIsEditing(false);}}>\n                Save Settings\n            </button>\n          }\n        }\n      }\n\n    return (\n        <div>\n        <Card className=\"container\" id=\"degree-settings\">\n            <Card.Header className=\"card-header\">\n                {props.status === \"first\" \n                    ? \"Degree Settings\" \n                    : `${props.status} Degree Settings`}\n            </Card.Header>\n\n            <table className=\"table table-hover settings-table\" id=\"degree-acad-table\">\n            <tbody>\n                <Options\n                    status={props.status}\n                    editing={isEditing}\n                    label={props.status === \"first\" ? \"Faculty : \" : `${props.status} Faculty : `}\n                    handleChange={props.handleChange}\n                    name={\"faculty\"}\n                    value={props.userInput.faculty}\n                    // optionList={props.settings.facultyOptions}/>\n                    />\n\n                <Options\n                    status={props.status}\n                    editing={isEditing}\n                    label=\"Degree : \"\n                    handleChange={props.handleChange}\n                    name=\"major\"\n                    value={props.userInput.major}\n                    optionList={(props.userInput.faculty && !isEmpty(props.settings.facultyOptions)) \n                        ? props.settings.facultyOptions[props.userInput.facIndex].undergraduate.degrees\n                            : null}/>\n\n                <Options \n                    status={props.status}\n                    editing={isEditing}\n                    hidden={true}\n                    title=\"Add Specialisation\"\n                    label=\"Specialisation : \"\n                    handleChange={props.handleChange}\n                    name=\"specialisation\"\n                    value={props.userInput.specialisation}\n                    optionList={(props.userInput.major && !isEmpty(props.settings.facultyOptions))\n                        ?  props.settings.facultyOptions[props.userInput.facIndex].undergraduate.degrees\n                        : null}/>\n\n                <Options \n                    status={props.status}\n                    editing={isEditing}\n                    hidden={true}\n                    label=\"Second Major : \"\n                    handleChange={props.handleChange}\n                    name=\"secondMajor\"\n                    value={props.userInput.secondMajor}\n                    optionList={(props.userInput.major && !isEmpty(props.settings.facultyOptions)) \n                        ? props.settings.facultyOptions[props.userInput.facIndex].undergraduate.secondMajors\n                        : null}/>\n                \n                <Options \n                    status={props.status}\n                    editing={isEditing}\n                    hidden={true}\n                    label=\"Minor : \"\n                    handleChange={props.handleChange}\n                    name=\"minor\"\n                    value={props.userInput.minor}\n                    optionList={(props.userInput.major && !isEmpty(props.settings.facultyOptions)) \n                        ? props.settings.facultyOptions[props.userInput.facIndex].undergraduate.minors\n                        : null}/>\n\n            </tbody>\n        </table>\n        \n        {presentButton()}\n       \n        {!addDegree && (\n            <button \n                className=\"button settings-button\" \n                onClick={() => setAddDegree(true)}>\n                Add Degree\n            </button>\n        )}\n        \n        {props.status !== \"first\" && (\n            <button \n                className=\"button settings-button\" \n                onClick={() => props.setAddDegree(false)}>\n                Delete Degree\n            </button>\n        )}\n        \n        </Card>\n\n        {addDegree && (\n            <DegreeSettings\n            status=\"Second\"\n            setAddDegree={setAddDegree}\n            userInput={props.userInput}\n            handleChange={props.handleChange}\n            facultyOptions={props.facultyOptions}\n            />\n        )}\n    </div>)\n}\n\n\nDegreeSettings.propType = {\n    settings: PropTypes.object.isRequired\n}\n\n\nconst mapStateToProps = state => ({\n    settings: state.settings\n})\n\nexport default connect(mapStateToProps) (DegreeSettings);"]},"metadata":{},"sourceType":"module"}