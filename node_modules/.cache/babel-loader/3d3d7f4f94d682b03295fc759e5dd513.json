{"ast":null,"code":"import axios from 'axios';\nimport { SET_BOARD_FILLED, SET_MODULES, SET_RULES, SET_CALL_BACKEND_NOW, SET_SELECTED_MODULES, SET_MODULE_LOCATION } from './types';\nexport const setIsBoardFilled = () => {\n  return {\n    type: SET_BOARD_FILLED\n  };\n};\nexport const callBackendAPI = backend => dispatch => {\n  let link = backend === 'NUSMods' ? 'https://api.nusmods.com/v2/2018-2019/moduleInfo.json' : 'http://172.19.162.53:3000/rules/r_cs_degree';\n  let func = backend === 'NUSMods' ? setModules : setRules;\n  return fetch(link, {\n    'accept': 'application/json',\n    'content-type': 'application/json'\n  }).then(response => {\n    const body = response.json();\n    console.log(body);\n\n    if (response.ok) {\n      response.json();\n    } else {\n      throw Error(response.json().message);\n    }\n  }).then(res => dispatch(func(res))).catch(err => {\n    console.log(err);\n  });\n}; //AXIOS CALL BUT IT DOESNT WORK -- FOR FUTURE REFERENCE\n// export const callBackendAPI = () => dispatch => {\n//     const headers = { headers: {'accept': 'application/json'}}\n//     axios.all([\n//         axios.get('https://api.nusmods.com/v2/2018-2019/moduleInfo.json', headers),\n//         axios.get('http://172.19.162.53:3000/rules/r_cs_degree')\n//     ])\n//     .then(resArr => {\n//         dispatch(setModules(resArr[0]));\n//         dispatch(setRules(resArr[1].data));\n//     }) \n//     .catch(err => {\n//         console.log(err)\n//     });\n// }\n\nexport const setModules = modules => {\n  return {\n    type: SET_MODULES,\n    payload: modules\n  };\n};\nexport const setRules = rules => {\n  return {\n    type: SET_RULES,\n    payload: rules\n  };\n};\nexport const setCallBackendNow = status => dispatch => {\n  return {\n    type: SET_CALL_BACKEND_NOW,\n    payload: status\n  };\n};\nexport const setSelectedModules = (object, selectedModules) => dispatch => {\n  return {\n    type: SET_SELECTED_MODULES,\n    moduleAdded: object,\n    currentSelectedModules: selectedModules\n  };\n};\nexport const setModuleLocation = (item, location, selectedModules) => dispatch => {\n  return {\n    type: SET_MODULE_LOCATION,\n    item: item,\n    location: location,\n    modules: selectedModules\n  };\n};","map":{"version":3,"sources":["/Users/frisciliasultan/Documents/Orbital/client/src/actions/modplanActions.js"],"names":["axios","SET_BOARD_FILLED","SET_MODULES","SET_RULES","SET_CALL_BACKEND_NOW","SET_SELECTED_MODULES","SET_MODULE_LOCATION","setIsBoardFilled","type","callBackendAPI","backend","dispatch","link","func","setModules","setRules","fetch","then","response","body","json","console","log","ok","Error","message","res","catch","err","modules","payload","rules","setCallBackendNow","status","setSelectedModules","object","selectedModules","moduleAdded","currentSelectedModules","setModuleLocation","item","location"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,gBADJ,EAEIC,WAFJ,EAGIC,SAHJ,EAIIC,oBAJJ,EAKIC,oBALJ,EAMIC,mBANJ,QAOO,SAPP;AAWA,OAAO,MAAMC,gBAAgB,GAAG,MAAM;AAClC,SAAO;AACHC,IAAAA,IAAI,EAAEP;AADH,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMQ,cAAc,GAAIC,OAAD,IAAaC,QAAQ,IAAI;AACnD,MAAIC,IAAI,GAAGF,OAAO,KAAK,SAAZ,GAAwB,sDAAxB,GACO,6CADlB;AAEA,MAAIG,IAAI,GAAIH,OAAO,KAAK,SAAb,GAA0BI,UAA1B,GAAuCC,QAAlD;AACA,SAAOC,KAAK,CAACJ,IAAD,EAAO;AAAC,cAAU,kBAAX;AACK,oBAAgB;AADrB,GAAP,CAAL,CAENK,IAFM,CAEDC,QAAQ,IAAI;AACV,UAAMC,IAAI,GAAGD,QAAQ,CAACE,IAAT,EAAb;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;;AACA,QAAGD,QAAQ,CAACK,EAAZ,EAAgB;AACZL,MAAAA,QAAQ,CAACE,IAAT;AACH,KAFD,MAEO;AACH,YAAMI,KAAK,CAACN,QAAQ,CAACE,IAAT,GAAgBK,OAAjB,CAAX;AACH;AACJ,GAVE,EAWNR,IAXM,CAWDS,GAAG,IAAIf,QAAQ,CAACE,IAAI,CAACa,GAAD,CAAL,CAXd,EAYNC,KAZM,CAYAC,GAAG,IAAI;AACVP,IAAAA,OAAO,CAACC,GAAR,CAAYM,GAAZ;AACH,GAdM,CAAP;AAeH,CAnBM,C,CAqBP;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMd,UAAU,GAAIe,OAAD,IAAa;AACnC,SAAO;AACHrB,IAAAA,IAAI,EAAEN,WADH;AAEH4B,IAAAA,OAAO,EAAED;AAFN,GAAP;AAIH,CALM;AAOP,OAAO,MAAMd,QAAQ,GAAIgB,KAAD,IAAW;AAC/B,SAAO;AACHvB,IAAAA,IAAI,EAAEL,SADH;AAEH2B,IAAAA,OAAO,EAAEC;AAFN,GAAP;AAIH,CALM;AAOP,OAAO,MAAMC,iBAAiB,GAAIC,MAAD,IAAYtB,QAAQ,IAAI;AACrD,SAAO;AACHH,IAAAA,IAAI,EAAEJ,oBADH;AAEH0B,IAAAA,OAAO,EAAEG;AAFN,GAAP;AAIH,CALM;AAOP,OAAO,MAAMC,kBAAkB,GAAG,CAACC,MAAD,EAASC,eAAT,KAA6BzB,QAAQ,IAAK;AACxE,SAAO;AACHH,IAAAA,IAAI,EAAEH,oBADH;AAEHgC,IAAAA,WAAW,EAAEF,MAFV;AAGHG,IAAAA,sBAAsB,EAAEF;AAHrB,GAAP;AAKH,CANM;AAQP,OAAO,MAAMG,iBAAiB,GAAG,CAACC,IAAD,EAAOC,QAAP,EAAiBL,eAAjB,KAAqCzB,QAAQ,IAAK;AAC/E,SAAO;AACHH,IAAAA,IAAI,EAAEF,mBADH;AAEHkC,IAAAA,IAAI,EAAEA,IAFH;AAGHC,IAAAA,QAAQ,EAAEA,QAHP;AAIHZ,IAAAA,OAAO,EAAEO;AAJN,GAAP;AAMH,CAPM","sourcesContent":["import axios from 'axios';\nimport {\n    SET_BOARD_FILLED,\n    SET_MODULES,\n    SET_RULES,\n    SET_CALL_BACKEND_NOW,\n    SET_SELECTED_MODULES,\n    SET_MODULE_LOCATION\n} from './types';\n\n\n\nexport const setIsBoardFilled = () => {\n    return {\n        type: SET_BOARD_FILLED,\n    }\n}\n\nexport const callBackendAPI = (backend) => dispatch => {\n    let link = backend === 'NUSMods' ? 'https://api.nusmods.com/v2/2018-2019/moduleInfo.json' \n                    : 'http://172.19.162.53:3000/rules/r_cs_degree';\n    let func = (backend === 'NUSMods') ? setModules : setRules;\n    return fetch(link, {'accept': 'application/json',\n                            'content-type': 'application/json'})\n    .then(response => {\n            const body = response.json();\n            console.log(body)\n            if(response.ok) {\n                response.json()\n            } else {\n                throw Error(response.json().message)\n            }\n        }) \n    .then(res => dispatch(func(res)))\n    .catch(err => {\n        console.log(err)\n    });\n}\n\n//AXIOS CALL BUT IT DOESNT WORK -- FOR FUTURE REFERENCE\n// export const callBackendAPI = () => dispatch => {\n\n//     const headers = { headers: {'accept': 'application/json'}}\n//     axios.all([\n//         axios.get('https://api.nusmods.com/v2/2018-2019/moduleInfo.json', headers),\n//         axios.get('http://172.19.162.53:3000/rules/r_cs_degree')\n//     ])\n//     .then(resArr => {\n//         dispatch(setModules(resArr[0]));\n//         dispatch(setRules(resArr[1].data));\n//     }) \n//     .catch(err => {\n//         console.log(err)\n//     });\n// }\n\nexport const setModules = (modules) => {\n    return {\n        type: SET_MODULES,\n        payload: modules\n    }\n}\n\nexport const setRules = (rules) => {\n    return {\n        type: SET_RULES,\n        payload: rules\n    }\n}\n\nexport const setCallBackendNow = (status) => dispatch => {\n    return {\n        type: SET_CALL_BACKEND_NOW,\n        payload: status\n    }\n}\n\nexport const setSelectedModules = (object, selectedModules) => dispatch =>  {\n    return { \n        type: SET_SELECTED_MODULES,\n        moduleAdded: object,\n        currentSelectedModules: selectedModules\n    }\n}\n\nexport const setModuleLocation = (item, location, selectedModules) => dispatch =>  {\n    return { \n        type: SET_MODULE_LOCATION,\n        item: item,\n        location: location,\n        modules: selectedModules\n    }\n}\n"]},"metadata":{},"sourceType":"module"}