{"ast":null,"code":"var _jsxFileName = \"/Users/frisciliasultan/Documents/Orbitalhosting/src/Settings/AcadSettings.jsx\";\nimport React, { useState, useEffect, useReducer } from 'react';\nimport SideNav from \"./SideNav\";\nimport Options from './Options';\nimport DegreeSettings from \"./DegreeSettings\";\nimport { Link } from 'react-router-dom';\nimport axios from \"axios\";\nimport { Button, Card } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport PropTypes from \"prop-types\";\nimport { updateSettings, setMatriculationYearOptions, setTargetGradYearOptions, setDegreeOptions, setEditAll } from \"../actions/settingsActions\";\nimport { deleteUser } from \"../actions/authActions\";\nimport { removeSuccess } from \"../actions/successActions\";\nimport isEmpty from \"is-empty\";\nimport { generateOptions } from '../utils/commonFunctions';\n\nconst AcadSettings = props => {\n  const [userInput, setUserInput] = useReducer((state, newState) => ({ ...state,\n    ...newState\n  }), {\n    faculty: props.userInfo.faculty,\n    facIndex: props.userInfo.facIndex,\n    major: props.userInfo.major,\n    majorIndex: props.userInfo.majorIndex,\n    specialisation: props.userInfo.specialisation,\n    secondMajor: props.userInfo.secondMajor,\n    minor: props.userInfo.minor,\n    residence: props.userInfo.residential,\n    matriculationYear: props.userInfo.matriculationYear,\n    targetGradYear: props.userInfo.targetGradYear\n  });\n  const [isEditing, setIsEditing] = useState(false);\n  useEffect(() => {\n    if (isEmpty(props.settings.facultyOptions)) {\n      props.setDegreeOptions();\n    }\n  }, []);\n  useEffect(() => {\n    if (props.settings.currentAY && isEmpty(props.settings.matriculationOptions)) {\n      props.setMatriculationYearOptions(props.settings.currentAY, props.settings.currentSemester);\n      props.setTargetGradYearOptions(props.settings.currentAY, props.settings.currentSemester);\n    }\n  }, [props.settings.currentAY]);\n  useEffect(() => {\n    if (!isEmpty(props.userInfo)) {\n      setUserInput({\n        faculty: props.userInfo.faculty,\n        facIndex: props.userInfo.facIndex,\n        major: props.userInfo.major,\n        majorIndex: props.userInfo.majorIndex,\n        specialisation: props.userInfo.specialisation,\n        secondMajor: props.userInfo.secondMajor,\n        minor: props.userInfo.minor,\n        residence: props.userInfo.residential,\n        matriculationYear: props.userInfo.matriculationYear,\n        targetGradYear: props.userInfo.targetGradYear\n      });\n    }\n  }, [props.userInfo]);\n\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      selectedIndex\n    } = e.target;\n\n    if (name === \"faculty\") {\n      setUserInput({\n        [name]: value,\n        facIndex: selectedIndex - 1,\n        major: null\n      });\n    } else if (name === \"major\") {\n      setUserInput({\n        [name]: value,\n        majorIndex: selectedIndex - 1\n      });\n    } else {\n      setUserInput({\n        [name]: value\n      });\n    }\n  }; //Check if there is any part of userData that is undefined/falsy\n\n\n  const checkSubmission = userData => {\n    const keys = Object.keys(userData);\n    let status;\n\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      status = userData[key] || userData[key] === 0 ? true : false;\n      console.log(status);\n      console.log(userData[key]);\n\n      if (!status) {\n        return status = false;\n      }\n    }\n\n    return status;\n  };\n\n  const handleSubmit = () => {\n    const userData = {\n      faculty: userInput.faculty,\n      facIndex: userInput.facIndex,\n      major: userInput.major,\n      majorIndex: userInput.majorIndex,\n      specialisation: userInput.specialisation ? userInput.specialisation : \"None\",\n      secondMajor: userInput.secondMajor ? userInput.secondMajor : \"None\",\n      minor: userInput.minor ? userInput.minor : \"None\",\n      residential: userInput.residence,\n      matriculationYear: userInput.matriculationYear,\n      targetGradYear: userInput.targetGradYear,\n      modPlan: props.modplan,\n      cap: props.cap.cap,\n      targetCap: props.cap.targetCap\n    }; //if all props of userData is filled, allow user to save\n    //else alert popup to redirect user back to filling in their data (TEMPORARY)\n\n    if (checkSubmission(userData)) {\n      props.updateSettings(userData);\n    } else {\n      alert(\"Please fill in all the fields before saving!\");\n    }\n  };\n\n  const presentButton = () => {\n    if (!props.settings.editAll) {\n      if (!isEditing) {\n        return /*#__PURE__*/React.createElement(\"button\", {\n          className: \"button settings-button\",\n          onClick: () => setIsEditing(true),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 16\n          }\n        }, \"Edit Settings\");\n      } else {\n        return /*#__PURE__*/React.createElement(\"button\", {\n          className: \"button settings-button\",\n          onClick: () => {\n            handleSubmit();\n            setIsEditing(false);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 16\n          }\n        }, \"Save Settings\");\n      }\n    }\n  };\n\n  return props.loading ? /*#__PURE__*/React.createElement(LoadingDots, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 21\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"settings\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(SideNav, {\n    active: \"academics\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"acad-settings\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }\n  }, \"Academic Settings\"), /*#__PURE__*/React.createElement(Card, {\n    classname: \"container\",\n    id: \"general-acad\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    className: \"card-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  }, \"General Academic Settings\"), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table settings-table table-hover\",\n    id: \"general-acad-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Options, {\n    label: \"Residential College : \",\n    handleChange: handleChange,\n    name: \"residence\",\n    value: userInput.residence,\n    editing: isEditing || props.settings.editAll,\n    optionList: props.settings.residenceOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Options, {\n    label: \"Matriculation Year : \",\n    handleChange: handleChange,\n    name: \"matriculationYear\",\n    value: userInput.matriculationYear,\n    editing: isEditing || props.settings.editAll,\n    optionList: props.settings.matriculationOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Options, {\n    label: \"Graduation Year : \",\n    handleChange: handleChange,\n    name: \"targetGradYear\",\n    value: userInput.targetGradYear,\n    editing: isEditing || props.settings.editAll,\n    optionList: props.settings.targetGradOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  }))), presentButton()), /*#__PURE__*/React.createElement(DegreeSettings, {\n    status: \"first\",\n    userInput: userInput,\n    setUserInput: setUserInput,\n    handleChange: handleChange,\n    handleSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }\n  }), !props.settings.editAll ? /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button settings-button\",\n    id: \"all-settings\",\n    onClick: () => props.setEditAll(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 9\n    }\n  }, \"Edit All Settings\") : /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button settings-button\",\n    id: \"all-settings\",\n    onClick: () => {\n      handleSubmit();\n      props.setEditAll(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 9\n    }\n  }, \"Save All Settings\")));\n};\n\nAcadSettings.propTypes = {\n  updateSettings: PropTypes.func.isRequired,\n  setMatriculationYearOptions: PropTypes.func.isRequired,\n  setTargetGradYearOptions: PropTypes.func.isRequired,\n  setDegreeOptions: PropTypes.func.isRequired,\n  setEditAll: PropTypes.func.isRequired,\n  removeSuccess: PropTypes.func.isRequired,\n  deleteUser: PropTypes.func.isRequired,\n  modplan: PropTypes.array.isRequired,\n  settings: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  loading: state.auth.loading,\n  modplan: state.modplan.selectedModules,\n  settings: state.settings,\n  userInfo: state.settings.userInfo,\n  cap: state.cap,\n  success: state.success\n});\n\nexport default connect(mapStateToProps, {\n  updateSettings,\n  setMatriculationYearOptions,\n  setTargetGradYearOptions,\n  setDegreeOptions,\n  setEditAll,\n  removeSuccess,\n  deleteUser\n})(AcadSettings);","map":{"version":3,"sources":["/Users/frisciliasultan/Documents/Orbitalhosting/src/Settings/AcadSettings.jsx"],"names":["React","useState","useEffect","useReducer","SideNav","Options","DegreeSettings","Link","axios","Button","Card","connect","PropTypes","updateSettings","setMatriculationYearOptions","setTargetGradYearOptions","setDegreeOptions","setEditAll","deleteUser","removeSuccess","isEmpty","generateOptions","AcadSettings","props","userInput","setUserInput","state","newState","faculty","userInfo","facIndex","major","majorIndex","specialisation","secondMajor","minor","residence","residential","matriculationYear","targetGradYear","isEditing","setIsEditing","settings","facultyOptions","currentAY","matriculationOptions","currentSemester","handleChange","e","name","value","selectedIndex","target","checkSubmission","userData","keys","Object","status","i","length","key","console","log","handleSubmit","modPlan","modplan","cap","targetCap","alert","presentButton","editAll","loading","residenceOptions","targetGradOptions","propTypes","func","isRequired","array","object","mapStateToProps","auth","selectedModules","success"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useReducer} from 'react';\nimport SideNav from \"./SideNav\";\nimport Options from './Options';\nimport DegreeSettings from \"./DegreeSettings\";\nimport { Link } from 'react-router-dom';\nimport axios from \"axios\";\nimport { Button, Card } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport PropTypes from \"prop-types\";\nimport { updateSettings, setMatriculationYearOptions,\n  setTargetGradYearOptions, setDegreeOptions,\n  setEditAll } from \"../actions/settingsActions\";\nimport { deleteUser } from \"../actions/authActions\";\nimport { removeSuccess } from \"../actions/successActions\";\nimport isEmpty from \"is-empty\";\nimport { generateOptions } from '../utils/commonFunctions';\n\n\n\nconst AcadSettings = (props) => {\n  \n  const [userInput, setUserInput] = useReducer(\n    (state, newState) => ({...state, ...newState}), \n    {\n      faculty: props.userInfo.faculty,\n      facIndex: props.userInfo.facIndex,\n      major: props.userInfo.major,\n      majorIndex: props.userInfo.majorIndex,\n      specialisation: props.userInfo.specialisation,\n      secondMajor: props.userInfo.secondMajor,\n      minor: props.userInfo.minor,\n      residence: props.userInfo.residential,\n      matriculationYear: props.userInfo.matriculationYear,\n      targetGradYear: props.userInfo.targetGradYear\n    }\n  );\n\n  const [isEditing, setIsEditing] = useState(false);\n\n  useEffect(() => {\n    if(isEmpty(props.settings.facultyOptions)) {\n        props.setDegreeOptions();\n    }\n  }, []);\n\n  useEffect(() => {\n    if(props.settings.currentAY && isEmpty(props.settings.matriculationOptions)) {\n        props.setMatriculationYearOptions(props.settings.currentAY, props.settings.currentSemester);\n        props.setTargetGradYearOptions(props.settings.currentAY, props.settings.currentSemester);\n    }\n  }, [props.settings.currentAY]);\n\n  useEffect(() => {\n    if(!isEmpty(props.userInfo)) {\n      setUserInput({\n        faculty: props.userInfo.faculty,\n        facIndex: props.userInfo.facIndex,\n        major: props.userInfo.major,\n        majorIndex: props.userInfo.majorIndex,\n        specialisation: props.userInfo.specialisation,\n        secondMajor: props.userInfo.secondMajor,\n        minor: props.userInfo.minor,\n        residence: props.userInfo.residential,\n        matriculationYear: props.userInfo.matriculationYear,\n        targetGradYear: props.userInfo.targetGradYear\n      });\n    }\n  }, [props.userInfo]);\n\n  const handleChange = (e) => {\n    const {name, value, selectedIndex} = e.target;\n\n    if(name === \"faculty\") {\n      setUserInput({[name]: value,\n                      facIndex: (selectedIndex - 1),\n                      major: null});\n        \n    } else if(name === \"major\") {\n      setUserInput({[name]: value,\n                      majorIndex: (selectedIndex - 1)});\n\n    } else {\n      setUserInput({[name]: value});\n    } \n  };\n\n\n  //Check if there is any part of userData that is undefined/falsy\n  const checkSubmission = (userData) => {\n    const keys = Object.keys(userData);\n    let status;\n\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      status = (userData[key] || userData[key] === 0) ? true : false;\n      console.log(status);\n      console.log(userData[key]);\n      if(!status) {\n        return status = false;\n      }\n    }\n    return status;\n  }\n\n  const handleSubmit = () => {\n    const userData = {\n      faculty: userInput.faculty,\n      facIndex: userInput.facIndex,\n      major: userInput.major,\n      majorIndex: userInput.majorIndex,\n      specialisation: userInput.specialisation ? userInput.specialisation : \"None\",\n      secondMajor: userInput.secondMajor ? userInput.secondMajor : \"None\",\n      minor: userInput.minor ? userInput.minor : \"None\",\n      residential: userInput.residence,\n      matriculationYear: userInput.matriculationYear,\n      targetGradYear: userInput.targetGradYear,\n      modPlan: props.modplan,\n      cap: props.cap.cap,\n      targetCap: props.cap.targetCap\n    }\n\n  //if all props of userData is filled, allow user to save\n  //else alert popup to redirect user back to filling in their data (TEMPORARY)\n  if(checkSubmission(userData)) {\n    props.updateSettings(userData);\n  } else {\n    alert(\"Please fill in all the fields before saving!\");\n  }\n} \n\n  const presentButton = () => {\n    if(!props.settings.editAll) {\n      if(!isEditing) {\n        return <button \n          className=\"button settings-button\" \n          onClick={() => setIsEditing(true)}>\n              Edit Settings\n        </button>\n      } else {\n        return <button \n          className=\"button settings-button\" \n          onClick={() => {\n            handleSubmit();\n            setIsEditing(false);}}>\n            Save Settings\n        </button>\n      }\n    }\n  }\n\n  return (\n    props.loading ? <LoadingDots/>\n    : (<div className=\"settings\">\n    <SideNav active=\"academics\"/>\n    \n    <div className=\"acad-settings\">\n      <h1>Academic Settings</h1>\n\n      <Card classname=\"container\" id=\"general-acad\">\n        <Card.Header className=\"card-header\">General Academic Settings</Card.Header>\n        <table className=\"table settings-table table-hover\" id=\"general-acad-table\">\n          <tbody>\n            <Options\n              label=\"Residential College : \"\n              handleChange={handleChange}\n              name=\"residence\"\n              value={userInput.residence}\n              editing={isEditing || props.settings.editAll}\n              optionList={props.settings.residenceOptions}/>\n            \n            <Options\n              label=\"Matriculation Year : \"\n              handleChange={handleChange}\n              name=\"matriculationYear\"\n              value={userInput.matriculationYear}\n              editing={isEditing || props.settings.editAll}\n              optionList={props.settings.matriculationOptions}/>\n\n            <Options\n              label=\"Graduation Year : \"\n              handleChange={handleChange}\n              name=\"targetGradYear\"\n              value={userInput.targetGradYear}\n              editing={isEditing || props.settings.editAll}\n              optionList={props.settings.targetGradOptions}/>\n          </tbody>\n        </table>\n\n        {presentButton()}\n      </Card> \n\n      <DegreeSettings\n        status=\"first\"\n        userInput={userInput}\n        setUserInput={setUserInput}\n        handleChange={handleChange}\n        handleSubmit={handleSubmit}\n      />\n\n    {!props.settings.editAll \n      ? <button \n          className=\"button settings-button\" id=\"all-settings\"\n          onClick={() => props.setEditAll(true)}>\n              Edit All Settings\n        </button>\n      : <button \n          className=\"button settings-button\" id=\"all-settings\"\n          onClick={() => {\n              handleSubmit();\n              props.setEditAll(false);}}>\n            Save All Settings\n        </button>\n    }\n    </div>\n  </div>)\n  );\n}\n\n\nAcadSettings.propTypes = {\n  updateSettings: PropTypes.func.isRequired,\n  setMatriculationYearOptions: PropTypes.func.isRequired,\n  setTargetGradYearOptions: PropTypes.func.isRequired,\n  setDegreeOptions: PropTypes.func.isRequired,\n  setEditAll: PropTypes.func.isRequired,\n  removeSuccess: PropTypes.func.isRequired,\n  deleteUser: PropTypes.func.isRequired,\n  modplan: PropTypes.array.isRequired,\n  settings: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  loading: state.auth.loading,\n  modplan: state.modplan.selectedModules,\n  settings: state.settings,\n  userInfo: state.settings.userInfo,\n  cap: state.cap,\n  success: state.success\n});\n\nexport default connect(mapStateToProps, \n  { updateSettings, setMatriculationYearOptions, setTargetGradYearOptions, setDegreeOptions, setEditAll, removeSuccess, deleteUser }) (AcadSettings);\n"]},"metadata":{},"sourceType":"module"}