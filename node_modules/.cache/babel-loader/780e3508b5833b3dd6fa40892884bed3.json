{"ast":null,"code":"var _jsxFileName = \"/Users/frisciliasultan/Documents/Orbital/client/src/Pages/Module Planner Page/ModulePlannerPageTemp.jsx\";\nimport React from 'react';\nimport Board from './Board';\nimport Rules from './Rules';\nimport YearDisplay from './YearDisplay';\nimport './plannertemp.css';\nimport { Button, Card } from 'react-bootstrap';\nimport { HTML5Backend as Backend } from 'react-dnd-html5-backend';\nimport { DndProvider } from 'react-dnd';\n\nclass ModulePlannerPageTemp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedModules: null,\n      isLoading: false,\n      modulesSelected: ['MA1101R'],\n      rules: {\n        _id: \"5ed0d9a9a9225a12882ec26d\",\n        name: \"Degree Requirement\",\n        desc: \"Complete at least 20MCs worth of General Education Modules, with at least 1 module in each of the GEH, GEQ, GER, GES and GET pillars\",\n        tag: \"r_ulr\",\n        sub: [{\n          _id: \"5ed0dd49a9225a12882ec26e\",\n          name: \"University Level Requirement\",\n          desc: \"Complete a GEH-coded module\",\n          tag: \"r_geh_pillar\",\n          sub: [{\n            _id: \"5ed0dd54a9225a12882ec26f\",\n            name: \"GEQ Pillar\",\n            desc: \"Complete a GEQ-coded module\",\n            tag: \"r_geq_pillar\"\n          }, {\n            _id: \"5ed0dd60a9225a12882ec270\",\n            name: \"GER Pillar\",\n            desc: \"Complete a GER-coded module\",\n            tag: \"r_ger_pillar\"\n          }, {\n            _id: \"5ed0dd6ca9225a12882ec271\",\n            name: \"GES Pillar\",\n            desc: \"Complete a GES-coded module\",\n            tag: \"r_ges_pillar\"\n          }, {\n            _id: \"5ed0dd76a9225a12882ec272\",\n            name: \"GET Pillar\",\n            desc: \"Complete a GET-coded module\",\n            tag: \"r_get_pillar\"\n          }]\n        }, {\n          _id: \"5ed0dd54a9225a12882ec26f\",\n          name: \"GEQ Pillar\",\n          desc: \"Complete a GEQ-coded module\",\n          tag: \"r_geq_pillar\"\n        }, {\n          _id: \"5ed0dd60a9225a12882ec270\",\n          name: \"GER Pillar\",\n          desc: \"Complete a GER-coded module\",\n          tag: \"r_ger_pillar\"\n        }, {\n          _id: \"5ed0dd6ca9225a12882ec271\",\n          name: \"GES Pillar\",\n          desc: \"Complete a GES-coded module\",\n          tag: \"r_ges_pillar\"\n        }, {\n          _id: \"5ed0dd76a9225a12882ec272\",\n          name: \"GET Pillar\",\n          desc: \"Complete a GET-coded module\",\n          tag: \"r_get_pillar\"\n        }]\n      }\n    };\n    this.updateSelectedModules = this.updateSelectedModules.bind(this);\n    this.updateModuleLocation = this.updateModuleLocation.bind(this);\n  } // componentDidMount() {\n  //     // Call our fetch function below once the component mounts\n  //   this.callBackendAPI()\n  //     .then(res => this.setState({ data: res.express }))\n  //     .catch(err => console.log(err));\n  // }\n  //   // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n  // callBackendAPI = async () => {\n  //   const response = await fetch('http://localhost:5000/rules/r_cs_degree');\n  //   const body = await response.json();\n  //   if (response.status !== 200) {\n  //     throw Error(body.message) \n  //   }\n  //   return body;\n  // };\n\n\n  updateSelectedModules(object) {\n    let newSelectedModules = this.state.selectedModules ? this.state.selectedModules : [];\n    let unique = true;\n\n    for (i = 0; i < newSelectedModules.length; i++) {\n      if (newSelectedModules[i].moduleCode === object.moduleCode) {\n        unique = false;\n      }\n\n      if (!newSelectedModules.includes(object) && unique) {\n        newSelectedModules.push(object);\n        this.setState({\n          selectedModules: newSelectedModules\n        });\n      }\n    }\n\n    console.log(this.state.selectedModules);\n  }\n\n  updateModuleLocation(item, location) {\n    const moduleToChange = this.state.selectedModules.filter(object => object.moduleCode === item.id);\n    moduleToChange[0].location = location;\n    console.log(moduleToChange);\n    const changedModule = this.state.selectedModules.filter(object => object.moduleCode !== item.id).concat(moduleToChange[0]);\n    this.setState({\n      selectedModules: changedModule\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(DndProvider, {\n      backend: Backend,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(YearDisplay, {\n      year: \"Year 1\",\n      updateSelectedModules: this.updateSelectedModules,\n      selectedModules: this.state.selectedModules,\n      updateModuleLocation: this.updateModuleLocation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(YearDisplay, {\n      year: \"Year 2\",\n      updateSelectedModules: this.updateSelectedModules,\n      selectedModules: this.state.selectedModules,\n      updateModuleLocation: this.updateModuleLocation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(YearDisplay, {\n      year: \"Year 3\",\n      updateSelectedModules: this.updateSelectedModules,\n      selectedModules: this.state.selectedModules,\n      updateModuleLocation: this.updateModuleLocation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(YearDisplay, {\n      year: \"Year 4\",\n      updateSelectedModules: this.updateSelectedModules,\n      selectedModules: this.state.selectedModules,\n      updateModuleLocation: this.updateModuleLocation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      onClick: () => {\n        this.setState({\n          callBackendNow: true\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }\n    }, \"Evaluate\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Rules, {\n      rules: this.state.rules,\n      callBackendNow: this.state.callBackendNow,\n      modulesSelected: this.state.modulesSelected,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default ModulePlannerPageTemp;","map":{"version":3,"sources":["/Users/frisciliasultan/Documents/Orbital/client/src/Pages/Module Planner Page/ModulePlannerPageTemp.jsx"],"names":["React","Board","Rules","YearDisplay","Button","Card","HTML5Backend","Backend","DndProvider","ModulePlannerPageTemp","Component","constructor","props","state","selectedModules","isLoading","modulesSelected","rules","_id","name","desc","tag","sub","updateSelectedModules","bind","updateModuleLocation","object","newSelectedModules","unique","i","length","moduleCode","includes","push","setState","console","log","item","location","moduleToChange","filter","id","changedModule","concat","render","callBackendNow"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,mBAAP;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,iBAA7B;AACA,SAASC,YAAY,IAAIC,OAAzB,QAAwC,yBAAxC;AACA,SAASC,WAAT,QAA4B,WAA5B;;AAGA,MAAMC,qBAAN,SAAoCT,KAAK,CAACU,SAA1C,CAAoD;AACjDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAIC,MAAAA,eAAe,EAAE,IAArB;AACIC,MAAAA,SAAS,EAAE,KADf;AAEIC,MAAAA,eAAe,EAAE,CAAC,SAAD,CAFrB;AAGIC,MAAAA,KAAK,EAAE;AAACC,QAAAA,GAAG,EAAC,0BAAL;AACCC,QAAAA,IAAI,EAAC,oBADN;AAECC,QAAAA,IAAI,EAAC,sIAFN;AAGCC,QAAAA,GAAG,EAAC,OAHL;AAICC,QAAAA,GAAG,EAAC,CACI;AAACJ,UAAAA,GAAG,EAAC,0BAAL;AACAC,UAAAA,IAAI,EAAC,8BADL;AAEAC,UAAAA,IAAI,EAAC,6BAFL;AAGAC,UAAAA,GAAG,EAAC,cAHJ;AAIAC,UAAAA,GAAG,EAAE,CACG;AAACJ,YAAAA,GAAG,EAAC,0BAAL;AACAC,YAAAA,IAAI,EAAC,YADL;AAEAC,YAAAA,IAAI,EAAC,6BAFL;AAGAC,YAAAA,GAAG,EAAC;AAHJ,WADH,EAMG;AAACH,YAAAA,GAAG,EAAC,0BAAL;AACAC,YAAAA,IAAI,EAAC,YADL;AAEAC,YAAAA,IAAI,EAAC,6BAFL;AAGAC,YAAAA,GAAG,EAAC;AAHJ,WANH,EAWG;AAACH,YAAAA,GAAG,EAAC,0BAAL;AACAC,YAAAA,IAAI,EAAC,YADL;AAEAC,YAAAA,IAAI,EAAC,6BAFL;AAGAC,YAAAA,GAAG,EAAC;AAHJ,WAXH,EAgBG;AAACH,YAAAA,GAAG,EAAC,0BAAL;AACAC,YAAAA,IAAI,EAAC,YADL;AAEAC,YAAAA,IAAI,EAAC,6BAFL;AAGAC,YAAAA,GAAG,EAAC;AAHJ,WAhBH;AAJL,SADJ,EA2BI;AAACH,UAAAA,GAAG,EAAC,0BAAL;AACAC,UAAAA,IAAI,EAAC,YADL;AAEAC,UAAAA,IAAI,EAAC,6BAFL;AAGAC,UAAAA,GAAG,EAAC;AAHJ,SA3BJ,EAgCI;AAACH,UAAAA,GAAG,EAAC,0BAAL;AACAC,UAAAA,IAAI,EAAC,YADL;AAEAC,UAAAA,IAAI,EAAC,6BAFL;AAGAC,UAAAA,GAAG,EAAC;AAHJ,SAhCJ,EAqCI;AAACH,UAAAA,GAAG,EAAC,0BAAL;AACAC,UAAAA,IAAI,EAAC,YADL;AAEAC,UAAAA,IAAI,EAAC,6BAFL;AAGAC,UAAAA,GAAG,EAAC;AAHJ,SArCJ,EA0CI;AAACH,UAAAA,GAAG,EAAC,0BAAL;AACAC,UAAAA,IAAI,EAAC,YADL;AAEAC,UAAAA,IAAI,EAAC,6BAFL;AAGAC,UAAAA,GAAG,EAAC;AAHJ,SA1CJ;AAJL;AAHX,KAAb;AAyDC,SAAKE,qBAAL,GAA6B,KAAKA,qBAAL,CAA2BC,IAA3B,CAAgC,IAAhC,CAA7B;AACA,SAAKC,oBAAL,GAA4B,KAAKA,oBAAL,CAA0BD,IAA1B,CAA+B,IAA/B,CAA5B;AAEH,GA/D+C,CAiEhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AAEAD,EAAAA,qBAAqB,CAACG,MAAD,EAAS;AAC1B,QAAIC,kBAAkB,GAAG,KAAKd,KAAL,CAAWC,eAAX,GAA6B,KAAKD,KAAL,CAAWC,eAAxC,GAA0D,EAAnF;AACA,QAAIc,MAAM,GAAG,IAAb;;AAEA,SAAIC,CAAC,GAAG,CAAR,EAAWA,CAAC,GAAGF,kBAAkB,CAACG,MAAlC,EAA0CD,CAAC,EAA3C,EAA+C;AAC3C,UAAGF,kBAAkB,CAACE,CAAD,CAAlB,CAAsBE,UAAtB,KAAqCL,MAAM,CAACK,UAA/C,EAA2D;AACvDH,QAAAA,MAAM,GAAG,KAAT;AACH;;AAEJ,UAAI,CAACD,kBAAkB,CAACK,QAAnB,CAA4BN,MAA5B,CAAD,IAAwCE,MAA5C,EAAoD;AACjDD,QAAAA,kBAAkB,CAACM,IAAnB,CAAwBP,MAAxB;AACA,aAAKQ,QAAL,CAAc;AAACpB,UAAAA,eAAe,EAAEa;AAAlB,SAAd;AACE;AAEJ;;AACDQ,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKvB,KAAL,CAAWC,eAAvB;AAEH;;AAEDW,EAAAA,oBAAoB,CAACY,IAAD,EAAOC,QAAP,EAAiB;AAClC,UAAMC,cAAc,GAAG,KAAK1B,KAAL,CAAWC,eAAX,CAA2B0B,MAA3B,CAAmCd,MAAD,IAAYA,MAAM,CAACK,UAAP,KAAsBM,IAAI,CAACI,EAAzE,CAAvB;AACAF,IAAAA,cAAc,CAAC,CAAD,CAAd,CAAkBD,QAAlB,GAA8BA,QAA9B;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYG,cAAZ;AACA,UAAMG,aAAa,GAAG,KAAK7B,KAAL,CAAWC,eAAX,CAA2B0B,MAA3B,CAAmCd,MAAD,IAAYA,MAAM,CAACK,UAAP,KAAsBM,IAAI,CAACI,EAAzE,EAA6EE,MAA7E,CAAoFJ,cAAc,CAAC,CAAD,CAAlG,CAAtB;AACA,SAAKL,QAAL,CAAc;AAACpB,MAAAA,eAAe,EAAE4B;AAAlB,KAAd;AACH;;AAGDE,EAAAA,MAAM,GAAI;AACN,wBACI,oBAAC,WAAD;AAAa,MAAA,OAAO,EAAErC,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI,oBAAC,WAAD;AACQ,MAAA,IAAI,EAAC,QADb;AAEQ,MAAA,qBAAqB,EAAE,KAAKgB,qBAFpC;AAGQ,MAAA,eAAe,EAAE,KAAKV,KAAL,CAAWC,eAHpC;AAIQ,MAAA,oBAAoB,EAAE,KAAKW,oBAJnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAQI,oBAAC,WAAD;AACQ,MAAA,IAAI,EAAC,QADb;AAEQ,MAAA,qBAAqB,EAAE,KAAKF,qBAFpC;AAGQ,MAAA,eAAe,EAAE,KAAKV,KAAL,CAAWC,eAHpC;AAIQ,MAAA,oBAAoB,EAAE,KAAKW,oBAJnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,eAcI,oBAAC,WAAD;AACQ,MAAA,IAAI,EAAC,QADb;AAEQ,MAAA,qBAAqB,EAAE,KAAKF,qBAFpC;AAGQ,MAAA,eAAe,EAAE,KAAKV,KAAL,CAAWC,eAHpC;AAIQ,MAAA,oBAAoB,EAAE,KAAKW,oBAJnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdJ,eAoBI,oBAAC,WAAD;AACQ,MAAA,IAAI,EAAC,QADb;AAEQ,MAAA,qBAAqB,EAAE,KAAKF,qBAFpC;AAGQ,MAAA,eAAe,EAAE,KAAKV,KAAL,CAAWC,eAHpC;AAIQ,MAAA,oBAAoB,EAAE,KAAKW,oBAJnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApBJ,eA2BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA3BJ,eA6BI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,MAAM;AAAC,aAAKS,QAAL,CAAc;AAACW,UAAAA,cAAc,EAAE;AAAjB,SAAd;AAAsC,OAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA7BJ,eA8BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA9BJ,eA+BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA/BJ,eAiCI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AACI,MAAA,KAAK,EAAE,KAAKhC,KAAL,CAAWI,KADtB;AAEI,MAAA,cAAc,EAAE,KAAKJ,KAAL,CAAWgC,cAF/B;AAGI,MAAA,eAAe,EAAE,KAAKhC,KAAL,CAAWG,eAHhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAjCJ,eAuCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvCJ,CADJ;AA6CH;;AA5J+C;;AA+JpD,eAAeP,qBAAf","sourcesContent":["import React from 'react';\nimport Board from './Board';\nimport Rules from './Rules';\nimport YearDisplay from './YearDisplay';\nimport './plannertemp.css';\nimport { Button, Card } from 'react-bootstrap';\nimport { HTML5Backend as Backend } from 'react-dnd-html5-backend';\nimport { DndProvider } from 'react-dnd';\n\n\nclass ModulePlannerPageTemp extends React.Component {\n   constructor(props) {\n       super(props);\n       this.state = {   selectedModules: null,\n                        isLoading: false,\n                        modulesSelected: ['MA1101R'],\n                        rules: {_id:\"5ed0d9a9a9225a12882ec26d\",\n                                name:\"Degree Requirement\",\n                                desc:\"Complete at least 20MCs worth of General Education Modules, with at least 1 module in each of the GEH, GEQ, GER, GES and GET pillars\",\n                                tag:\"r_ulr\",\n                                sub:[\n                                        {_id:\"5ed0dd49a9225a12882ec26e\",\n                                        name:\"University Level Requirement\",\n                                        desc:\"Complete a GEH-coded module\",\n                                        tag:\"r_geh_pillar\",\n                                        sub: [\n                                                {_id:\"5ed0dd54a9225a12882ec26f\",\n                                                name:\"GEQ Pillar\",\n                                                desc:\"Complete a GEQ-coded module\",\n                                                tag:\"r_geq_pillar\"},\n                                                \n                                                {_id:\"5ed0dd60a9225a12882ec270\",\n                                                name:\"GER Pillar\",\n                                                desc:\"Complete a GER-coded module\",\n                                                tag:\"r_ger_pillar\"},\n                                                \n                                                {_id:\"5ed0dd6ca9225a12882ec271\",\n                                                name:\"GES Pillar\",\n                                                desc:\"Complete a GES-coded module\",\n                                                tag:\"r_ges_pillar\"},\n                                                \n                                                {_id:\"5ed0dd76a9225a12882ec272\",\n                                                name:\"GET Pillar\",\n                                                desc:\"Complete a GET-coded module\",\n                                                tag:\"r_get_pillar\"}\n                                            ]},\n                                        \n                                        {_id:\"5ed0dd54a9225a12882ec26f\",\n                                        name:\"GEQ Pillar\",\n                                        desc:\"Complete a GEQ-coded module\",\n                                        tag:\"r_geq_pillar\"},\n                                        \n                                        {_id:\"5ed0dd60a9225a12882ec270\",\n                                        name:\"GER Pillar\",\n                                        desc:\"Complete a GER-coded module\",\n                                        tag:\"r_ger_pillar\"},\n                                        \n                                        {_id:\"5ed0dd6ca9225a12882ec271\",\n                                        name:\"GES Pillar\",\n                                        desc:\"Complete a GES-coded module\",\n                                        tag:\"r_ges_pillar\"},\n                                        \n                                        {_id:\"5ed0dd76a9225a12882ec272\",\n                                        name:\"GET Pillar\",\n                                        desc:\"Complete a GET-coded module\",\n                                        tag:\"r_get_pillar\"}\n                                    ]\n\n                                },\n        }\n        this.updateSelectedModules = this.updateSelectedModules.bind(this);\n        this.updateModuleLocation = this.updateModuleLocation.bind(this);\n\n    }\n\n    // componentDidMount() {\n    //     // Call our fetch function below once the component mounts\n    //   this.callBackendAPI()\n    //     .then(res => this.setState({ data: res.express }))\n    //     .catch(err => console.log(err));\n    // }\n    //   // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n    // callBackendAPI = async () => {\n    //   const response = await fetch('http://localhost:5000/rules/r_cs_degree');\n    //   const body = await response.json();\n    \n    //   if (response.status !== 200) {\n    //     throw Error(body.message) \n    //   }\n    //   return body;\n    // };\n\n    updateSelectedModules(object) {\n        let newSelectedModules = this.state.selectedModules ? this.state.selectedModules : [];\n        let unique = true;\n        \n        for(i = 0; i < newSelectedModules.length; i++) {\n            if(newSelectedModules[i].moduleCode === object.moduleCode) {\n                unique = false;\n            }\n            \n         if (!newSelectedModules.includes(object) && unique) {\n            newSelectedModules.push(object);\n            this.setState({selectedModules: newSelectedModules});\n             }\n            \n         }\n         console.log(this.state.selectedModules);\n \n     }\n    \n     updateModuleLocation(item, location) {\n        const moduleToChange = this.state.selectedModules.filter((object) => object.moduleCode === item.id);\n        moduleToChange[0].location =  location;\n        console.log(moduleToChange);\n        const changedModule = this.state.selectedModules.filter((object) => object.moduleCode !== item.id).concat(moduleToChange[0])\n        this.setState({selectedModules: changedModule})\n    }\n    \n    \n    render () {\n        return (\n            <DndProvider backend={Backend}>\n\n                <YearDisplay\n                        year=\"Year 1\"\n                        updateSelectedModules={this.updateSelectedModules}\n                        selectedModules={this.state.selectedModules}\n                        updateModuleLocation={this.updateModuleLocation} />\n\n                <YearDisplay\n                        year=\"Year 2\"\n                        updateSelectedModules={this.updateSelectedModules}\n                        selectedModules={this.state.selectedModules}\n                        updateModuleLocation={this.updateModuleLocation} /> \n\n                <YearDisplay\n                        year=\"Year 3\"\n                        updateSelectedModules={this.updateSelectedModules}\n                        selectedModules={this.state.selectedModules}\n                        updateModuleLocation={this.updateModuleLocation} />\n\n                <YearDisplay\n                        year=\"Year 4\"\n                        updateSelectedModules={this.updateSelectedModules}\n                        selectedModules={this.state.selectedModules}\n                        updateModuleLocation={this.updateModuleLocation} /> \n                \n\n                <br/>\n\n                <Button onClick={() => {this.setState({callBackendNow: true})}}>Evaluate</Button>\n                <br/>\n                <br/>\n\n                <Card>\n                    <Rules\n                        rules={this.state.rules}\n                        callBackendNow={this.state.callBackendNow}\n                        modulesSelected={this.state.modulesSelected}/>\n                </Card>\n                <br/>\n                \n\n           </DndProvider>\n        )\n    }\n}\n\nexport default ModulePlannerPageTemp;\n"]},"metadata":{},"sourceType":"module"}