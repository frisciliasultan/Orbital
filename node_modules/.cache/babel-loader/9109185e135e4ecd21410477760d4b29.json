{"ast":null,"code":"var _jsxFileName = \"/Users/frisciliasultan/Documents/Orbital/client/src/Pages/Module Planner Page/ModulePlannerPage.jsx\";\nimport React from 'react';\nimport Board from './Board';\nimport Rules from './Rules';\nimport TrashBox from './TrashBox';\nimport YearDisplay from './YearDisplay';\nimport './plannertemp.css';\nimport { Button, Card } from 'react-bootstrap';\nimport { HTML5Backend as Backend } from 'react-dnd-html5-backend';\nimport { DndProvider } from 'react-dnd';\n\nclass ModulePlannerPageTemp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedModules: null,\n      callBackendNow: false,\n      rules: []\n    };\n    this.updateSelectedModules = this.updateSelectedModules.bind(this);\n    this.updateModuleLocation = this.updateModuleLocation.bind(this);\n    this.updateCallBackendNow = this.updateCallBackendNow.bind(this);\n  }\n\n  componentDidMount() {\n    // Call our fetch function below once the component mounts\n    // this.callBackendAPI('NUSMods')\n    //     .then(res => this.setState({ module : res }))\n    //     .catch(err => console.log(err));\n    // this.callBackendAPI('Rules')\n    //     .then(res => this.setState({ rules : res }))\n    //     .catch(err => console.log(err));\n    this.props.callBackendAPI('NUSMods');\n    this.props.callBackendAPI('Rules');\n  } // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n  // callBackendAPI = async (backend) => {\n  //     let link = backend === 'NUSMods' ? 'https://api.nusmods.com/v2/2018-2019/moduleInfo.json' \n  //                     : 'http://172.19.162.53:3000/rules/r_cs_degree';\n  //     const response = await fetch(link, {'accept': 'application/json',\n  //                                          'content-type': 'application/json'});\n  //     const body = await response.json();\n  //   if (response.status !== 200) {\n  //     throw Error(body.message) \n  //   }\n  //   console.log(body);\n  //   return body;\n  // }\n\n\n  updateSelectedModules(object) {\n    let newSelectedModules = this.state.selectedModules ? this.state.selectedModules : [];\n    let unique = true;\n    let indexOfDuplicate;\n\n    for (let i = 0; i < newSelectedModules.length; i++) {\n      if (newSelectedModules[i].moduleCode === object.moduleCode) {\n        unique = false;\n        indexOfDuplicate = i;\n      }\n    }\n\n    if (!newSelectedModules.includes(object) && unique) {\n      if (unique) {\n        newSelectedModules.push(object);\n      } else {\n        newSelectedModules.splice(indexOfDuplicate, 1);\n        newSelectedModules.push(object);\n      }\n\n      this.setState({\n        selectedModules: newSelectedModules\n      });\n    }\n\n    console.log(this.state.selectedModules);\n  }\n\n  updateModuleLocation(item, location) {\n    let changedModule;\n\n    if (!location) {\n      changedModule = this.state.selectedModules.filter(object => object.moduleCode !== item.id);\n    } else {\n      const moduleToChange = this.state.selectedModules.filter(object => object.moduleCode === item.id);\n      moduleToChange[0].location = location;\n      changedModule = this.state.selectedModules.filter(object => object.moduleCode !== item.id).concat(moduleToChange[0]);\n    }\n\n    this.setState({\n      selectedModules: changedModule\n    });\n    console.log(changedModule);\n  }\n\n  updateCallBackendNow() {\n    // this.setState({callBackendNow: false});\n    setCallBackendNow(false);\n  }\n\n  handleEvalButtonClick() {\n    const modules = this.state.selectedModules;\n\n    if (!modules || modules === []) {\n      alert('Please add modules before evaluating');\n    } else {\n      this.setState({\n        callBackendNow: true\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(DndProvider, {\n      backend: Backend,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-module-planner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(YearDisplay, {\n      year: \"Year 1\",\n      updateSelectedModules: this.updateSelectedModules,\n      selectedModules: this.state.selectedModules,\n      updateModuleLocation: this.updateModuleLocation,\n      module: this.state.module,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(YearDisplay, {\n      year: \"Year 2\",\n      updateSelectedModules: this.updateSelectedModules,\n      selectedModules: this.state.selectedModules,\n      updateModuleLocation: this.updateModuleLocation,\n      module: this.state.module,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(YearDisplay, {\n      year: \"Year 3\",\n      updateSelectedModules: this.updateSelectedModules,\n      selectedModules: this.state.selectedModules,\n      updateModuleLocation: this.updateModuleLocation,\n      module: this.state.module,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(YearDisplay, {\n      year: \"Year 4\",\n      updateSelectedModules: this.updateSelectedModules,\n      selectedModules: this.state.selectedModules,\n      updateModuleLocation: this.updateModuleLocation,\n      module: this.state.module,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(TrashBox, {\n      updateModuleLocation: this.updateModuleLocation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      className: \"button\",\n      id: \"eval-button\",\n      onClick: () => this.handleEvalButtonClick(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }\n    }, \"Evaluate\"), /*#__PURE__*/React.createElement(Button, {\n      className: \"button\",\n      onClick: () => {},\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 21\n      }\n    }, \"Save\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Rules, {\n      rules: this.state.rules,\n      callBackendNow: this.state.callBackendNow,\n      selectedModules: this.state.selectedModules,\n      updateCallBackendNow: this.updateCallBackendNow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  modplan: state.modplan\n});\n\nexport default connect(mapStateToProps, {\n  callBackendAPI\n})(ModulePlannerPageTemp);","map":{"version":3,"sources":["/Users/frisciliasultan/Documents/Orbital/client/src/Pages/Module Planner Page/ModulePlannerPage.jsx"],"names":["React","Board","Rules","TrashBox","YearDisplay","Button","Card","HTML5Backend","Backend","DndProvider","ModulePlannerPageTemp","Component","constructor","props","state","selectedModules","callBackendNow","rules","updateSelectedModules","bind","updateModuleLocation","updateCallBackendNow","componentDidMount","callBackendAPI","object","newSelectedModules","unique","indexOfDuplicate","i","length","moduleCode","includes","push","splice","setState","console","log","item","location","changedModule","filter","id","moduleToChange","concat","setCallBackendNow","handleEvalButtonClick","modules","alert","render","module","mapStateToProps","modplan","connect"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Board from './Board';\nimport Rules from './Rules';\nimport TrashBox from './TrashBox';\nimport YearDisplay from './YearDisplay';\nimport './plannertemp.css';\nimport { Button, Card } from 'react-bootstrap';\nimport { HTML5Backend as Backend } from 'react-dnd-html5-backend';\nimport { DndProvider } from 'react-dnd';\n\n\nclass ModulePlannerPageTemp extends React.Component {\n   constructor(props) {\n       super(props);\n       this.state = {   selectedModules: null,\n                        callBackendNow: false,\n                        rules: []\n        }\n        this.updateSelectedModules = this.updateSelectedModules.bind(this);\n        this.updateModuleLocation = this.updateModuleLocation.bind(this);\n        this.updateCallBackendNow = this.updateCallBackendNow.bind(this);\n\n    }\n\n    componentDidMount() {\n        // Call our fetch function below once the component mounts\n        // this.callBackendAPI('NUSMods')\n        //     .then(res => this.setState({ module : res }))\n        //     .catch(err => console.log(err));\n\n        // this.callBackendAPI('Rules')\n        //     .then(res => this.setState({ rules : res }))\n        //     .catch(err => console.log(err));\n        this.props.callBackendAPI('NUSMods');\n        this.props.callBackendAPI('Rules');\n\n    }\n    \n      // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n    // callBackendAPI = async (backend) => {\n    //     let link = backend === 'NUSMods' ? 'https://api.nusmods.com/v2/2018-2019/moduleInfo.json' \n    //                     : 'http://172.19.162.53:3000/rules/r_cs_degree';\n    //     const response = await fetch(link, {'accept': 'application/json',\n    //                                          'content-type': 'application/json'});\n    //     const body = await response.json();\n    \n    //   if (response.status !== 200) {\n    //     throw Error(body.message) \n    //   }\n    //   console.log(body);\n    //   return body;\n    // }\n\n    updateSelectedModules(object) {\n        let newSelectedModules = this.state.selectedModules ? this.state.selectedModules : [];\n        let unique = true;\n        let indexOfDuplicate;\n        \n        for(let i = 0; i < newSelectedModules.length; i++) {\n            if(newSelectedModules[i].moduleCode === object.moduleCode) {\n                unique = false;\n                indexOfDuplicate = i;\n            }\n        }\n\n         if (!newSelectedModules.includes(object) && unique) {\n             if(unique) {\n                newSelectedModules.push(object);\n                \n             } else {\n                newSelectedModules.splice(indexOfDuplicate, 1);\n                newSelectedModules.push(object);           \n             }\n             this.setState({selectedModules: newSelectedModules});\n        }\n         \n         console.log(this.state.selectedModules);\n     }\n    \n     updateModuleLocation(item, location) {\n         let changedModule;\n         if(!location) {\n             changedModule = this.state.selectedModules.filter((object) => object.moduleCode !== item.id);\n         } else {\n            const moduleToChange = this.state.selectedModules.filter((object) => object.moduleCode === item.id);\n            moduleToChange[0].location =  location;\n            changedModule = this.state.selectedModules.filter((object) => object.moduleCode !== item.id).concat(moduleToChange[0])\n         }\n         this.setState({selectedModules: changedModule});\n        console.log(changedModule);\n    }\n    \n    updateCallBackendNow() {\n        // this.setState({callBackendNow: false});\n        setCallBackendNow(false);\n    }\n\n    handleEvalButtonClick() {\n        const modules = this.state.selectedModules;\n        if (!modules || modules === []) {\n            alert('Please add modules before evaluating');\n        } else {\n            this.setState({callBackendNow: true})\n        }\n    }\n    \n    render () {\n        return (\n            <DndProvider backend={Backend} >\n                <div className=\"container-module-planner\">\n                    <YearDisplay\n                            year=\"Year 1\"\n                            updateSelectedModules={this.updateSelectedModules}\n                            selectedModules={this.state.selectedModules}\n                            updateModuleLocation={this.updateModuleLocation}\n                            module={this.state.module} />\n\n                    <YearDisplay\n                            year=\"Year 2\"\n                            updateSelectedModules={this.updateSelectedModules}\n                            selectedModules={this.state.selectedModules}\n                            updateModuleLocation={this.updateModuleLocation}\n                            module={this.state.module} /> \n\n                    <YearDisplay\n                            year=\"Year 3\"\n                            updateSelectedModules={this.updateSelectedModules}\n                            selectedModules={this.state.selectedModules}\n                            updateModuleLocation={this.updateModuleLocation}\n                            module={this.state.module} />\n\n                    <YearDisplay\n                            year=\"Year 4\"\n                            updateSelectedModules={this.updateSelectedModules}\n                            selectedModules={this.state.selectedModules}\n                            updateModuleLocation={this.updateModuleLocation}\n                            module={this.state.module} /> \n                    \n                    <TrashBox\n                            updateModuleLocation={this.updateModuleLocation}/>\n\n\n                    <br/>\n\n                    <Button className=\"button\" id=\"eval-button\" onClick={() => this.handleEvalButtonClick()}>Evaluate</Button>\n                    <Button className=\"button\" onClick={() => {}}>Save</Button>\n                    <br/>\n                    <br/>\n                    <Card>\n                        <Rules\n                            rules={this.state.rules}\n                            callBackendNow={this.state.callBackendNow}\n                            selectedModules={this.state.selectedModules}\n                            updateCallBackendNow={this.updateCallBackendNow}/>\n                    </Card>\n                    <br/>\n                </div>\n           </DndProvider>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    modplan: state.modplan\n});\n\nexport default connect(mapStateToProps, { callBackendAPI }) (ModulePlannerPageTemp);\n"]},"metadata":{},"sourceType":"module"}