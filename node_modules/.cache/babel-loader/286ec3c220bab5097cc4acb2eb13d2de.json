{"ast":null,"code":"var _jsxFileName = \"/Users/frisciliasultan/Documents/Orbital/client/src/Settings/AcadSettings.jsx\";\nimport React from 'react';\nimport { Options } from '../Pages/Module Selection Page/ModuleList';\nimport { Link } from 'react-router-dom';\nimport axios from \"axios\";\nimport { Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport PropTypes from \"prop-types\";\nimport { updateSettings, initialSettings, setCurrentSemester, setMatriculationYearOptions, setTargetGradYearOptions } from \"../actions/settingsActions\";\nconst time = new Date();\nconst month = time.getMonth() + 1;\nconst year = time.getFullYear();\n\nclass AcadSettings extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = () => {\n      const userData = {\n        faculty: this.state.faculty,\n        major: this.state.major,\n        specialisation: this.state.specialisation,\n        residential: this.state.residence,\n        matriculationYear: this.state.matriculationYear,\n        targetGraduationYear: this.state.targetGraduationYear,\n        name: this.props.settings.userInfo.name,\n        modPlan: this.props.modplan\n      };\n      this.props.updateSettings(userData);\n    };\n\n    this.state = {\n      faculty: null,\n      major: null,\n      specialisation: null,\n      residenceOptions: ['N/A', 'CAPT', 'RC4', 'RVRC', 'Tembusu', 'USP'],\n      residence: 'N/A',\n      // matriculationYearOptions: ['AY 2020/2021 (Year 1)','AY 2019/2020 (Year 2) ', 'AY 18/19 (Year 3)', 'AY 17/18 (Year 4)','AY 16/17 (Year 5)', 'AY 15/16 (Year 6)'],\n      matriculationYear: null,\n      targetGraduationYear: null,\n      dummyfac: [{\n        'Business': [{\n          'Business Administration': ['A', 'B']\n        }, {\n          'Accountancy': ['C', 'D']\n        }]\n      }, {\n        'FASS': [{\n          'C': ['N/A']\n        }, {\n          'D': ['N/A']\n        }]\n      }, {\n        'Computing': [{\n          'Computer Science': ['N/A']\n        }, {\n          'Business Analytics': ['N/A']\n        }]\n      }]\n    };\n    this.changeFaculty = this.changeFaculty.bind(this);\n    this.changeMajor = this.changeMajor.bind(this);\n    this.changeSpecialisation = this.changeSpecialisation.bind(this);\n    this.changeResidence = this.changeResidence.bind(this);\n    this.changeMatriculationYear = this.changeMatriculationYear.bind(this);\n    this.changeTargetGradYear = this.changeTargetGradYear.bind(this);\n    this.generateOptions = this.generateOptions.bind(this);\n  }\n\n  componentWillMount() {\n    if (!this.props.settings.currentAY) {\n      // const time = new Date();\n      // const month = time.getMonth() + 1;\n      // const year = time.getFullYear();\n      const isSem2 = month <= 7;\n      let currentSemester;\n      let currentAY;\n\n      if (isSem2) {\n        currentAY = `${year - 1}/${year}`;\n        currentSemester = \"Semester 2\";\n      } else {\n        currentAY = `${year}/${year + 1}`;\n        currentSemester = \"Semester 1\";\n      }\n\n      this.props.setCurrentSemester(currentAY, currentSemester);\n    }\n\n    if (!this.props.settings.userInfo) {\n      this.props.initialSettings();\n    }\n\n    if (!this.props.settings.matriculationYearOptions) {\n      this.props.setMatriculationYearOptions(currentAY, currentSemester);\n    }\n  }\n\n  changeFaculty(value, index) {\n    this.setState({\n      faculty: value,\n      facIndex: index,\n      major: null\n    });\n  }\n\n  changeMajor(value, index) {\n    this.setState({\n      major: value,\n      majorIndex: index\n    });\n  }\n\n  changeSpecialisation(value) {\n    this.setState({\n      specialisation: value\n    });\n  }\n\n  changeResidence(value) {\n    this.setState({\n      residence: value\n    });\n  }\n\n  changeMatriculationYear(value) {\n    this.setState({\n      matriculationYear: value\n    });\n  }\n\n  changeTargetGradYear(value) {\n    this.setState({\n      targetGraduationYear: value\n    });\n  } //turn array of choices into options dropdown\n\n\n  generateOptions(choices) {\n    let facIndex = this.state.facIndex;\n\n    if (choices === 'faculty') {\n      return this.state.dummyfac.map(obj => {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          value: Object.keys(obj),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 7\n          }\n        }, Object.keys(obj));\n      });\n    } else if (choices === 'major') {\n      if (this.state.faculty) {\n        return this.state.dummyfac[facIndex][this.state.faculty].map(obj => {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            value: Object.keys(obj),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 21\n            }\n          }, Object.keys(obj));\n        });\n      }\n    } else if (choices === 'specialisation') {\n      if (this.state.major && this.state.faculty) {\n        return this.state.dummyfac[facIndex][this.state.faculty][this.state.majorIndex][this.state.major].map(item => {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 21\n            }\n          }, item);\n        });\n      }\n    } else if (choices === 'residence') {\n      return this.state.residenceOptions.map(obj => {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          value: obj,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 7\n          }\n        }, obj);\n      });\n    } else if (choices === 'matriculationYear') {\n      return this.props.settings.matriculationOptions.map(option => {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          value: option,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 7\n          }\n        }, option);\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 15\n      }\n    }, \"Enter your particulars so that we can personalise your user experience!\"), /*#__PURE__*/React.createElement(Options, {\n      onFacultyChange: this.changeFaculty,\n      onMajorChange: this.changeMajor,\n      onSpecialisationChange: this.changeSpecialisation,\n      onResidenceChange: this.changeResidence,\n      onMatriculationChange: this.changeMatriculationYear,\n      onTargetGradChange: this.changeTargetGradYear,\n      facultyOptions: this.generateOptions('faculty'),\n      majorOptions: this.generateOptions('major'),\n      specialisationOptions: this.generateOptions('specialisation'),\n      residenceOptions: this.generateOptions('residence'),\n      matriculationYearOptions: this.generateOptions('matriculationYear'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      class: \"button\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 15\n      }\n    }, \"Save Academic Settings\"));\n  }\n\n}\n\nAcadSettings.propTypes = {\n  setUserSettings: PropTypes.func.isRequired,\n  initialSettings: PropTypes.func.isRequired,\n  updateSettings: PropTypes.func.isRequired,\n  setMatriculationYearOptions: PropTypes.func.isRequired,\n  modplan: PropTypes.object.isRequired,\n  settings: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  modplan: state.modplan.selectedModules,\n  settings: state.settings\n});\n\nexport default connect(mapStateToProps, {\n  initialSettings,\n  updateSettings,\n  setCurrentSemester,\n  setMatriculationYearOptions,\n  setTargetGradYearOptions\n})(AcadSettings);","map":{"version":3,"sources":["/Users/frisciliasultan/Documents/Orbital/client/src/Settings/AcadSettings.jsx"],"names":["React","Options","Link","axios","Button","connect","PropTypes","updateSettings","initialSettings","setCurrentSemester","setMatriculationYearOptions","setTargetGradYearOptions","time","Date","month","getMonth","year","getFullYear","AcadSettings","Component","constructor","props","handleSubmit","userData","faculty","state","major","specialisation","residential","residence","matriculationYear","targetGraduationYear","name","settings","userInfo","modPlan","modplan","residenceOptions","dummyfac","changeFaculty","bind","changeMajor","changeSpecialisation","changeResidence","changeMatriculationYear","changeTargetGradYear","generateOptions","componentWillMount","currentAY","isSem2","currentSemester","matriculationYearOptions","value","index","setState","facIndex","majorIndex","choices","map","obj","Object","keys","item","matriculationOptions","option","render","propTypes","setUserSettings","func","isRequired","object","mapStateToProps","selectedModules"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Options } from '../Pages/Module Selection Page/ModuleList';\nimport { Link } from 'react-router-dom';\nimport axios from \"axios\";\nimport { Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport PropTypes from \"prop-types\";\nimport { updateSettings, initialSettings, setCurrentSemester, \n          setMatriculationYearOptions, setTargetGradYearOptions } from \"../actions/settingsActions\";\n\n\nconst time = new Date();\nconst month = time.getMonth() + 1;\nconst year = time.getFullYear();\n\nclass AcadSettings extends React.Component {\nconstructor(props) {\n    super(props);\n\n    this.state = {\n        faculty: null,\n        major: null,\n        specialisation: null,\n        residenceOptions: ['N/A','CAPT', 'RC4', 'RVRC','Tembusu', 'USP'],\n        residence: 'N/A',\n        // matriculationYearOptions: ['AY 2020/2021 (Year 1)','AY 2019/2020 (Year 2) ', 'AY 18/19 (Year 3)', 'AY 17/18 (Year 4)','AY 16/17 (Year 5)', 'AY 15/16 (Year 6)'],\n        matriculationYear: null,\n        targetGraduationYear: null,\n        dummyfac: [{'Business': [{'Business Administration': ['A', 'B']},\n                                {'Accountancy': ['C', 'D']}]},\n                {'FASS': [{'C': ['N/A']},\n                            {'D': ['N/A']}]},\n                {\n                    'Computing': [\n                                    {'Computer Science': ['N/A']},\n                                    {'Business Analytics': ['N/A']}\n                    ]\n                }],\n        \n    };\n\n    this.changeFaculty = this.changeFaculty.bind(this);\n    this.changeMajor=this.changeMajor.bind(this);\n    this.changeSpecialisation= this.changeSpecialisation.bind(this);\n    this.changeResidence= this.changeResidence.bind(this);\n    this.changeMatriculationYear= this.changeMatriculationYear.bind(this);\n    this.changeTargetGradYear= this.changeTargetGradYear.bind(this);\n    this.generateOptions =this.generateOptions.bind(this);\n}\n\ncomponentWillMount () {\n  \n  if(!this.props.settings.currentAY) {\n    // const time = new Date();\n    // const month = time.getMonth() + 1;\n    // const year = time.getFullYear();\n    const isSem2 = (month <= 7);\n    let currentSemester;\n    let currentAY;\n\n    if(isSem2) {\n        currentAY = `${year - 1}/${year}`\n        currentSemester = \"Semester 2\"\n    } else {\n        currentAY = `${year}/${year + 1}`\n        currentSemester = \"Semester 1\"\n    }\n\n    this.props.setCurrentSemester(currentAY, currentSemester);\n  }\n\n  if(!this.props.settings.userInfo) {\n    this.props.initialSettings();\n  }\n\n  if(!this.props.settings.matriculationYearOptions) {\n    this.props.setMatriculationYearOptions(currentAY, currentSemester)\n  }\n}\n\nchangeFaculty(value, index) {\n    this.setState({\n      faculty: value,\n      facIndex: index,\n      major: null\n    });\n  }\n\n  changeMajor(value, index) {\n    this.setState({\n      major: value,\n      majorIndex: index\n    });\n  }\n\n  changeSpecialisation(value) {\n    this.setState({\n      specialisation: value,\n    });\n  }\n\n  changeResidence(value) {\n    this.setState({\n      residence: value,\n    });\n  }\n\n  changeMatriculationYear(value) {\n    this.setState({\n      matriculationYear: value,\n    });\n  }\n\n  changeTargetGradYear(value) {\n    this.setState({\n      targetGraduationYear: value,\n    });\n  }\n\n\n  //turn array of choices into options dropdown\n  generateOptions(choices) {\n    let facIndex = this.state.facIndex;\n  if(choices === 'faculty'){\n    return this.state.dummyfac.map((obj) => {\n      return (\n      <option value={Object.keys(obj)}>\n        {Object.keys(obj)}\n      </option>\n      );\n    });\n  } else if(choices === 'major') {\n      if(this.state.faculty) {\n    return this.state.dummyfac\n           [facIndex]\n           [this.state.faculty].map((obj) => {\n                  return (\n                    <option value={Object.keys(obj)}>\n                      {Object.keys(obj)}\n                    </option>\n                  )\n              }\n    )}\n  } else if(choices === 'specialisation') {\n      if(this.state.major && this.state.faculty) {\n      return this.state.dummyfac\n             [facIndex]\n             [this.state.faculty][this.state.majorIndex][this.state.major].map((item) => {\n                  return (\n                    <option>\n                      {item}\n                    </option>\n                  )\n                }    \n      )}\n  } else if(choices === 'residence') {\n    return this.state.residenceOptions.map((obj) => {\n      return (\n      <option value={obj}>\n        {obj}\n      </option>\n      );\n    });\n  } else if(choices === 'matriculationYear') {\n    return this.props.settings.matriculationOptions.map((option) => {\n      return (\n      <option value={option}>\n        {option}\n      </option>\n      );\n    });\n  }\n}\n\nhandleSubmit = () => {\n  const userData = {\n    faculty: this.state.faculty,\n    major: this.state.major,\n    specialisation: this.state.specialisation,\n    residential: this.state.residence,\n    matriculationYear: this.state.matriculationYear,\n    targetGraduationYear: this.state.targetGraduationYear,\n    name: this.props.settings.userInfo.name,\n    modPlan: this.props.modplan\n  }\n\n  this.props.updateSettings(userData);\n}\n\n    render() {\n        return (\n            <div>\n              <h5>Enter your particulars so that we can personalise your user experience!</h5>\n\n              <Options \n                onFacultyChange={this.changeFaculty}\n                onMajorChange={this.changeMajor}\n                onSpecialisationChange={this.changeSpecialisation}\n                onResidenceChange={this.changeResidence}\n                onMatriculationChange={this.changeMatriculationYear}\n                onTargetGradChange={this.changeTargetGradYear}\n                facultyOptions={this.generateOptions('faculty')}\n                majorOptions={this.generateOptions('major')}\n                specialisationOptions={this.generateOptions('specialisation')}\n                residenceOptions={this.generateOptions('residence')}\n                matriculationYearOptions={this.generateOptions('matriculationYear')}\n              />\n\n              <Button class='button' onClick={this.handleSubmit}>Save Academic Settings</Button>\n            </div>\n        );\n    }\n}\n\nAcadSettings.propTypes = {\n  setUserSettings: PropTypes.func.isRequired,\n  initialSettings: PropTypes.func.isRequired,\n  updateSettings: PropTypes.func.isRequired,\n  setMatriculationYearOptions: PropTypes.func.isRequired,\n  modplan: PropTypes.object.isRequired,\n  settings: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  modplan: state.modplan.selectedModules,\n  settings: state.settings\n});\n\nexport default connect(mapStateToProps, \n  { initialSettings, updateSettings, setCurrentSemester, setMatriculationYearOptions, setTargetGradYearOptions }) (AcadSettings);\n"]},"metadata":{},"sourceType":"module"}