{"ast":null,"code":"var _jsxFileName = \"/Users/frisciliasultan/Documents/Orbitalhosting/src/Settings/DynamicFieldSet.jsx\";\nimport { Form, Input, Button, Switch } from 'antd';\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\nimport AutocompleteText from \"../Pages/Module Planner Page/AutocompleteText\";\nimport React from \"react\";\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 4\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 20\n    }\n  }\n};\nconst formItemLayoutWithOutLabel = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0\n    },\n    sm: {\n      span: 20,\n      offset: 4\n    }\n  }\n};\n\nconst DynamicFieldSet = props => {\n  const onFinish = values => {\n    console.log('Received values of form:', values);\n  };\n\n  return /*#__PURE__*/React.createElement(Form, Object.assign({\n    name: \"dynamic_form_item\"\n  }, formItemLayoutWithOutLabel, {\n    onFinish: onFinish,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Form.List, {\n    // name={props.name}\n    name: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, (fields, {\n    add,\n    remove\n  }) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 15\n      }\n    }, fields.map((field, index) =>\n    /*#__PURE__*/\n    //   <Form.Item\n    //   {...(formItemLayoutWithOutLabel)}\n    //   // label={index === 0 ? 'SecondMajors' : ''}\n    //   required={false}\n    //   key={field.key}\n    // >\n    //   <Form.Item\n    //     {...field}\n    //     validateTrigger={['onChange', 'onBlur']}\n    //     rules={[\n    //       {\n    //         required: true,\n    //         whitespace: true,\n    //         message: `Please input ${props.name} or delete this field.`,\n    //       },\n    //     ]}\n    //     noStyle\n    //   >\n    //     <AutocompleteText id=\"autocomplete-settings\" category={props.name}/>\n    //     {/* <Input placeholder={`Enter ${props.name}`} style={{ width: '60%' }} /> */}\n    //   </Form.Item>\n    //   {fields.length > 1 ? (\n    //     <MinusCircleOutlined\n    //       className=\"dynamic-delete-button\"\n    //       style={{ margin: '0 8px' }}\n    //       onClick={() => {\n    //         remove(field.name);\n    //       }}\n    //     />\n    //   ) : null}\n    // </Form.Item>\n    React.createElement(Form.Item, Object.assign({}, formItemLayoutWithOutLabel, {\n      // label={index === 0 ? 'SecondMajors' : ''}\n      required: false,\n      key: field.key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, field, {\n      validateTrigger: ['onChange', 'onBlur'],\n      rules: [{\n        required: true,\n        whitespace: true,\n        message: `Please input ${props.name} or delete this field.`\n      }],\n      noStyle: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(AutocompleteText, {\n      id: \"autocomplete-settings\",\n      category: props.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 23\n      }\n    })), fields.length > 1 ? /*#__PURE__*/React.createElement(MinusCircleOutlined, {\n      className: \"dynamic-delete-button\",\n      style: {\n        margin: '0 8px'\n      },\n      onClick: () => {\n        remove(field.name);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 23\n      }\n    }) : null)), /*#__PURE__*/React.createElement(Form.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"dashed\",\n      onClick: () => {\n        add();\n      },\n      style: {\n        width: '60%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(PlusOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }\n    }), \" Add \", props.name)));\n  }), /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, \"Submit\")));\n};\n\nexport default DynamicFieldSet;","map":{"version":3,"sources":["/Users/frisciliasultan/Documents/Orbitalhosting/src/Settings/DynamicFieldSet.jsx"],"names":["Form","Input","Button","Switch","MinusCircleOutlined","PlusOutlined","AutocompleteText","React","formItemLayout","labelCol","xs","span","sm","wrapperCol","formItemLayoutWithOutLabel","offset","DynamicFieldSet","props","onFinish","values","console","log","fields","add","remove","map","field","index","key","required","whitespace","message","name","length","margin","width"],"mappings":"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","sourcesContent":["import { Form, Input, Button, Switch } from 'antd';\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\nimport AutocompleteText from \"../Pages/Module Planner Page/AutocompleteText\";\nimport React from \"react\";\n\nconst formItemLayout = {\n    labelCol: {\n      xs: { span: 24 },\n      sm: { span: 4 },\n    },\n    wrapperCol: {\n      xs: { span: 24 },\n      sm: { span: 20 },\n    },\n  };\n  const formItemLayoutWithOutLabel = {\n    wrapperCol: {\n      xs: { span: 24, offset: 0 },\n      sm: { span: 20, offset: 4 },\n    },\n  };\n  \n  const DynamicFieldSet = (props) => {\n    const onFinish = values => {\n      console.log('Received values of form:', values);\n    };\n  \n    return (\n      <Form name=\"dynamic_form_item\" {...formItemLayoutWithOutLabel} onFinish={onFinish}>\n        <Form.List \n        // name={props.name}\n        name=\"name\">\n          {(fields, { add, remove }) => {\n            return (\n              <div>\n                \n                {fields.map((field, index) => (\n                //   <Form.Item\n                //   {...(formItemLayoutWithOutLabel)}\n                //   // label={index === 0 ? 'SecondMajors' : ''}\n                //   required={false}\n                //   key={field.key}\n                // >\n                //   <Form.Item\n                //     {...field}\n                //     validateTrigger={['onChange', 'onBlur']}\n                //     rules={[\n                //       {\n                //         required: true,\n                //         whitespace: true,\n                //         message: `Please input ${props.name} or delete this field.`,\n                //       },\n                //     ]}\n                //     noStyle\n                //   >\n                //     <AutocompleteText id=\"autocomplete-settings\" category={props.name}/>\n                //     {/* <Input placeholder={`Enter ${props.name}`} style={{ width: '60%' }} /> */}\n                //   </Form.Item>\n                //   {fields.length > 1 ? (\n                //     <MinusCircleOutlined\n                //       className=\"dynamic-delete-button\"\n                //       style={{ margin: '0 8px' }}\n                //       onClick={() => {\n                //         remove(field.name);\n                //       }}\n                //     />\n                //   ) : null}\n                // </Form.Item>\n\n\n\n\n\n                  <Form.Item\n                    {...(formItemLayoutWithOutLabel)}\n                    // label={index === 0 ? 'SecondMajors' : ''}\n                    required={false}\n                    key={field.key}\n                  >\n                    <Form.Item\n                      {...field}\n                      validateTrigger={['onChange', 'onBlur']}\n                      rules={[\n                        {\n                          required: true,\n                          whitespace: true,\n                          message: `Please input ${props.name} or delete this field.`,\n                        },\n                      ]}\n                      noStyle\n                    >\n                      <AutocompleteText id=\"autocomplete-settings\" category={props.name}/>\n                      {/* <Input placeholder={`Enter ${props.name}`} style={{ width: '60%' }} /> */}\n                    </Form.Item>\n                    {fields.length > 1 ? (\n                      <MinusCircleOutlined\n                        className=\"dynamic-delete-button\"\n                        style={{ margin: '0 8px' }}\n                        onClick={() => {\n                          remove(field.name);\n                        }}\n                      />\n                    ) : null}\n                  </Form.Item>\n                ))}\n                <Form.Item>\n                  <Button\n                    type=\"dashed\"\n                    onClick={() => {\n                      add();\n                    }}\n                    style={{ width: '60%' }}\n                  >\n                    <PlusOutlined /> Add {props.name}\n                  </Button>\n                </Form.Item>\n              </div>\n            );\n          }}\n        </Form.List>\n  \n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Submit\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n  };\n  \n\nexport default DynamicFieldSet;"]},"metadata":{},"sourceType":"module"}