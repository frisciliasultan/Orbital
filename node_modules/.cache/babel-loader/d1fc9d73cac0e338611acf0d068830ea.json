{"ast":null,"code":"var _jsxFileName = \"/Users/frisciliasultan/Documents/Orbital/client/src/App.js\";\nimport React from \"react\";\nimport './App.css';\nimport { Options } from \"./Components/Options\";\nimport Dropdown from './Containers/GEM Dropdown';\nimport { Table } from './Containers/Core Modules';\nconst items = [{\n  id: 1,\n  value: 'GEH 1001: Globalisation and New Media'\n}, {\n  id: 2,\n  value: 'GEH 1002: Economic Issues in Dev World'\n}, {\n  id: 3,\n  value: 'GEH 1004: Chinese Heritage: History & Literature'\n}];\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.callBackendAPI = async () => {\n      const response = await fetch('/express_backend');\n      const body = await response.json();\n\n      if (response.status !== 200) {\n        throw Error(body.message);\n      }\n\n      return body;\n    };\n\n    this.state = {\n      data: null,\n      facultyOptions: '',\n      major: '',\n      specialisationOptions: '',\n      residence: 'N/A'\n    };\n    this.changeFaculty = this.changeFaculty.bind(this);\n  }\n\n  componentDidMount() {\n    // Call our fetch function below once the component mounts\n    this.callBackendAPI().then(res => this.setState({\n      data: res.express\n    })).catch(err => console.log(err));\n  } // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n\n\n  //receive the choice of faculty from options.js and change state of faculty\n  changeFaculty(newFaculty, newSpecialisation) {\n    this.setState({\n      facultyOptions: newFaculty,\n      specialisationOptions: newSpecialisation\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"App-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }, \"Module Overview\"), /*#__PURE__*/React.createElement(Options, {\n      onChange: this.changeFaculty,\n      facultyOptions: this.state.facultyOptions,\n      specialisationOptions: this.state.specialisationOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Dropdown, {\n      title: \"GER 1000: Quantitative Reasoning\",\n      items: items,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Dropdown, {\n      title: \"GEH: Human Cultures\",\n      items: items,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Dropdown, {\n      title: \"GEQ: Asking Questions\",\n      items: items,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Dropdown, {\n      title: \"GES: Singapore Studies\",\n      items: items,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Dropdown, {\n      title: \"GET: Thinking and Expression\",\n      items: items,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Table, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["/Users/frisciliasultan/Documents/Orbital/client/src/App.js"],"names":["React","Options","Dropdown","Table","items","id","value","Main","Component","constructor","props","callBackendAPI","response","fetch","body","json","status","Error","message","state","data","facultyOptions","major","specialisationOptions","residence","changeFaculty","bind","componentDidMount","then","res","setState","express","catch","err","console","log","newFaculty","newSpecialisation","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport './App.css';\nimport { Options } from \"./Components/Options\";\nimport Dropdown from './Containers/GEM Dropdown';\nimport { Table } from './Containers/Core Modules'\n\n\n\nconst items = [\n  {\n    id: 1,\n    value: 'GEH 1001: Globalisation and New Media',\n  },\n  {\n    id: 2,\n    value: 'GEH 1002: Economic Issues in Dev World',\n  },\n  {\n    id: 3,\n    value: 'GEH 1004: Chinese Heritage: History & Literature',\n  },\n];\n\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {data: null,\n      facultyOptions: '',\n      major: '',\n      specialisationOptions: '',\n      residence: 'N/A'}\n    this.changeFaculty = this.changeFaculty.bind(this);\n  }\n  \n  componentDidMount() {\n    // Call our fetch function below once the component mounts\n  this.callBackendAPI()\n    .then(res => this.setState({ data: res.express }))\n    .catch(err => console.log(err));\n  }\n  // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n  callBackendAPI = async () => {\n  const response = await fetch('/express_backend');\n  const body = await response.json();\n\n  if (response.status !== 200) {\n    throw Error(body.message) \n  }\n  return body;\n  };\n\n  //receive the choice of faculty from options.js and change state of faculty\n  changeFaculty(newFaculty, newSpecialisation) {\n    this.setState({\n      facultyOptions: newFaculty,\n      specialisationOptions: newSpecialisation\n    });\n  }\n\n  render() {\n       return (\n       <div className=\"App\">\n          <h1 className=\"App-title\">Module Overview</h1>\n\n          <Options onChange={this.changeFaculty} \n            facultyOptions={this.state.facultyOptions}\n            specialisationOptions={this.state.specialisationOptions}/>\n\n          <Dropdown title=\"GER 1000: Quantitative Reasoning\" items={items} />\n          <Dropdown title=\"GEH: Human Cultures\" items={items} />\n          <Dropdown title=\"GEQ: Asking Questions\" items={items} />\n          <Dropdown title=\"GES: Singapore Studies\" items={items} />\n          <Dropdown title=\"GET: Thinking and Expression\" items={items} />\n\n          <Table />\n        \n     </div>\n   );\n    }\n}\n\n\nexport default Main;\n\n"]},"metadata":{},"sourceType":"module"}