{"ast":null,"code":"var _jsxFileName = \"/Users/frisciliasultan/Documents/Orbital/client/src/Pages/Module Planner Page/Board.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport AutoCompleteText from './AutocompleteText';\nimport { Card, Button } from 'react-bootstrap';\nimport ModuleCard from './Card';\nimport { ItemTypes } from './itemType';\nimport { useDrop } from 'react-dnd';\n\nfunction Board(props) {\n  const [isTextBoxOpen, setIsTextBoxOpen] = useState(false); // const [moduleCodeTitle, setModuleCodeTitle] = useState([]);\n\n  const [displayCard, setDisplayCard] = useState();\n\n  const generateCards = () => props.selectedModule.filter((object, i) => object.location === props.id).map((object, i) => /*#__PURE__*/React.createElement(ModuleCard, {\n    id: object.moduleCode,\n    location: props.year + ' ' + props.semester,\n    className: \"card\",\n    title: `${object.moduleCode}: ${object.title}`,\n    MCs: object.moduleCredit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 14\n    }\n  }));\n\n  const [{\n    isOver\n  }, drop] = useDrop({\n    accept: ItemTypes.CARD,\n    drop: (item, monitor) => console.log(item),\n    collect: monitor => ({\n      isOver: !!monitor.isOver()\n    })\n  });\n\n  function handleButtonClick() {\n    setIsTextBoxOpen(!isTextBoxOpen);\n  } // function updateModuleCards(object) {\n  //    object.location = props.year + ' ' + props.semester;\n  //     let newModuleCodeTitle = moduleCodeTitle;\n  //     if (!newModuleCodeTitle.includes(object)) {\n  //         newModuleCodeTitle.push(object);\n  //         setModuleCodeTitle(newModuleCodeTitle);\n  //         setDisplayCard(generateCards);\n  //     }\n  // }\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, props.semester), /*#__PURE__*/React.createElement(\"div\", {\n    ref: drop,\n    id: props.id,\n    style: {\n      width: '20rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '165px',\n      height: !displayCard && '59px',\n      outline: displayCard ? 'none' : '1px dotted'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, displayCard ? displayCard : 'Drop module here'), isTextBoxOpen && /*#__PURE__*/React.createElement(AutoCompleteText, {\n    updateSelectedModules: props.updateSelectedModules,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleButtonClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, \"Add Module\")));\n}\n\nexport default Board;","map":{"version":3,"sources":["/Users/frisciliasultan/Documents/Orbital/client/src/Pages/Module Planner Page/Board.jsx"],"names":["React","useState","useEffect","AutoCompleteText","Card","Button","ModuleCard","ItemTypes","useDrop","Board","props","isTextBoxOpen","setIsTextBoxOpen","displayCard","setDisplayCard","generateCards","selectedModule","filter","object","i","location","id","map","moduleCode","year","semester","title","moduleCredit","isOver","drop","accept","CARD","item","monitor","console","log","collect","handleButtonClick","width","height","outline","updateSelectedModules"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,iBAA7B;AACA,OAAOC,UAAP,MAAuB,QAAvB;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,SAASC,OAAT,QAAwB,WAAxB;;AAMA,SAASC,KAAT,CAAgBC,KAAhB,EAAuB;AACnB,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,CAAC,KAAD,CAAlD,CADmB,CAEnB;;AACA,QAAM,CAACY,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,EAA9C;;AACA,QAAMc,aAAa,GAAG,MAAML,KAAK,CAACM,cAAN,CACvBC,MADuB,CAChB,CAACC,MAAD,EAASC,CAAT,KAAeD,MAAM,CAACE,QAAP,KAAoBV,KAAK,CAACW,EADzB,EAEvBC,GAFuB,CAEnB,CAACJ,MAAD,EAASC,CAAT,kBACA,oBAAC,UAAD;AACG,IAAA,EAAE,EAAED,MAAM,CAACK,UADd;AAEG,IAAA,QAAQ,EAAEb,KAAK,CAACc,IAAN,GAAa,GAAb,GAAmBd,KAAK,CAACe,QAFtC;AAGG,IAAA,SAAS,EAAC,MAHb;AAIG,IAAA,KAAK,EAAG,GAAEP,MAAM,CAACK,UAAW,KAAIL,MAAM,CAACQ,KAAM,EAJhD;AAKG,IAAA,GAAG,EAAER,MAAM,CAACS,YALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHmB,CAA5B;;AAUA,QAAM,CAAC;AAAEC,IAAAA;AAAF,GAAD,EAAaC,IAAb,IAAqBrB,OAAO,CAAC;AAC3BsB,IAAAA,MAAM,EAAEvB,SAAS,CAACwB,IADS;AAE3BF,IAAAA,IAAI,EAAE,CAACG,IAAD,EAAOC,OAAP,KAAmBC,OAAO,CAACC,GAAR,CAAYH,IAAZ,CAFE;AAG3BI,IAAAA,OAAO,EAAEH,OAAO,KAAK;AACjBL,MAAAA,MAAM,EAAE,CAAC,CAACK,OAAO,CAACL,MAAR;AADO,KAAL;AAHW,GAAD,CAAlC;;AAQA,WAASS,iBAAT,GAA6B;AACzBzB,IAAAA,gBAAgB,CAAC,CAACD,aAAF,CAAhB;AACF,GAxBiB,CA0BnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAEI,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,KAAK,CAACe,QAAX,CADJ,eAEA;AACI,IAAA,GAAG,EAAEI,IADT;AAEI,IAAA,EAAE,EAAEnB,KAAK,CAACW,EAFd;AAGI,IAAA,KAAK,EAAE;AAACiB,MAAAA,KAAK,EAAE;AAAR,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMA;AAAK,IAAA,KAAK,EAAE;AAACA,MAAAA,KAAK,EAAE,OAAR;AAAiBC,MAAAA,MAAM,EAAE,CAAC1B,WAAD,IAAgB,MAAzC;AAAiD2B,MAAAA,OAAO,EAAE3B,WAAW,GAAG,MAAH,GAAY;AAAjF,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6GA,WAAW,GAAGA,WAAH,GAAiB,kBAAzI,CANA,EAOCF,aAAa,iBAAI,oBAAC,gBAAD;AAAkB,IAAA,qBAAqB,EAAED,KAAK,CAAC+B,qBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPlB,eAQI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEJ,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARJ,CAFA,CADJ;AAiBP;;AAED,eAAe5B,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport AutoCompleteText from './AutocompleteText';\nimport { Card, Button } from 'react-bootstrap';\nimport ModuleCard from './Card';\nimport { ItemTypes } from './itemType';\nimport { useDrop } from 'react-dnd';\n\n\n\n\n\nfunction Board (props) {\n    const [isTextBoxOpen, setIsTextBoxOpen] = useState(false);\n    // const [moduleCodeTitle, setModuleCodeTitle] = useState([]);\n    const [displayCard, setDisplayCard] = useState();\n    const generateCards = () => props.selectedModule\n        .filter((object, i) => object.location === props.id)\n        .map((object, i) => \n            (<ModuleCard\n                id={object.moduleCode}\n                location={props.year + ' ' + props.semester}\n                className=\"card\"\n                title={`${object.moduleCode}: ${object.title}`}\n                MCs={object.moduleCredit}/>));\n    \n    const [{ isOver }, drop] = useDrop({\n            accept: ItemTypes.CARD,\n            drop: (item, monitor) => console.log(item),\n            collect: monitor => ({\n                isOver: !!monitor.isOver(),\n            }),\n    })\n\n    function handleButtonClick() {\n        setIsTextBoxOpen(!isTextBoxOpen);\n     }\n\n    // function updateModuleCards(object) {\n    //    object.location = props.year + ' ' + props.semester;\n    //     let newModuleCodeTitle = moduleCodeTitle;\n    //     if (!newModuleCodeTitle.includes(object)) {\n    //         newModuleCodeTitle.push(object);\n    //         setModuleCodeTitle(newModuleCodeTitle);\n    //         setDisplayCard(generateCards);\n    //     }\n\n    // }\n\n        return (\n            <div>\n                <h3>{props.semester}</h3>\n            <div   \n                ref={drop}\n                id={props.id}\n                style={{width: '20rem'}}\n            >\n\n            <div style={{width: '165px', height: !displayCard && '59px', outline: displayCard ? 'none' : '1px dotted'}}>{displayCard ? displayCard : 'Drop module here'}</div>\n            {isTextBoxOpen && <AutoCompleteText updateSelectedModules={props.updateSelectedModules}/>}\n                <Button onClick={handleButtonClick}>Add Module</Button>\n                \n                </div>\n            </div>\n        )\n   \n}\n\nexport default Board;"]},"metadata":{},"sourceType":"module"}