{"ast":null,"code":"import { SET_USER_SETTINGS, SET_CURRENT_SEMESTER, SET_MATRICULATION_OPTIONS, SET_TARGET_GRAD_OPTIONS, CLEAN_UP_SETTINGS, GET_SUCCESS, SET_ACAD_OPTIONS, SET_EDIT_ALL, SETTINGS_LOADING } from \"./types\";\nimport { setUserLoading } from \"./authActions\";\nimport axios from \"axios\";\nexport const setUserSettings = userData => {\n  return {\n    type: SET_USER_SETTINGS,\n    payload: userData\n  };\n};\nexport const initialSettings = () => async dispatch => {\n  try {\n    axios.defaults.timeout = 7000;\n    dispatch(setUserLoading(true));\n    const isFetched = await axios.get('https://modtree-api.netlify.app/.netlify/functions/user/account').then(res => {\n      dispatch(setUserSettings(res.data));\n    }).then(res => {\n      return true;\n    });\n\n    if (isFetched) {\n      dispatch(setUserLoading(false));\n    }\n  } catch (err) {\n    dispatch(setUserLoading(false));\n    console.log(err); // window.location.replace(\"/500-error\")\n  }\n};\nexport const updateSettings = (userData, history) => dispatch => {\n  // let config = {\n  //     headers: {\n  //         \"Content-Type\": \"application/x-www-form-urlencoded\"\n  //     }\n  // }\n  // axios.defaults.timeout = 15000;\n  dispatch(setSettingsLoading(true));\n  console.log(userData); //     var axios = require('axios');\n  // var qs = require('qs');\n  // var data = qs.stringify({\n  //  userData\n  // });\n  // var config = {\n  //   method: 'put',\n  //   url: 'https://modtree-api.netlify.app/.netlify/functions/user/account',\n  //   headers: { \n  //     'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjVmMGYzZjFlMzAxYjBjMDAwNzE0MTA2ZiIsIm5hbWUiOiJ0ZXN0IiwiZW1haWwiOiJ0ZXN0QGdtYWlsLmNvbSIsImlhdCI6MTU5NDgzNDcyMywiZXhwIjoxNjI2MzkxNjQ5fQ.j-TqeMs9wQuh2KG4DU4kd79VJv0zJZk9GeYVYdHd4Nw', \n  //     'Content-Type': 'application/x-www-form-urlencoded'\n  //   },\n  //   data : data\n  // };\n  // axios(config)\n  // .then(function (response) {\n  //   console.log(JSON.stringify(response.data));\n  // })\n  // .catch(function (error) {\n  //   console.log(error);\n  // });\n\n  const data = {\n    major: [{\n      name: \"Bachelor of bugsquashing\",\n      tag: \"sth\"\n    }],\n    majorIndex: 2,\n    matriculationYear: \"2017/2018\",\n    minors: [],\n    residence: [{\n      name: \"Bachelor of bugsquashing\",\n      tag: \"sth\"\n    }],\n    secondMajors: [],\n    specialisation: [],\n    targetGradYear: \"2017/2018\"\n  }; // const data = {name: \"hey\", major: [{name: \"Bachelor of bugsquashing\", tag: \"sth\"}], majorIndex: 1, matriculationYear: \"2017/2018\"}\n\n  axios.put(\"https://modtree-api.netlify.app/.netlify/functions/user/account\", data) // .put(\"http://192.168.42.170:9000/.netlify/functions/user/account\", userData, config)\n  .then(res => {\n    console.log(res.data);\n    dispatch(setUserSettings(res.data.updated));\n  }).then(res => {\n    dispatch({\n      type: GET_SUCCESS,\n      payload: \"Saved successfully!\"\n    });\n    dispatch(setSettingsLoading(false));\n  }).catch(err => {\n    dispatch(setSettingsLoading(false)); // window.location.replace(\"/500-error\")\n\n    history.push(\"/500-error\");\n  });\n};\nexport const setCurrentSemester = (currentAY, currentSemester, month) => {\n  return {\n    type: SET_CURRENT_SEMESTER,\n    currentAY,\n    currentSemester,\n    month\n  };\n};\nexport const setMatriculationYearOptions = (currentAY, currentSemester) => {\n  return {\n    type: SET_MATRICULATION_OPTIONS,\n    currentAY,\n    currentSemester\n  };\n};\nexport const setTargetGradYearOptions = (AY, Semester) => {\n  return {\n    type: SET_TARGET_GRAD_OPTIONS,\n    AY,\n    Semester\n  };\n};\nexport const cleanUpSettings = () => {\n  return {\n    type: CLEAN_UP_SETTINGS\n  };\n};\nexport const setDegreeOptions = () => dispatch => {\n  axios.defaults.timeout = 5000;\n  axios.all([axios.get('https://modtree-api.netlify.app/.netlify/functions/info/bachelors'), axios.get('https://modtree-api.netlify.app/.netlify/functions/info/secondMajors'), axios.get('https://modtree-api.netlify.app/.netlify/functions/info/minors'), axios.get('https://modtree-api.netlify.app/.netlify/functions/info/residences')]).then(resArr => {\n    dispatch(setAcadOptions(resArr[0].data, resArr[1].data, resArr[2].data, resArr[3].data));\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const setAcadOptions = (bachelors, secondMajors, minors, residences) => {\n  return {\n    type: SET_ACAD_OPTIONS,\n    bachelors,\n    secondMajors,\n    minors,\n    residences\n  };\n};\nexport const setEditAll = (status, current, category) => {\n  return {\n    type: SET_EDIT_ALL,\n    status,\n    current,\n    category\n  };\n};\nexport const setSettingsLoading = status => {\n  return {\n    type: SETTINGS_LOADING,\n    payload: status\n  };\n};","map":{"version":3,"sources":["/Users/frisciliasultan/Documents/Orbitalhosting/src/actions/settingsActions.js"],"names":["SET_USER_SETTINGS","SET_CURRENT_SEMESTER","SET_MATRICULATION_OPTIONS","SET_TARGET_GRAD_OPTIONS","CLEAN_UP_SETTINGS","GET_SUCCESS","SET_ACAD_OPTIONS","SET_EDIT_ALL","SETTINGS_LOADING","setUserLoading","axios","setUserSettings","userData","type","payload","initialSettings","dispatch","defaults","timeout","isFetched","get","then","res","data","err","console","log","updateSettings","history","setSettingsLoading","major","name","tag","majorIndex","matriculationYear","minors","residence","secondMajors","specialisation","targetGradYear","put","updated","catch","push","setCurrentSemester","currentAY","currentSemester","month","setMatriculationYearOptions","setTargetGradYearOptions","AY","Semester","cleanUpSettings","setDegreeOptions","all","resArr","setAcadOptions","bachelors","residences","setEditAll","status","current","category"],"mappings":"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","sourcesContent":["import {\n    SET_USER_SETTINGS,\n    SET_CURRENT_SEMESTER,\n    SET_MATRICULATION_OPTIONS,\n    SET_TARGET_GRAD_OPTIONS,\n    CLEAN_UP_SETTINGS,\n    GET_SUCCESS,\n    SET_ACAD_OPTIONS,\n    SET_EDIT_ALL,\n    SETTINGS_LOADING\n} from \"./types\";\nimport { setUserLoading } from \"./authActions\";\nimport axios from \"axios\";\n\nexport const setUserSettings = (userData) => {\n    return {\n        type: SET_USER_SETTINGS,\n        payload: userData\n    }\n}\n\nexport const initialSettings = () => async dispatch => {\n    try {\n        axios.defaults.timeout = 7000;\n        dispatch(setUserLoading(true));\n        \n        const isFetched = await axios  \n                        .get('https://modtree-api.netlify.app/.netlify/functions/user/account')\n                        .then(res => {\n                                dispatch(setUserSettings(res.data))\n                            })\n                        .then(res => {return true})\n        if(isFetched) {\n            dispatch(setUserLoading(false))\n        }\n    }\n    catch (err) {\n            dispatch(setUserLoading(false));\n            console.log(err)\n            // window.location.replace(\"/500-error\")\n        }\n}\n\nexport const updateSettings = (userData, history) => dispatch => {\n    // let config = {\n    //     headers: {\n    //         \"Content-Type\": \"application/x-www-form-urlencoded\"\n    //     }\n    // }\n    \n    // axios.defaults.timeout = 15000;\n    dispatch(setSettingsLoading(true))\n    console.log(userData)\n//     var axios = require('axios');\n// var qs = require('qs');\n// var data = qs.stringify({\n//  userData\n// });\n// var config = {\n//   method: 'put',\n//   url: 'https://modtree-api.netlify.app/.netlify/functions/user/account',\n//   headers: { \n//     'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjVmMGYzZjFlMzAxYjBjMDAwNzE0MTA2ZiIsIm5hbWUiOiJ0ZXN0IiwiZW1haWwiOiJ0ZXN0QGdtYWlsLmNvbSIsImlhdCI6MTU5NDgzNDcyMywiZXhwIjoxNjI2MzkxNjQ5fQ.j-TqeMs9wQuh2KG4DU4kd79VJv0zJZk9GeYVYdHd4Nw', \n//     'Content-Type': 'application/x-www-form-urlencoded'\n//   },\n//   data : data\n// };\n\n// axios(config)\n// .then(function (response) {\n//   console.log(JSON.stringify(response.data));\n// })\n// .catch(function (error) {\n//   console.log(error);\n// });\n    const data = {major: [{name: \"Bachelor of bugsquashing\", tag: \"sth\"}],\n        majorIndex: 2,\n        matriculationYear: \"2017/2018\",\n        minors: [],\n        residence: [{name: \"Bachelor of bugsquashing\", tag: \"sth\"}],\n        secondMajors: [],\n        specialisation: [],\n        targetGradYear: \"2017/2018\"}\n    // const data = {name: \"hey\", major: [{name: \"Bachelor of bugsquashing\", tag: \"sth\"}], majorIndex: 1, matriculationYear: \"2017/2018\"}\n    axios\n        .put(\"https://modtree-api.netlify.app/.netlify/functions/user/account\", data)\n        // .put(\"http://192.168.42.170:9000/.netlify/functions/user/account\", userData, config)\n        .then(res => {\n            console.log(res.data);\n           dispatch(setUserSettings(res.data.updated))})\n        .then(res => {\n            dispatch({\n                        type: GET_SUCCESS,\n                        payload: \"Saved successfully!\"\n            });\n            dispatch(setSettingsLoading(false))\n            }\n        )\n        .catch(err => {\n                dispatch(setSettingsLoading(false))\n                // window.location.replace(\"/500-error\")\n                history.push(\"/500-error\");\n            })\n};\n\nexport const setCurrentSemester = (currentAY, currentSemester, month) => {\n    return {\n        type: SET_CURRENT_SEMESTER,\n        currentAY,\n        currentSemester,\n        month\n    }\n}\n\nexport const setMatriculationYearOptions = (currentAY, currentSemester) => {\n    return {\n        type: SET_MATRICULATION_OPTIONS,\n        currentAY,\n        currentSemester\n    }\n}\n\nexport const setTargetGradYearOptions = (AY, Semester) => {\n    return {\n        type: SET_TARGET_GRAD_OPTIONS,\n        AY,\n        Semester\n    }\n}\n\nexport const cleanUpSettings = () => {\n    return { \n        type: CLEAN_UP_SETTINGS\n    }\n}\n\nexport const setDegreeOptions = () => dispatch => {\n    axios.defaults.timeout = 5000;\n    axios.all([\n        axios.get('https://modtree-api.netlify.app/.netlify/functions/info/bachelors'),\n        axios.get('https://modtree-api.netlify.app/.netlify/functions/info/secondMajors'),\n        axios.get('https://modtree-api.netlify.app/.netlify/functions/info/minors'),\n        axios.get('https://modtree-api.netlify.app/.netlify/functions/info/residences')\n    ])\n    .then(resArr => {\n            dispatch(setAcadOptions(resArr[0].data, resArr[1].data, resArr[2].data, resArr[3].data));\n        }) \n    .catch(err => {\n        console.log(err)\n    });\n}\n\nexport const setAcadOptions = (bachelors, secondMajors, minors, residences) => {\n    return {\n        type: SET_ACAD_OPTIONS,\n        bachelors,\n        secondMajors,\n        minors, \n        residences\n    }\n}\n\nexport const setEditAll = (status, current, category) => {\n    return {\n        type: SET_EDIT_ALL,\n        status,\n        current,\n        category\n    }\n} \n\nexport const setSettingsLoading = (status) => {\n    return {\n        type: SETTINGS_LOADING,\n        payload: status\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}