{"ast":null,"code":"var _jsxFileName = \"/Users/frisciliasultan/Documents/Orbital/client/src/Pages/Module Planner Page/ModulePlannerPage.jsx\";\nimport React, { useEffect } from 'react';\nimport Board from './Board';\nimport Rules from './Rules';\nimport TrashBox from './TrashBox';\nimport YearDisplay from './YearDisplay';\nimport './plannertemp.css';\nimport { Button, Card } from 'react-bootstrap';\nimport { HTML5Backend as Backend } from 'react-dnd-html5-backend';\nimport { DndProvider } from 'react-dnd';\nimport { connect } from 'react-redux';\nimport { callBackendAPI, setCallBackendNow, setSelectedModules } from '../../actions/modplanActions';\nimport { updateSettings } from \"../../actions/settingsActions\";\nimport PropTypes from 'prop-types';\nimport isEmpty from 'is-empty';\n\nconst ModulePlannerPageTemp = props => {\n  useEffect(() => {\n    return () => {\n      if (isEmpty(props.settings.userInfo)) {\n        props.initialSettings();\n      }\n\n      if (isEmpty(props.semesterOptions) && !isEmpty(props.settings.userInfo)) {\n        const start = props.settings.userInfo.matriculationYear.substr(0, 4);\n        const end = props.settings.userInfo.targetGradYear.substr(5, 4);\n        const diff = end - start;\n        props.setSemesterOptions(diff);\n      }\n    };\n  }, [props.settings.userInfo]); // componentWillMount() {\n  //     if(isEmpty(this.props.modplan.rules)) {\n  //         this.props.callBackendAPI('Rules');\n  //     }\n  //     if(isEmpty(this.props.modplan.modules)){\n  //         this.props.callBackendAPI('NUSMods');\n  //     }\n  //     if(!isEmpty(this.props.settings.userInfo.modplan)) {\n  //         console.log('called');\n  //         this.props.setSelectedModules(this.props.settings.userInfo.modplan)\n  //     }\n  // }\n\n  const handleEvalButtonClick = () => {\n    const modules = this.props.modplan.selectedModules;\n\n    if (isEmpty(modules)) {\n      alert('Please add modules before evaluating');\n    } else {\n      this.props.setCallBackendNow(true);\n    }\n  };\n\n  const handleSaveClick = () => {\n    const userData = {\n      modPlan: this.props.modplan.selectedModules,\n      name: this.props.settings.userInfo.name,\n      residential: this.props.settings.userInfo.residential,\n      major: this.props.settings.userInfo.major,\n      matriculationYear: this.props.settings.userInfo.matriculationYear,\n      targetGradYear: this.props.settings.userInfo.targetGradYear,\n      transcript: {}\n    };\n    this.props.updateSettings(userData);\n  };\n\n  const module = this.props.modplan.modules;\n  return /*#__PURE__*/React.createElement(DndProvider, {\n    backend: Backend,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-module-planner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(YearDisplay, {\n    year: \"Year 1\",\n    AY: \"2018/2019\",\n    module: this.props.modplan.modules,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(YearDisplay, {\n    year: \"Year 2\",\n    AY: \"2019/2020\",\n    module: this.props.modplan.modules,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(YearDisplay, {\n    year: \"Year 3\",\n    AY: \"2020/2021\",\n    module: this.props.modplan.modules,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(YearDisplay, {\n    year: \"Year 4\",\n    AY: \"2022/2023\",\n    module: this.props.modplan.modules,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(TrashBox, {\n    module: this.props.modplan.selectedModules,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    className: \"button\",\n    id: \"eval-button\",\n    onClick: () => this.handleEvalButtonClick(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  }, \"Evaluate\"), /*#__PURE__*/React.createElement(Button, {\n    className: \"button\",\n    onClick: this.handleSaveClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  }, \"Save\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Rules, {\n    rules: this.props.modplan.rules,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }\n  })));\n};\n\nModulePlannerPageTemp.propTypes = {\n  callBackendAPI: PropTypes.func.isRequired,\n  setCallBackendNow: PropTypes.func.isRequired,\n  updateSettings: PropTypes.func.isRequired,\n  modplan: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  modplan: state.modplan,\n  settings: state.settings\n});\n\nexport default connect(mapStateToProps, {\n  callBackendAPI,\n  setCallBackendNow,\n  updateSettings,\n  setSelectedModules\n})(ModulePlannerPageTemp);","map":{"version":3,"sources":["/Users/frisciliasultan/Documents/Orbital/client/src/Pages/Module Planner Page/ModulePlannerPage.jsx"],"names":["React","useEffect","Board","Rules","TrashBox","YearDisplay","Button","Card","HTML5Backend","Backend","DndProvider","connect","callBackendAPI","setCallBackendNow","setSelectedModules","updateSettings","PropTypes","isEmpty","ModulePlannerPageTemp","props","settings","userInfo","initialSettings","semesterOptions","start","matriculationYear","substr","end","targetGradYear","diff","setSemesterOptions","handleEvalButtonClick","modules","modplan","selectedModules","alert","handleSaveClick","userData","modPlan","name","residential","major","transcript","module","rules","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,mBAAP;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,iBAA7B;AACA,SAASC,YAAY,IAAIC,OAAzB,QAAwC,yBAAxC;AACA,SAASC,WAAT,QAA4B,WAA5B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,EAAyBC,iBAAzB,EAA4CC,kBAA5C,QAAsE,8BAAtE;AACA,SAASC,cAAT,QAA+B,+BAA/B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,UAApB;;AAGA,MAAMC,qBAAqB,GAAIC,KAAD,IAAW;AAErClB,EAAAA,SAAS,CAAC,MAAM;AACZ,WAAO,MAAM;AACT,UAAGgB,OAAO,CAACE,KAAK,CAACC,QAAN,CAAeC,QAAhB,CAAV,EAAqC;AACjCF,QAAAA,KAAK,CAACG,eAAN;AACH;;AAED,UAAGL,OAAO,CAACE,KAAK,CAACI,eAAP,CAAP,IAAkC,CAACN,OAAO,CAACE,KAAK,CAACC,QAAN,CAAeC,QAAhB,CAA7C,EAAuE;AACnE,cAAMG,KAAK,GAAGL,KAAK,CAACC,QAAN,CAAeC,QAAf,CAAwBI,iBAAxB,CAA0CC,MAA1C,CAAiD,CAAjD,EAAoD,CAApD,CAAd;AACA,cAAMC,GAAG,GAAGR,KAAK,CAACC,QAAN,CAAeC,QAAf,CAAwBO,cAAxB,CAAuCF,MAAvC,CAA8C,CAA9C,EAAiD,CAAjD,CAAZ;AACA,cAAMG,IAAI,GAAGF,GAAG,GAAGH,KAAnB;AACAL,QAAAA,KAAK,CAACW,kBAAN,CAAyBD,IAAzB;AACH;AACJ,KAXD;AAYH,GAbQ,EAaN,CAACV,KAAK,CAACC,QAAN,CAAeC,QAAhB,CAbM,CAAT,CAFqC,CAgBrC;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA,QAAMU,qBAAqB,GAAG,MAAM;AAChC,UAAMC,OAAO,GAAG,KAAKb,KAAL,CAAWc,OAAX,CAAmBC,eAAnC;;AACA,QAAIjB,OAAO,CAACe,OAAD,CAAX,EAAsB;AAClBG,MAAAA,KAAK,CAAC,sCAAD,CAAL;AACH,KAFD,MAEO;AACH,WAAKhB,KAAL,CAAWN,iBAAX,CAA6B,IAA7B;AACH;AACJ,GAPD;;AASA,QAAMuB,eAAe,GAAG,MAAM;AAC1B,UAAMC,QAAQ,GAAG;AACbC,MAAAA,OAAO,EAAE,KAAKnB,KAAL,CAAWc,OAAX,CAAmBC,eADf;AAEbK,MAAAA,IAAI,EAAE,KAAKpB,KAAL,CAAWC,QAAX,CAAoBC,QAApB,CAA6BkB,IAFtB;AAGbC,MAAAA,WAAW,EAAE,KAAKrB,KAAL,CAAWC,QAAX,CAAoBC,QAApB,CAA6BmB,WAH7B;AAIbC,MAAAA,KAAK,EAAE,KAAKtB,KAAL,CAAWC,QAAX,CAAoBC,QAApB,CAA6BoB,KAJvB;AAKbhB,MAAAA,iBAAiB,EAAE,KAAKN,KAAL,CAAWC,QAAX,CAAoBC,QAApB,CAA6BI,iBALnC;AAMbG,MAAAA,cAAc,EAAE,KAAKT,KAAL,CAAWC,QAAX,CAAoBC,QAApB,CAA6BO,cANhC;AAObc,MAAAA,UAAU,EAAE;AAPC,KAAjB;AAUA,SAAKvB,KAAL,CAAWJ,cAAX,CAA0BsB,QAA1B;AACH,GAZD;;AAeI,QAAMM,MAAM,GAAG,KAAKxB,KAAL,CAAWc,OAAX,CAAmBD,OAAlC;AACA,sBACI,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAEvB,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,WAAD;AACQ,IAAA,IAAI,EAAC,QADb;AAEQ,IAAA,EAAE,EAAC,WAFX;AAGQ,IAAA,MAAM,EAAE,KAAKU,KAAL,CAAWc,OAAX,CAAmBD,OAHnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAMI,oBAAC,WAAD;AACQ,IAAA,IAAI,EAAC,QADb;AAEQ,IAAA,EAAE,EAAC,WAFX;AAGQ,IAAA,MAAM,EAAE,KAAKb,KAAL,CAAWc,OAAX,CAAmBD,OAHnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,eAWI,oBAAC,WAAD;AACQ,IAAA,IAAI,EAAC,QADb;AAEQ,IAAA,EAAE,EAAC,WAFX;AAGQ,IAAA,MAAM,EAAE,KAAKb,KAAL,CAAWc,OAAX,CAAmBD,OAHnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,eAgBI,oBAAC,WAAD;AACQ,IAAA,IAAI,EAAC,QADb;AAEQ,IAAA,EAAE,EAAC,WAFX;AAGQ,IAAA,MAAM,EAAE,KAAKb,KAAL,CAAWc,OAAX,CAAmBD,OAHnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBJ,eAqBI,oBAAC,QAAD;AACQ,IAAA,MAAM,EAAE,KAAKb,KAAL,CAAWc,OAAX,CAAmBC,eADnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArBJ,eAyBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzBJ,eA2BI,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,QAAlB;AAA2B,IAAA,EAAE,EAAC,aAA9B;AAA4C,IAAA,OAAO,EAAE,MAAM,KAAKH,qBAAL,EAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA3BJ,eA4BI,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,QAAlB;AAA2B,IAAA,OAAO,EAAE,KAAKK,eAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA5BJ,eA6BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA7BJ,eA8BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA9BJ,eA+BI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AACI,IAAA,KAAK,EAAE,KAAKjB,KAAL,CAAWc,OAAX,CAAmBW,KAD9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CA/BJ,eAmCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnCJ,CADJ,CADJ;AA0CP,CAlGD;;AAoGA1B,qBAAqB,CAAC2B,SAAtB,GAAkC;AAC9BjC,EAAAA,cAAc,EAAEI,SAAS,CAAC8B,IAAV,CAAeC,UADD;AAE9BlC,EAAAA,iBAAiB,EAAEG,SAAS,CAAC8B,IAAV,CAAeC,UAFJ;AAG9BhC,EAAAA,cAAc,EAAEC,SAAS,CAAC8B,IAAV,CAAeC,UAHD;AAI9Bd,EAAAA,OAAO,EAAEjB,SAAS,CAACgC,MAAV,CAAiBD;AAJI,CAAlC;;AAOA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAC9BjB,EAAAA,OAAO,EAAEiB,KAAK,CAACjB,OADe;AAE9Bb,EAAAA,QAAQ,EAAE8B,KAAK,CAAC9B;AAFc,CAAL,CAA7B;;AAKA,eAAeT,OAAO,CAACsC,eAAD,EACF;AAAErC,EAAAA,cAAF;AAAkBC,EAAAA,iBAAlB;AAAqCE,EAAAA,cAArC;AAAqDD,EAAAA;AAArD,CADE,CAAP,CAEMI,qBAFN,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport Board from './Board';\nimport Rules from './Rules';\nimport TrashBox from './TrashBox';\nimport YearDisplay from './YearDisplay';\nimport './plannertemp.css';\nimport { Button, Card } from 'react-bootstrap';\nimport { HTML5Backend as Backend } from 'react-dnd-html5-backend';\nimport { DndProvider } from 'react-dnd';\nimport { connect } from 'react-redux';\nimport { callBackendAPI, setCallBackendNow, setSelectedModules } from '../../actions/modplanActions';\nimport { updateSettings } from \"../../actions/settingsActions\";\nimport PropTypes from 'prop-types';\nimport isEmpty from 'is-empty'\n\n\nconst ModulePlannerPageTemp = (props) => {\n    \n    useEffect(() => {\n        return () => {\n            if(isEmpty(props.settings.userInfo)) {\n                props.initialSettings();\n            }\n\n            if(isEmpty(props.semesterOptions) && !isEmpty(props.settings.userInfo)){\n                const start = props.settings.userInfo.matriculationYear.substr(0, 4);\n                const end = props.settings.userInfo.targetGradYear.substr(5, 4);\n                const diff = end - start;\n                props.setSemesterOptions(diff);\n            }\n        };\n    }, [props.settings.userInfo])\n    // componentWillMount() {\n    //     if(isEmpty(this.props.modplan.rules)) {\n    //         this.props.callBackendAPI('Rules');\n    //     }\n        \n    //     if(isEmpty(this.props.modplan.modules)){\n    //         this.props.callBackendAPI('NUSMods');\n    //     }\n\n    //     if(!isEmpty(this.props.settings.userInfo.modplan)) {\n    //         console.log('called');\n    //         this.props.setSelectedModules(this.props.settings.userInfo.modplan)\n    //     }\n    // }\n    \n    const handleEvalButtonClick = () => {\n        const modules = this.props.modplan.selectedModules;\n        if (isEmpty(modules)) {\n            alert('Please add modules before evaluating');\n        } else {\n            this.props.setCallBackendNow(true);\n        }\n    }\n\n    const handleSaveClick = () => {\n        const userData = {\n            modPlan: this.props.modplan.selectedModules,\n            name: this.props.settings.userInfo.name,\n            residential: this.props.settings.userInfo.residential,\n            major: this.props.settings.userInfo.major,\n            matriculationYear: this.props.settings.userInfo.matriculationYear,\n            targetGradYear: this.props.settings.userInfo.targetGradYear,\n            transcript: {}\n        }\n\n        this.props.updateSettings(userData);\n    }\n    \n\n        const module = this.props.modplan.modules\n        return (\n            <DndProvider backend={Backend} >\n                <div className=\"container-module-planner\">\n                    <YearDisplay\n                            year=\"Year 1\"\n                            AY=\"2018/2019\"\n                            module={this.props.modplan.modules} />\n\n                    <YearDisplay\n                            year=\"Year 2\"\n                            AY=\"2019/2020\"\n                            module={this.props.modplan.modules}/> \n\n                    <YearDisplay\n                            year=\"Year 3\"\n                            AY=\"2020/2021\"\n                            module={this.props.modplan.modules} />\n\n                    <YearDisplay\n                            year=\"Year 4\"\n                            AY=\"2022/2023\"\n                            module={this.props.modplan.modules} /> \n                    \n                    <TrashBox\n                            module={this.props.modplan.selectedModules}/>\n\n\n                    <br/>\n\n                    <Button className=\"button\" id=\"eval-button\" onClick={() => this.handleEvalButtonClick()}>Evaluate</Button>\n                    <Button className=\"button\" onClick={this.handleSaveClick} >Save</Button>\n                    <br/>\n                    <br/>\n                    <Card>\n                        <Rules\n                            rules={this.props.modplan.rules}/>\n                    </Card>\n                    <br/>\n                </div>\n           </DndProvider>\n        )\n    \n}\n\nModulePlannerPageTemp.propTypes = {\n    callBackendAPI: PropTypes.func.isRequired,\n    setCallBackendNow: PropTypes.func.isRequired,\n    updateSettings: PropTypes.func.isRequired,\n    modplan: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    modplan: state.modplan,\n    settings: state.settings\n});\n\nexport default connect(mapStateToProps, \n                    { callBackendAPI, setCallBackendNow, updateSettings, setSelectedModules }) \n                    (ModulePlannerPageTemp);\n"]},"metadata":{},"sourceType":"module"}