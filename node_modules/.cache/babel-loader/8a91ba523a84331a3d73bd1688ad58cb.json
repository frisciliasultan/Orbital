{"ast":null,"code":"var _jsxFileName = \"/Users/frisciliasultan/Documents/Orbital/client/src/Pages/Module Planner Page/Subrules.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { Card, Spinner } from \"react-bootstrap\";\n\nfunction Subrules(props) {\n  const [isLoading, setIsLoading] = useState(false);\n  const [isRuleFulfilled, setIsRuleFulfilled] = useState(false);\n  useEffect(() => callBackendFunc(props.ruleTag), [props.callBackendNow]);\n\n  const callBackendFunc = async ruleTag => {\n    const link = \"http://172.31.21.121:3000/rules/\" + ruleTag;\n    const requestOptions = {\n      method: 'POST',\n      mode: 'no-cors',\n      headers: {\n        'Content-Type': 'application/json',\n        'accept': 'application/json'\n      },\n      body: JSON.stringify({\n        modules: props.selectedModules\n      })\n    };\n    setIsLoading(true);\n    await fetch(\"http://172.31.21.121:3000/rules/r_cs_foundation\", requestOptions).then(async response => {\n      const status = await response.json();\n\n      if (!response.ok) {\n        throw new Error(\"An error has occurred\");\n      }\n\n      return status;\n    }).then(status => {\n      setIsRuleFulfilled(status);\n      setIsLoading(false);\n      alert('success');\n    }).catch(error => {\n      setIsLoading(false);\n      console.error('There was an error!', error);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, this.props.ruleName), this.state.isLoading && /*#__PURE__*/React.createElement(Spinner, {\n    animation: \"border\",\n    variant: \"success\",\n    role: \"status\",\n    as: \"span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 38\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sr-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, \"Loading...\")));\n}\n\nexport default Subrules;","map":{"version":3,"sources":["/Users/frisciliasultan/Documents/Orbital/client/src/Pages/Module Planner Page/Subrules.jsx"],"names":["React","useState","useEffect","Card","Spinner","Subrules","props","isLoading","setIsLoading","isRuleFulfilled","setIsRuleFulfilled","callBackendFunc","ruleTag","callBackendNow","link","requestOptions","method","mode","headers","body","JSON","stringify","modules","selectedModules","fetch","then","response","status","json","ok","Error","alert","catch","error","console","ruleName","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,OAAf,QAA8B,iBAA9B;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACrB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACQ,eAAD,EAAkBC,kBAAlB,IAAwCT,QAAQ,CAAC,KAAD,CAAtD;AAEAC,EAAAA,SAAS,CAAC,MAAMS,eAAe,CAACL,KAAK,CAACM,OAAP,CAAtB,EAAuC,CAACN,KAAK,CAACO,cAAP,CAAvC,CAAT;;AAEA,QAAMF,eAAe,GAAG,MAAOC,OAAP,IAAmB;AACvC,UAAME,IAAI,GAAG,qCAAqCF,OAAlD;AACA,UAAMG,cAAc,GAAG;AACnBC,MAAAA,MAAM,EAAE,MADW;AAEnBC,MAAAA,IAAI,EAAE,SAFa;AAGnBC,MAAAA,OAAO,EAAE;AAAE,wBAAgB,kBAAlB;AACG,kBAAU;AADb,OAHU;AAMnBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACC,QAAAA,OAAO,EAAEhB,KAAK,CAACiB;AAAhB,OAAf;AANa,KAAvB;AAQAf,IAAAA,YAAY,CAAC,IAAD,CAAZ;AAEA,UAAMgB,KAAK,CAAC,iDAAD,EAAoDT,cAApD,CAAL,CACDU,IADC,CACI,MAAMC,QAAN,IAAkB;AACpB,YAAMC,MAAM,GAAG,MAAMD,QAAQ,CAACE,IAAT,EAArB;;AAEA,UAAG,CAACF,QAAQ,CAACG,EAAb,EAAiB;AACb,cAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;AACH;;AAED,aAAOH,MAAP;AACH,KATC,EAUDF,IAVC,CAUKE,MAAM,IAAI;AACbjB,MAAAA,kBAAkB,CAACiB,MAAD,CAAlB;AACAnB,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAuB,MAAAA,KAAK,CAAC,SAAD,CAAL;AACH,KAdC,EAeDC,KAfC,CAeKC,KAAK,IAAI;AACNzB,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACA0B,MAAAA,OAAO,CAACD,KAAR,CAAc,qBAAd,EAAqCA,KAArC;AACH,KAlBL,CAAN;AAoBH,GAhCD;;AAkCA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAa,KAAK3B,KAAL,CAAW6B,QAAxB,CADJ,EAEK,KAAKC,KAAL,CAAW7B,SAAX,iBAAwB,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAC,QAAnB;AAA4B,IAAA,OAAO,EAAC,SAApC;AAA8C,IAAA,IAAI,EAAC,QAAnD;AAA4D,IAAA,EAAE,EAAC,MAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACrB;AAAM,IAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADqB,CAF7B,CADJ;AAUH;;AAED,eAAeF,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Card, Spinner } from \"react-bootstrap\";\n\nfunction Subrules(props) {\n    const [isLoading, setIsLoading] = useState(false);\n    const [isRuleFulfilled, setIsRuleFulfilled] = useState(false);\n\n    useEffect(() => callBackendFunc(props.ruleTag), [props.callBackendNow])\n\n    const callBackendFunc = async (ruleTag) => {\n        const link = \"http://172.31.21.121:3000/rules/\" + ruleTag;\n        const requestOptions = {\n            method: 'POST',\n            mode: 'no-cors',\n            headers: { 'Content-Type': 'application/json',\n                        'accept': 'application/json'            \n            },\n            body: JSON.stringify({modules: props.selectedModules})\n        };\n        setIsLoading(true);\n\n        await fetch(\"http://172.31.21.121:3000/rules/r_cs_foundation\", requestOptions)\n            .then(async response => {\n                const status = await response.json();\n\n                if(!response.ok) {\n                    throw new Error(\"An error has occurred\")\n                }\n\n                return status;\n            })\n            .then (status => {\n                setIsRuleFulfilled(status);\n                setIsLoading(false);\n                alert('success');\n            })\n            .catch(error => {\n                      setIsLoading(false);\n                      console.error('There was an error!', error);\n                  });\n\n    }\n\n    return (    \n        <div>\n            <Card.Title>{this.props.ruleName}</Card.Title>\n            {this.state.isLoading && <Spinner animation=\"border\" variant=\"success\" role=\"status\" as=\"span\">\n                <span className=\"sr-only\">Loading...</span>\n            </Spinner>}\n            {/* {this.props.callBackendNow && this.callBackendFunc(this.props.ruleTag)} */}\n        </div>\n    )\n\n}\n\nexport default Subrules;"]},"metadata":{},"sourceType":"module"}