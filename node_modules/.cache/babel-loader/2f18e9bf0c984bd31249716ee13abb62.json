{"ast":null,"code":"import { SET_USER_SETTINGS, SET_CURRENT_SEMESTER, SET_MATRICULATION_OPTIONS, SET_TARGET_GRAD_OPTIONS, CLEAN_UP_SETTINGS, GET_SUCCESS, SET_ACAD_OPTIONS, SET_EDIT_ALL, SETTINGS_LOADING } from \"./types\";\nimport { setUserLoading } from \"./authActions\";\nimport axios from \"axios\";\nexport const setUserSettings = userData => {\n  return {\n    type: SET_USER_SETTINGS,\n    payload: userData\n  };\n};\nexport const initialSettings = () => async dispatch => {\n  try {\n    axios.defaults.timeout = 7000;\n    dispatch(setUserLoading(true));\n    const isFetched = await axios.get('https://modtree-api.netlify.app/.netlify/functions/user/account').then(res => {\n      dispatch(setUserSettings(res.data));\n    }).then(res => {\n      return true;\n    });\n\n    if (isFetched) {\n      dispatch(setUserLoading(false));\n    }\n  } catch (err) {\n    dispatch(setUserLoading(false));\n    console.log(err); // window.location.replace(\"/500-error\")\n  }\n};\nexport const updateSettings = userData => dispatch => {\n  axios.defaults.timeout = 7000;\n  dispatch(setSettingsLoading(true));\n  axios.put(\"https://modtree-api.netlify.app/.netlify/functions/user/account\", userData).then(res => {\n    dispatch(setUserSettings(res.data.updated));\n  }).then(res => {\n    dispatch({\n      type: GET_SUCCESS,\n      payload: \"Saved successfully!\"\n    });\n    dispatch(setSettingsLoading(false));\n  }).catch(err => {\n    dispatch(setSettingsLoading(false));\n    console.log(err); // window.location.replace(\"/500-error\")\n  });\n};\nexport const setCurrentSemester = (currentAY, currentSemester, month) => {\n  return {\n    type: SET_CURRENT_SEMESTER,\n    currentAY,\n    currentSemester,\n    month\n  };\n};\nexport const setMatriculationYearOptions = (currentAY, currentSemester) => {\n  return {\n    type: SET_MATRICULATION_OPTIONS,\n    currentAY,\n    currentSemester\n  };\n};\nexport const setTargetGradYearOptions = (AY, Semester) => {\n  return {\n    type: SET_TARGET_GRAD_OPTIONS,\n    AY,\n    Semester\n  };\n};\nexport const cleanUpSettings = () => {\n  return {\n    type: CLEAN_UP_SETTINGS\n  };\n};\nexport const setDegreeOptions = () => dispatch => {\n  axios.defaults.timeout = 5000;\n  axios.all([axios.get('https://modtree-api.netlify.app/.netlify/functions/info/bachelors'), axios.get('https://modtree-api.netlify.app/.netlify/functions/info/secondMajors'), axios.get('https://modtree-api.netlify.app/.netlify/functions/info/minors'), axios.get('https://modtree-api.netlify.app/.netlify/functions/info/residences')]).then(resArr => {\n    dispatch(setAcadOptions(resArr[0].data, resArr[1].data, resArr[2].data, resArr[3].data));\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const setAcadOptions = (faculties, residences) => {\n  return {\n    type: SET_ACAD_OPTIONS,\n    faculties,\n    residences\n  };\n};\nexport const setEditAll = (status, current, category) => {\n  return {\n    type: SET_EDIT_ALL,\n    status,\n    current,\n    category\n  };\n};\nexport const setSettingsLoading = status => {\n  return {\n    type: SETTINGS_LOADING,\n    payload: status\n  };\n};","map":{"version":3,"sources":["/Users/frisciliasultan/Documents/Orbitalhosting/src/actions/settingsActions.js"],"names":["SET_USER_SETTINGS","SET_CURRENT_SEMESTER","SET_MATRICULATION_OPTIONS","SET_TARGET_GRAD_OPTIONS","CLEAN_UP_SETTINGS","GET_SUCCESS","SET_ACAD_OPTIONS","SET_EDIT_ALL","SETTINGS_LOADING","setUserLoading","axios","setUserSettings","userData","type","payload","initialSettings","dispatch","defaults","timeout","isFetched","get","then","res","data","err","console","log","updateSettings","setSettingsLoading","put","updated","catch","setCurrentSemester","currentAY","currentSemester","month","setMatriculationYearOptions","setTargetGradYearOptions","AY","Semester","cleanUpSettings","setDegreeOptions","all","resArr","setAcadOptions","faculties","residences","setEditAll","status","current","category"],"mappings":"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","sourcesContent":["import {\n    SET_USER_SETTINGS,\n    SET_CURRENT_SEMESTER,\n    SET_MATRICULATION_OPTIONS,\n    SET_TARGET_GRAD_OPTIONS,\n    CLEAN_UP_SETTINGS,\n    GET_SUCCESS,\n    SET_ACAD_OPTIONS,\n    SET_EDIT_ALL,\n    SETTINGS_LOADING\n} from \"./types\";\nimport { setUserLoading } from \"./authActions\";\nimport axios from \"axios\";\n\nexport const setUserSettings = (userData) => {\n    return {\n        type: SET_USER_SETTINGS,\n        payload: userData\n    }\n}\n\nexport const initialSettings = () => async dispatch => {\n    try {\n        axios.defaults.timeout = 7000;\n        dispatch(setUserLoading(true));\n        \n        const isFetched = await axios  \n                        .get('https://modtree-api.netlify.app/.netlify/functions/user/account')\n                        .then(res => {\n                                dispatch(setUserSettings(res.data))\n                            })\n                        .then(res => {return true})\n        if(isFetched) {\n            dispatch(setUserLoading(false))\n        }\n    }\n    catch (err) {\n            dispatch(setUserLoading(false));\n            console.log(err)\n            // window.location.replace(\"/500-error\")\n        }\n}\n\nexport const updateSettings = (userData) => dispatch => {\n    axios.defaults.timeout = 7000;\n    dispatch(setSettingsLoading(true))\n    axios\n        .put(\"https://modtree-api.netlify.app/.netlify/functions/user/account\", userData)\n        .then(res => {dispatch(setUserSettings(res.data.updated))})\n        .then(res => {\n            dispatch({\n                        type: GET_SUCCESS,\n                        payload: \"Saved successfully!\"\n            });\n            dispatch(setSettingsLoading(false))\n            }\n        )\n        .catch(err => {\n                dispatch(setSettingsLoading(false))\n                console.log(err);\n                // window.location.replace(\"/500-error\")\n            })\n};\n\nexport const setCurrentSemester = (currentAY, currentSemester, month) => {\n    return {\n        type: SET_CURRENT_SEMESTER,\n        currentAY,\n        currentSemester,\n        month\n    }\n}\n\nexport const setMatriculationYearOptions = (currentAY, currentSemester) => {\n    return {\n        type: SET_MATRICULATION_OPTIONS,\n        currentAY,\n        currentSemester\n    }\n}\n\nexport const setTargetGradYearOptions = (AY, Semester) => {\n    return {\n        type: SET_TARGET_GRAD_OPTIONS,\n        AY,\n        Semester\n    }\n}\n\nexport const cleanUpSettings = () => {\n    return { \n        type: CLEAN_UP_SETTINGS\n    }\n}\n\nexport const setDegreeOptions = () => dispatch => {\n    axios.defaults.timeout = 5000;\n    axios.all([\n        axios.get('https://modtree-api.netlify.app/.netlify/functions/info/bachelors'),\n        axios.get('https://modtree-api.netlify.app/.netlify/functions/info/secondMajors'),\n        axios.get('https://modtree-api.netlify.app/.netlify/functions/info/minors'),\n        axios.get('https://modtree-api.netlify.app/.netlify/functions/info/residences')\n    ])\n    .then(resArr => {\n            dispatch(setAcadOptions(resArr[0].data, resArr[1].data, resArr[2].data, resArr[3].data));\n        }) \n    .catch(err => {\n        console.log(err)\n    });\n}\n\nexport const setAcadOptions = (faculties, residences) => {\n    return {\n        type: SET_ACAD_OPTIONS,\n        faculties, \n        residences\n    }\n}\n\nexport const setEditAll = (status, current, category) => {\n    return {\n        type: SET_EDIT_ALL,\n        status,\n        current,\n        category\n    }\n} \n\nexport const setSettingsLoading = (status) => {\n    return {\n        type: SETTINGS_LOADING,\n        payload: status\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}