{"ast":null,"code":"var _jsxFileName = \"/Users/frisciliasultan/Documents/Orbital/client/src/Components/Options.js\";\nimport React from \"react\"; //list of faculties\n\nconst faculties = ['Choose Your Faculty', 'Arts and Social Sciences', 'Business', 'Computing', 'Dentistry', 'Design & Environment', 'Engineering', 'Law', 'Medicine', 'Music', 'Science']; //to map faculties as options\n//const facultyOptions = this.props.facultiesOptions.map((faculties) => \n//{if(faculties === 'Choose Your Faculty') {\n//return (<option selected disabled>\n//        {faculties}\n//    </option>);\n//} else{\n//return (<option value={faculties} >\n//        {faculties}\n//    </option>);}\n//});\n//list of majors for FASS\n\nconst fassAsianStudies = ['Chinese Language', 'Chinese Studies', 'Japanese Studies', 'MalayStudies', 'South Asian Studies', 'Southeast Asian Studies'];\nconst fassHumanities = ['English Language', 'English Literature', 'History', 'Philosophy', 'Theater Studies'];\nconst fassSocialSciences = ['Communications and New Media', 'Economics', 'Geography', 'Political Science', 'Psychology', 'Social Work', 'Sociology'];\nconst fassMultidisciplinary = ['Global Studies', 'Philosophy, Politics, and Economics'];\nconst fassCombined = ['AsianStudies'].concat(fassAsianStudies, ['Humanities'], fassHumanities, ['Social Sciences'], fassSocialSciences, ['Multidisciplinary'], fassMultidisciplinary); //to map FASS as options\n\nconst fassOptions = fassCombined.map(fass => {\n  if (fass === 'AsianStudies' || fass === 'Humanities' || fass === 'Social Sciences' || fass === 'Multidisciplinary') {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 15\n      }\n    }, fass);\n  } else {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      value: faculties,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, fass);\n  }\n}); //list of majors for business\n\nconst business = ['Accountancy', 'Business Administration']; //to map Business as options\n\nconst businessOptions = business.map(business => /*#__PURE__*/React.createElement(\"option\", {\n  value: business,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 28\n  }\n}, business)); //list of majors for computing\n\nconst computing = ['Business Analytics', 'Computer Engineering', 'Computer Science', 'Information Security', 'Information Systems']; //to map computing as options\n\nconst computingOptions = computing.map(computing => /*#__PURE__*/React.createElement(\"option\", {\n  value: computing,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 28\n  }\n}, computing)); //list of majors for SDE\n\nconst designAndEnvironment = ['Architecture', 'Industrial Design', 'Landscape Architecture', 'Project & Facilities Management', 'Real Estate']; //to map SDE as options\n\nconst SDEOptions = designAndEnvironment.map(SDE => /*#__PURE__*/React.createElement(\"option\", {\n  value: SDE,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 28\n  }\n}, SDE)); //list of majors for engineering\n\nconst engineering = ['Biomedical Engineering', 'Chemical Engineering', 'Civil Engineering', 'Computer Engineering', 'Electrical Engineering', 'Engineering Science Programme', 'Environmental Engineering', 'Industrial & Systems Engineering', 'Materials Science & Engineering', 'Mechanical Engineering']; //to map engineering as options\n\nconst engineeringOptions = engineering.map(e => /*#__PURE__*/React.createElement(\"option\", {\n  value: e,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 28\n  }\n}, e)); //list of majors for medicine\n\nconst medicine = ['Medicine', 'Nursing']; //to map medicine as options\n\nconst medicineOptions = medicine.map(e => /*#__PURE__*/React.createElement(\"option\", {\n  value: e,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 28\n  }\n}, e)); //list of majors for science\n\nconst science = ['Chemistry', 'Computational Biology', 'Data Science & Analytics', 'Environmental Studies', 'Food Science and Technology', 'Life Sciences', 'Mathematics', 'Pharmaceutical Science', 'Pharmacy', 'Physics', 'Statistics']; //to map science as options\n\nconst scienceOptions = science.map(e => /*#__PURE__*/React.createElement(\"option\", {\n  value: e,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 28\n  }\n}, e)); //list of specialisation for business\n\nconst businessSpecialisation = ['N/A', 'Business Analytics', 'Innovation and Entrepreneurship'];\nconst businessSpecialisationOptions = businessSpecialisation.map(e => /*#__PURE__*/React.createElement(\"option\", {\n  value: e,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 6\n  }\n}, e)); //list of residential colleges\n\nconst residence = ['N/A', 'CAPT', 'RC4', 'RVRC', 'Tembusu', 'USP']; //to map residence as options\n\nconst residenceOptions = residence.map(residence => /*#__PURE__*/React.createElement(\"option\", {\n  value: residence,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 4\n  }\n}, residence));\nexport class Options extends React.Component {\n  constructor(props) {\n    super(props);\n    this.facultyOptions = this.facultyOptions.bind(this);\n    this.handleFacultyChange = this.handleFacultyChange.bind(this);\n  }\n\n  facultyOptions() {\n    this.props.facultiesOptions.map(faculties => {\n      if (faculties === 'Choose Your Faculty') {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          selected: true,\n          disabled: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }\n        }, faculties);\n      } else {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          value: faculties,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }\n        }, faculties);\n      }\n    });\n  } //when users pick their faculty, it sends the choice to app.js\n\n\n  handleFacultyChange(e) {\n    let value = e.target.value;\n    let majorOptions;\n    let specialisation;\n\n    if (value === 'Arts and Social Sciences') {\n      majorOptions = fassOptions;\n    } else if (value === 'Business') {\n      majorOptions = businessOptions;\n      specialisation = businessSpecialisationOptions;\n    } else if (value === 'Computing') {\n      majorOptions = computingOptions;\n    } else if (value === 'Design & Environment') {\n      majorOptions = SDEOptions;\n    } else if (value === 'Engineering') {\n      majorOptions = engineeringOptions;\n    } else if (value === 'Medicine') {\n      majorOptions = medicineOptions;\n    } else if (value === 'Science') {\n      majorOptions = scienceOptions;\n    } else {\n      majorOptions = /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 24\n        }\n      }, \"N/A\");\n    }\n\n    this.props.onChange(value, majorOptions, specialisation);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      action: \"http://localhost:5001/\",\n      method: \"POST\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 8\n      }\n    }, \"Your Faculty  \"), /*#__PURE__*/React.createElement(\"select\", {\n      id: \"Faculty\",\n      onChange: this.handleFacultyChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 8\n      }\n    }, this.facultyOptions), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }\n    }, \"Your Major  \"), /*#__PURE__*/React.createElement(\"select\", {\n      id: \"Major\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }\n    }, this.props.majorOptions), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }\n    }, \"Your Specialisation  \"), /*#__PURE__*/React.createElement(\"select\", {\n      id: \"Specialisation\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }\n    }, this.props.specialisationOptions), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }\n    }, \"Your Residential College  \"), /*#__PURE__*/React.createElement(\"select\", {\n      id: \"Residence\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }\n    }, residenceOptions), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      name: \"submit\",\n      value: \"Create Module Plan\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }\n    })));\n  }\n\n}\n;","map":{"version":3,"sources":["/Users/frisciliasultan/Documents/Orbital/client/src/Components/Options.js"],"names":["React","faculties","fassAsianStudies","fassHumanities","fassSocialSciences","fassMultidisciplinary","fassCombined","concat","fassOptions","map","fass","business","businessOptions","computing","computingOptions","designAndEnvironment","SDEOptions","SDE","engineering","engineeringOptions","e","medicine","medicineOptions","science","scienceOptions","businessSpecialisation","businessSpecialisationOptions","residence","residenceOptions","Options","Component","constructor","props","facultyOptions","bind","handleFacultyChange","facultiesOptions","value","target","majorOptions","specialisation","onChange","render","specialisationOptions"],"mappings":"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","sourcesContent":["import React from \"react\";\n\n//list of faculties\nconst faculties = ['Choose Your Faculty','Arts and Social Sciences', 'Business', \n                  'Computing', 'Dentistry',\n                  'Design & Environment', 'Engineering',\n                  'Law', 'Medicine', 'Music','Science' ];\n\n//to map faculties as options\n//const facultyOptions = this.props.facultiesOptions.map((faculties) => \n  //{if(faculties === 'Choose Your Faculty') {\n    //return (<option selected disabled>\n      //        {faculties}\n        //    </option>);\n  //} else{\n    //return (<option value={faculties} >\n      //        {faculties}\n        //    </option>);}\n  //});\n\n//list of majors for FASS\nconst fassAsianStudies = ['Chinese Language', 'Chinese Studies', \n                          'Japanese Studies', 'MalayStudies', \n                          'South Asian Studies', 'Southeast Asian Studies'];\n\nconst fassHumanities = ['English Language', 'English Literature',\n                        'History', 'Philosophy', 'Theater Studies'];\n\nconst fassSocialSciences = ['Communications and New Media', 'Economics',\n                            'Geography', 'Political Science', 'Psychology',\n                            'Social Work', 'Sociology'];\n\nconst fassMultidisciplinary = ['Global Studies', \n                              'Philosophy, Politics, and Economics'];\n\nconst fassCombined = ['AsianStudies'].concat(fassAsianStudies, \n                                            ['Humanities'],\n                                            fassHumanities,\n                                            ['Social Sciences'],\n                                            fassSocialSciences,\n                                            ['Multidisciplinary'],\n                                            fassMultidisciplinary);\n//to map FASS as options\nconst fassOptions = fassCombined.map((fass) => {\n  if(fass === 'AsianStudies' \n    || fass === 'Humanities' \n    || fass === 'Social Sciences' \n    || fass === 'Multidisciplinary') {\n      return (<option disabled>\n            {fass}\n            </option>);\n  } else{\n    return (<option value={faculties} >\n            {fass}\n            </option>);}\n  });\n\n//list of majors for business\nconst business = ['Accountancy', 'Business Administration'];\n\n//to map Business as options\nconst businessOptions = business.map((business) => \n                          (<option value={business} >\n                            {business}\n                              </option>)\n                          );\n\n//list of majors for computing\nconst computing = ['Business Analytics', 'Computer Engineering', \n                  'Computer Science', 'Information Security',\n                  'Information Systems'];\n\n//to map computing as options\nconst computingOptions = computing.map((computing) => \n                          (<option value={computing} >\n                          {computing}\n                          </option>)\n                          );\n\n//list of majors for SDE\nconst designAndEnvironment = ['Architecture', 'Industrial Design',\n                              'Landscape Architecture', \n                              'Project & Facilities Management', 'Real Estate'];\n//to map SDE as options\nconst SDEOptions = designAndEnvironment.map((SDE) => \n                          (<option value={SDE} >\n                          {SDE}\n                          </option>)\n                          );\n\n//list of majors for engineering\nconst engineering = ['Biomedical Engineering', 'Chemical Engineering',\n                     'Civil Engineering', 'Computer Engineering', \n                      'Electrical Engineering', 'Engineering Science Programme',\n                      'Environmental Engineering', 'Industrial & Systems Engineering',\n                      'Materials Science & Engineering', 'Mechanical Engineering'];\n\n//to map engineering as options\nconst engineeringOptions = engineering.map((e) => \n                          (<option value={e} >\n                          {e}\n                          </option>)\n                          );\n\n//list of majors for medicine\nconst medicine = ['Medicine', 'Nursing'];\n\n//to map medicine as options\nconst medicineOptions = medicine.map((e) => \n                          (<option value={e} >\n                          {e}\n                          </option>)\n                          );\n\n//list of majors for science\nconst science = ['Chemistry', 'Computational Biology', \n                'Data Science & Analytics', 'Environmental Studies',\n                'Food Science and Technology', 'Life Sciences', 'Mathematics',\n                'Pharmaceutical Science', 'Pharmacy', 'Physics', 'Statistics'];\n\n//to map science as options\nconst scienceOptions = science.map((e) => \n                          (<option value={e} >\n                          {e}\n                          </option>)\n                          );\n\n//list of specialisation for business\nconst businessSpecialisation = ['N/A','Business Analytics', \n                                'Innovation and Entrepreneurship',\n\n        ];\nconst businessSpecialisationOptions = businessSpecialisation.map((e) => \n    (<option value={e} >\n      {e}\n      </option>)\n    );\n\n\n\n//list of residential colleges\nconst residence = ['N/A','CAPT', 'RC4', 'RVRC','Tembusu', 'USP'];\n\n//to map residence as options\nconst residenceOptions = residence.map((residence) => \n  (<option value={residence} >\n    {residence}\n    </option>)\n  );\n\nexport class Options extends React.Component {\n  constructor(props) {\n    super(props);\n    this.facultyOptions = this.facultyOptions.bind(this);\n    this.handleFacultyChange = this.handleFacultyChange.bind(this);\n    \n  }\n\n  facultyOptions() { this.props.facultiesOptions.map((faculties) => \n  {if(faculties === 'Choose Your Faculty') {\n    return (<option selected disabled>\n              {faculties}\n            </option>);\n  } else{\n    return (<option value={faculties} >\n              {faculties}\n            </option>);}\n  }); }\n\n  //when users pick their faculty, it sends the choice to app.js\n  handleFacultyChange(e) {\n    let value = e.target.value;  \n    let majorOptions;\n    let specialisation;\n   \n      if (value === 'Arts and Social Sciences') {\n        majorOptions = fassOptions;\n      } \n\n      else if(value === 'Business') {\n        majorOptions = businessOptions;\n        specialisation = businessSpecialisationOptions;\n      }\n\n      else if(value === 'Computing') {\n        majorOptions = computingOptions;\n      }\n\n      else if(value === 'Design & Environment') {\n        majorOptions = SDEOptions;\n      }\n\n      else if(value === 'Engineering') {\n        majorOptions = engineeringOptions;\n      }\n\n      else if(value === 'Medicine') {\n        majorOptions = medicineOptions;\n      }\n\n      else if(value === 'Science') {\n        majorOptions = scienceOptions;\n      }\n\n      else {\n        majorOptions = <option>N/A</option>\n      }\n    this.props.onChange(value, majorOptions, specialisation);\n  }\n\n  render() {\n      return (\n       <div>\n      <form action=\"http://localhost:5001/\" method=\"POST\">\n       <label>Your Faculty  </label>\n       <select\n          id=\"Faculty\" onChange={this.handleFacultyChange}>\n           {this.facultyOptions}\n        </select>   \n        <br/>\n        <br/>\n\n        <label>Your Major  </label>\n        <select\n          id=\"Major\">\n           {this.props.majorOptions}\n        </select>\n        <br/>\n        <br/>\n\n        <label>Your Specialisation  </label>\n        <select\n          id=\"Specialisation\">\n           {this.props.specialisationOptions}\n        </select>\n        <br/>\n        <br/>\n\n        <label>Your Residential College  </label>\n        <select\n          id=\"Residence\">\n           {residenceOptions}\n        </select>\n        <br/>\n        <br/>\n        \n        <input type=\"submit\" name=\"submit\" value=\"Create Module Plan\"/>\n      </form>\n      </div>\n      )}};"]},"metadata":{},"sourceType":"module"}