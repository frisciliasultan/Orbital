{"ast":null,"code":"var _jsxFileName = \"/Users/frisciliasultan/Documents/Orbital/client/src/Pages/Module Planner Page/Rules.jsx\";\nimport React from 'react';\nimport { Card, Spinner, Button } from 'react-bootstrap';\nimport Subrule from './SubruleLoading';\n\nclass Rules extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false\n    };\n    this.generateRules = this.generateRules.bind(this);\n  } // componentDidMount() {\n  //     // Call our fetch function below once the component mounts\n  //   this.callBackendAPI()\n  //     .then(res => this.setState({ rules: res }))\n  //     .then(this.setState({isLoading: false}))\n  //     .catch(err => console.log(err));\n  // }\n  //   // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n  // callBackendAPI = async () => {\n  //   this.setState({isLoading: true})\n  //   const response = await fetch('https://api.nusmods.com/v2/2019-2020/moduleInfo.json', {'accept': 'application/json'});\n  //   const body = await response.json();\n  //   if (response.status !== 200) {\n  //     throw Error(body.message) \n  //   }\n  //   console.log(body);\n  //   return body;\n  // };\n  // cons t request = {\n  //     method: 'POST',\n  //     mode: 'no-cors',\n  //     headers: {\n  //       'Accept': 'application/json',\n  //       'Content-type': 'application/json'\n  //       },\n  //     body: JSON.stringify ({\n  //       username: this.props.username,\n  //       userCourse: { major: [{name: this.props.major,\n  //                               spec: this.props.speialisation}],\n  //                     minor: [],\n  //                     residence: [this.props.residence]\n  //                   }\n  //       })\n  //   };\n  //   const response = await fetch('http://172.31.21.121:5000/', request)\n  //       .then(async response => {\n  //         const data = await response.json();\n  //          // check for error response\n  //          if (!response.ok) {\n  //           // get error message from body or default to response status\n  //           throw new Error(data.message)\n  //         }\n  //         return data;\n  //       })\n  //       .then(data => console.log(data))\n  //     .catch(error => {\n  //       alert('nooope');\n  //       console.error('There was an error!', error);\n  //   });\n\n\n  generateRules() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, console.log(this.props.rules.sub[1].sub) // this.props.rules.sub.map(rule => (\n    //                                 <ul>\n    //                                    <Subrule\n    //                                         ruleName={rule.name} />\n    //                                     {(rule.sub && \n    //                                         <Rules\n    //                                             rules={rule.sub}/>)}\n    //                                 </ul>\n    //                              )\n    //                     )\n    );\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: this.handleonClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }, \"Evaluate\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }), this.generateRules());\n  }\n\n}\n\nexport default Rules;","map":{"version":3,"sources":["/Users/frisciliasultan/Documents/Orbital/client/src/Pages/Module Planner Page/Rules.jsx"],"names":["React","Card","Spinner","Button","Subrule","Rules","Component","constructor","props","state","isLoading","generateRules","bind","console","log","rules","sub","render","handleonClick"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,OAAf,EAAwBC,MAAxB,QAAsC,iBAAtC;AACA,OAAOC,OAAP,MAAoB,kBAApB;;AAEA,MAAMC,KAAN,SAAoBL,KAAK,CAACM,SAA1B,CAAoC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACGC,MAAAA,SAAS,EAAE;AADd,KAAb;AAIA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACH,GAR+B,CAUhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAEAD,EAAAA,aAAa,GAAG;AAEZ,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQE,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAL,CAAWO,KAAX,CAAiBC,GAAjB,CAAqB,CAArB,EAAwBA,GAApC,CAFR,CAGQ;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAbR,KADJ;AAkBH;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKC,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,EAGC,KAAKP,aAAL,EAHD,CADJ;AAOH;;AA/F+B;;AAkGpC,eAAeN,KAAf","sourcesContent":["import React from 'react';\nimport { Card, Spinner, Button } from 'react-bootstrap';\nimport Subrule from './SubruleLoading';\n\nclass Rules extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n                        isLoading: false,\n                        \n                     }\n        this.generateRules = this.generateRules.bind(this);\n    }\n\n    // componentDidMount() {\n    //     // Call our fetch function below once the component mounts\n    //   this.callBackendAPI()\n    //     .then(res => this.setState({ rules: res }))\n    //     .then(this.setState({isLoading: false}))\n    //     .catch(err => console.log(err));\n    // }\n    //   // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n    // callBackendAPI = async () => {\n    //   this.setState({isLoading: true})\n    //   const response = await fetch('https://api.nusmods.com/v2/2019-2020/moduleInfo.json', {'accept': 'application/json'});\n    //   const body = await response.json();\n    \n    //   if (response.status !== 200) {\n    //     throw Error(body.message) \n    //   }\n    //   console.log(body);\n    //   return body;\n    // };\n    \n    // cons t request = {\n    //     method: 'POST',\n    //     mode: 'no-cors',\n    //     headers: {\n    //       'Accept': 'application/json',\n    //       'Content-type': 'application/json'\n    //       },\n    //     body: JSON.stringify ({\n    //       username: this.props.username,\n    //       userCourse: { major: [{name: this.props.major,\n    //                               spec: this.props.speialisation}],\n    //                     minor: [],\n    //                     residence: [this.props.residence]\n    //                   }\n    //       })\n    //   };\n      \n    //   const response = await fetch('http://172.31.21.121:5000/', request)\n    //       .then(async response => {\n    //         const data = await response.json();\n    //          // check for error response\n    //          if (!response.ok) {\n    //           // get error message from body or default to response status\n    //           throw new Error(data.message)\n    //         }\n  \n    //         return data;\n    //       })\n    //       .then(data => console.log(data))\n  \n    //     .catch(error => {\n    //       alert('nooope');\n    //       console.error('There was an error!', error);\n    //   });\n\n    generateRules() {\n\n        return (\n            <div>\n                {\n                    console.log(this.props.rules.sub[1].sub)\n                    // this.props.rules.sub.map(rule => (\n                    //                                 <ul>\n                    //                                    <Subrule\n                    //                                         ruleName={rule.name} />\n                                                        \n                    //                                     {(rule.sub && \n                    //                                         <Rules\n                    //                                             rules={rule.sub}/>)}\n                    //                                 </ul>\n                    //                              )\n                    //                     )\n                }\n            </div>\n        )\n    }\n\n    render() {\n        return (\n            <div>\n            <Button onClick={this.handleonClick}>Evaluate</Button>\n            <br/>\n            {this.generateRules()}\n            </div>\n        )\n    }\n}\n\nexport default Rules;\n"]},"metadata":{},"sourceType":"module"}