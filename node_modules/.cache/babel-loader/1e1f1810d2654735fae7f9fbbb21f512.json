{"ast":null,"code":"import { SET_SEMESTER_OPTIONS, CALCULATE_CAP, CLEAN_UP_CAP } from \"../actions/types\";\nconst initialState = {\n  transcript: [],\n  targetGrade: [],\n  cap: null,\n  semesterOptions: []\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_SEMESTER_OPTIONS:\n      let sem1;\n      let sem2;\n      let semesterOptions = [];\n\n      for (let i = 1; i < action.payload * 2; i += 2) {\n        const year = Math.ceil(i / 2);\n        sem1 = `Year ${year} Semester 1`;\n        sem2 = `Year ${year} Semester 2`;\n        semesterOptions[i - 1] = sem1;\n        semesterOptions[i] = sem2;\n      }\n\n      return { ...state,\n        semesterOptions: semesterOptions\n      };\n\n    case CLEAN_UP_CAP:\n      return initialState;\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/frisciliasultan/Documents/Orbital/client/src/reducers/capReducer.js"],"names":["SET_SEMESTER_OPTIONS","CALCULATE_CAP","CLEAN_UP_CAP","initialState","transcript","targetGrade","cap","semesterOptions","state","action","type","sem1","sem2","i","payload","year","Math","ceil"],"mappings":"AAAA,SACIA,oBADJ,EAEIC,aAFJ,EAGIC,YAHJ,QAIO,kBAJP;AAMA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,UAAU,EAAE,EADK;AAEjBC,EAAAA,WAAW,EAAE,EAFI;AAGjBC,EAAAA,GAAG,EAAE,IAHY;AAIjBC,EAAAA,eAAe,EAAE;AAJA,CAArB;AAOA,eAAe,UAASC,KAAK,GAAGL,YAAjB,EAA+BM,MAA/B,EAAuC;AAClD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKV,oBAAL;AACI,UAAIW,IAAJ;AACA,UAAIC,IAAJ;AACA,UAAIL,eAAe,GAAG,EAAtB;;AAEA,WAAI,IAAIM,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAIJ,MAAM,CAACK,OAAP,GAAiB,CAArC,EAAyCD,CAAC,IAAI,CAA9C,EAAiD;AAC7C,cAAME,IAAI,GAAGC,IAAI,CAACC,IAAL,CAAUJ,CAAC,GAAG,CAAd,CAAb;AACAF,QAAAA,IAAI,GAAI,QAAOI,IAAK,aAApB;AACAH,QAAAA,IAAI,GAAI,QAAOG,IAAK,aAApB;AACAR,QAAAA,eAAe,CAACM,CAAC,GAAG,CAAL,CAAf,GAAyBF,IAAzB;AACAJ,QAAAA,eAAe,CAACM,CAAD,CAAf,GAAqBD,IAArB;AACH;;AAED,aAAO,EACH,GAAGJ,KADA;AAEHD,QAAAA,eAAe,EAAEA;AAFd,OAAP;;AAKJ,SAAKL,YAAL;AACI,aAAOC,YAAP;;AAEJ;AACI,aAAOK,KAAP;AAvBR;AAyBH","sourcesContent":["import {\n    SET_SEMESTER_OPTIONS,\n    CALCULATE_CAP,\n    CLEAN_UP_CAP,\n} from \"../actions/types\";\n\nconst initialState = {\n    transcript: [],\n    targetGrade: [],\n    cap: null,\n    semesterOptions: []\n};\n\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case SET_SEMESTER_OPTIONS: \n            let sem1;\n            let sem2;\n            let semesterOptions = [];\n\n            for(let i = 1; i < (action.payload * 2); i += 2) {\n                const year = Math.ceil(i / 2);\n                sem1 = `Year ${year} Semester 1`;\n                sem2 = `Year ${year} Semester 2`;\n                semesterOptions[i - 1] = sem1;\n                semesterOptions[i] = sem2;\n            }\n\n            return {\n                ...state,\n                semesterOptions: semesterOptions\n            }\n\n        case CLEAN_UP_CAP:\n            return initialState;\n\n        default: \n            return state;\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}