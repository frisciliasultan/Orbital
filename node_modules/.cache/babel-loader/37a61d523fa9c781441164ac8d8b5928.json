{"ast":null,"code":"var _jsxFileName = \"/Users/frisciliasultan/Documents/Orbitalhosting/src/Pages/Module Selection Page/ModuleSelectionPage.jsx\";\nimport React, { useEffect } from \"react\";\nimport { Dropdown } from './Dropdown';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport isEmpty from \"is-empty\";\nimport { generateObject } from \"../../utils/commonFunctions\";\nimport LoadingDots from \"../Loading Page/LoadingPage\";\nlet totalGEMMCs = 0;\nexport const ModuleSelectionPage = props => {\n  // data: null,\n  // faculty: null,\n  // major: null,\n  // specialisation: null,\n  // residenceOptions: ['N/A','CAPT', 'RC4', 'RVRC','Tembusu', 'USP'],\n  // residence: 'N/A',\n  // dummyfac: [{'Business': [{'Business Administration': ['A', 'B']},\n  //                           {'Accountancy': ['C', 'D']}]},\n  //           {'FASS': [{'C': ['N/A']},\n  //                     {'D': ['N/A']}]},\n  //           {\n  //             'Computing': [\n  //                             {'Computer Science': ['N/A']},\n  //                             {'Business Analytics': ['N/A']}\n  //             ]\n  //           }],\n  // dummymodules: [{GEMs:[\n  //   {\"GEH: Human Culture\": [{code: 'GEH1001', \n  //                           name: 'Globalisation and New Media', \n  //                           MCs: 4, \n  //                           link: \"https://nusmods.com/modules/MA1521/calculus-for-computing\"},\n  //                           {code: 'GEH1002', \n  //                           name: \"Economic Issues in Dev World\", \n  //                           MCs:2, \n  //                           link: \"https://nusmods.com/modules/MA1521/calculus-for-computing\"},\n  //                           {code: 'GEH23420', \n  //                           name: 'lafjkljwe', \n  //                           MCs: 4, \n  //                           link: \"https://nusmods.com/modules/MA1521/calculus-for-computing\"}]}, //end of first object member\n  //   {\"GES: Singapore Studies\": [{code: 'GES324230', \n  //                               name: 'adkfjkjfklasj', \n  //                               MCs: 4, \n  //                               link: 'asdfew'}]} //end of object 2\n  //   ]},\n  //   {coreModules: [\n  //     {code: \"CS1231\",\n  //      name: \"Discrete Structures\",\n  //      MCs: 4,\n  //      link: \"https://nusmods.com/modules/MA1521/calculus-for-computing\"},\n  //      {code: \"MA1101\",\n  //      name: \"Linear Algebra I\",\n  //      MCs: 4,\n  //      link: \"https://nusmods.com/modules/MA1521/calculus-for-computing\"},\n  //      {code: \"MA1521\",\n  //      name: \"Calculus for Computing\",\n  //      MCs: 4,\n  //      link: \"https://nusmods.com/modules/MA1521/calculus-for-computing\"},\n  //      {\n  //        code: \"GER1000\",\n  //        name: \"Quantitative Reasoning\",\n  //        MCs: 4\n  //      },\n  //      {\n  //       code: \"CS1101S\",\n  //       name: \"Programming Methodology\",\n  //       MCs: 4\n  //     }\n  //     ]},\n  //   {specialisationModules: [\n  //     {code: \"MA1531\",\n  //      name: \"Calculus not Computing\",\n  //      MCs: 4,\n  //      link: \"https://nusmods.com/modules/MA1521/calculus-for-computing\"},\n  //      {code: \"MA1531\",\n  //      name: \"Calculus not Computing\",\n  //      MCs: 4,\n  //      link: \"https://nusmods.com/modules/MA1521/calculus-for-computing\"}\n  //   ]},\n  //   {unrestrictedModules: [{code: \"MA1521\",\n  // name: \"Calculus for Computing\",\n  // MCs: 4,\n  // link: \"https://nusmods.com/modules/MA1521/calculus-for-computing\"},\n  // ]},\n  // //y1s2 4\n  // {coreModules: [\n  //   {\n  //     code: \"CS2030\",\n  //     name: \"Programming Methodology II\",\n  //     MCs: 4\n  //   },\n  //   {\n  //     code: \"CS2040\",\n  //     name: \"Data Structures and Algorithms\",\n  //     MCs: 4\n  //   },\n  //   {\n  //     code: \"IS1103\",\n  //     name: \"IS Innovations in Organisations and Society\",\n  //     MCs: 4\n  //   },\n  //   {\n  //     code: \"GEH1000\",\n  //     name: \"Cultural Diversity in ASEAN\",\n  //     MCs: 4\n  //   },\n  //   {\n  //     code: \"GEQ1000\",\n  //     name: \"Asking Questions\",\n  //     MCs: 4\n  //   },\n  //   ]},\n  //   //y2s1 5\n  //   {coreModules: [\n  //     {\n  //       code: \"GET1000\",\n  //       name: \"Ethics at Work: Rhyme, Reason and Reality\",\n  //       MCs: 4\n  //     },\n  //     {\n  //       code: \"GES1000\",\n  //       name: \"Labour Law in Singapore\",\n  //       MCs: 4\n  //     },\n  //     ]},\n  //     //y2s2 6\n  //     {coreModules: [\n  //       {\n  //         code: \"CS2100\",\n  //         name: \"Computer Organisation\",\n  //         MCs: 4\n  //       },\n  //       {\n  //         code: \"CS2103T\",\n  //         name: \"Software Engineering\",\n  //         MCs: 4\n  //       },\n  //       {\n  //         code: \"CS2106\",\n  //         name: \"Introduction to Operating Systems\",\n  //         MCs: 4\n  //       },\n  //       {\n  //         code: \"CS3230\",\n  //         name: \"Design and Analysis of Algorithms\",\n  //         MCs: 4\n  //       },\n  //       ]},\n  //       // y3s1 7\n  //       {coreModules: [\n  //         {\n  //           code: \"CP4101\",\n  //           name: \"B.Comp. Dissertation\",\n  //           MCs: 12\n  //         },\n  //         {\n  //           code: \"CS3236\",\n  //           name: \"Introduction to Information Theory\",\n  //           MCs: 4\n  //         },\n  //         {\n  //           code: \"CS4231\",\n  //           name: \"Parallel and Distributed Algorithms\",\n  //           MCs: 4\n  //         },\n  //         {\n  //           code: \"CS4234\",\n  //           name: \"Optimisatin Algorithms\",\n  //           MCs: 4\n  //         },\n  //         {\n  //           code: \"CS3203\",\n  //           name: \"Software Engineering Project\",\n  //           MCs: 8\n  //         },\n  //         ]},\n  //         // y3s2 8\n  //         {coreModules: [\n  //           {\n  //             code: \"CP3880\",\n  //             name: \"Advanced Technology Attachment Programme\",\n  //             MCs: 12\n  //           },\n  //           ]},\n  //           // y4s1 9\n  //           {coreModules: [\n  //             {\n  //               code: \"ST2334\",\n  //               name: \"Probability and Statistics\",\n  //               MCs: 4\n  //             },\n  //             ]},\n  //             // y4s2 10\n  //             {coreModules: [\n  //               {\n  //                 code: \"ES2660\",\n  //                 name: \"Communicating in The Information Age\",\n  //                 MCs: 4\n  //               },\n  //               {\n  //                 code: \"CS2101\",\n  //                 name: \"Effective Communication for Computing\",\n  //                 MCs: 4\n  //               },\n  //               {\n  //                 code: \"CM1121\",\n  //                 name: \"Organic Chemistry 1\",\n  //                 MCs: 4\n  //               },\n  //               ]},\n  // ],\n  // dummyrules: [{name: \"ULR\",\n  //               tag: \"ULR_2018\",\n  //               requirements: {\"and\": [{name: \"Complete Quantitative Reasoning\",\n  //                                     tag: \"GER\",\n  //                                     requirements: {\"and\": [\n  //                                                           {name: \"Complete GER1000\",\n  //                                                            tag: \"GER1000\",\n  //                                                            module: {code: \"GER1000\",\n  //                                                                     name: \"Quantitative Reasoning\",\n  //                                                                     MCs: 4}\n  //                                                           }\n  //                                                         ]\n  //                                                   }\n  //                                       },\n  //                                       {name: \"Complete Human Culture\",\n  //                                        tag: \"GEH\",\n  //                                        requirements: {\"or\": [{name: \"Complete Globalisation and New Media\",\n  //                                                               tag: \"GEH1001\",\n  //                                                             module: {code: \"GEH1001\",\n  //                                                                      name: \"Globalisation and New Media\",\n  //                                                                      MCs: 4}\n  //                                                               },\n  //                                                               {name: \"Complete Economic Issues in Dev World\",\n  //                                                                tag: \"GEH1001\",\n  //                                                                module: {code: \"GEH1001\",\n  //                                                                         name: \"Globalisation and New Media\",\n  //                                                                         MCs: 4}\n  //                                                                        }\n  //                                                               ]\n  //                                                       },\n  //                                       }\n  //                                     ]\n  //                               }\n  //               },\n  //              {name: \"Core Modules\",\n  //               tag: \"Core Modules 2018\",\n  //               requirement: {\"and\": [\n  //                                     {name: \"Computer Science Foundation\",\n  //                                      tag: \"cs_foundation_2018\",\n  //                                      requirement: {\"and\": [\n  //                                                             {name: \"Complete GER1000\",\n  //                                                             tag: \"GER1000\",\n  //                                                             module: {code: \"GER1000\",\n  //                                                                      name: \"Quantitative Reasoning\",\n  //                                                                      MCs: 4}\n  //                                                             },\n  //                                                             {name: \"Complete GER1000\",\n  //                                                              tag: \"GER1000\",\n  //                                                              module: {code: \"GER1000\",\n  //                                                                       name: \"Quantitative Reasoning\",\n  //                                                                       MCs: 4}\n  //                                                             },\n  //                                                             {name: \"Complete GER1000\",\n  //                                                            tag: \"GER1000\",\n  //                                                            module: {code: \"GER1000\",\n  //                                                                     name: \"Quantitative Reasoning\",\n  //                                                                     MCs: 4}\n  //                                                           },\n  //                                                           {name: \"Complete GER1000\",\n  //                                                            tag: \"GER1000\",\n  //                                                            module: {code: \"GER1000\",\n  //                                                                     name: \"Quantitative Reasoning\",\n  //                                                                     MCs: 4}\n  //                                                           }\n  //                                                           ]\n  //                                                   }\n  //                                       },\n  //                                      {name: \"Computer Science Breadth and Depth\",\n  //                                      tag: \"cs_foundation_2018\",\n  //                                      requirement: {\"condition\": {\"at least\": [{rule: \"CS Focus Area\"}, {MCs: 12, minLevel: 4000}]},\n  //                                       \"or\": [ {name: \"CS Focus Area\",\n  //                                                              tag: \"GER1000\",\n  //                                                              requirement: { \n  //                                                                             \"or\" : [\n  //                                                                                       {\n  //                                                                                         name: \"Algorithms and Theory\",\n  //                                                                                         tag: \"algorithms\",\n  //                                                                                         requirement: { \"condition\": {\"at least\": [{number: 3,\n  //                                                                                                                                   level: \"any\"},\n  //                                                                                                                                   {number: 1,\n  //                                                                                                                                   level: 4000}\n  //                                                                                                                                  ] \n  //                                                                                                                     },\n  //                                                                                                         \"or\": [{name: \"Ger1000\",\n  //                                                                                                               tag: \"GER1000\",\n  //                                                                                                               module: {code: \"GER1000\",\n  //                                                                                                                        name: \"Quantitative Reasoning\",\n  //                                                                                                                        MCs: 4}\n  //                                                                                                                },\n  //                                                                                                                {name: \"Complete GER1000\",\n  //                                                                                                                 tag: \"GER1000\",\n  //                                                                                                                 module: {code: \"GER1000\",\n  //                                                                                                                         name: \"Quantitative Reasoning\",\n  //                                                                                                                         MCs: 4}\n  //                                                                                                                },\n  //                                                                                                                {name: \"Complete GER1000\",\n  //                                                                                                               tag: \"GER1000\",\n  //                                                                                                               module: {code: \"GER1000\",\n  //                                                                                                                        name: \"Quantitative Reasoning\",\n  //                                                                                                                        MCs: 4}\n  //                                                                                                                },\n  //                                                                                                                {name: \"Complete GER1000\",\n  //                                                                                                               tag: \"GER1000\",\n  //                                                                                                               module: {code: \"GER1000\",\n  //                                                                                                                        name: \"Quantitative Reasoning\",\n  //                                                                                                                        MCs: 4}\n  //                                                                                                                },\n  //                                                                                                                {name: \"Complete GER1000\",\n  //                                                                                                                 tag: \"GER1000\",\n  //                                                                                                                 module: {code: \"GER1000\",\n  //                                                                                                                        name: \"Quantitative Reasoning\",\n  //                                                                                                                        MCs: 4}\n  //                                                                                                                },\n  //                                                                                                               ]\n  //                                                                                                       }\n  //                                                                                       }\n  //                                                                                     ]\n  //                                                                                   }\n  //                                                                                 },\n  //                                                                 {name: \"CP-coded\",\n  //                                                                  tag: \"CP-coded\",\n  //                                                                  requirement: {\"condition\": {\n  //                                                                                               \"at most\": {MCs: 12, \n  //                                                                                                           minLevel: 4000}\n  //                                                                                             },\n  //                                                                                 \"or\": [\n  //                                                                                         {\n  //                                                                                           name: \"Complete GER1000\",\n  //                                                                                                               tag: \"GER1000\",\n  //                                                                                                               module: {code: \"GER1000\",\n  //                                                                                                                        name: \"Quantitative Reasoning\",\n  //                                                                                                                        MCs: 4}\n  //                                                                                         },\n  //                                                                                         {\n  //                                                                                           name: \"Complete GER1000\",\n  //                                                                                                               tag: \"GER1000\",\n  //                                                                                                               module: {code: \"GER1000\",\n  //                                                                                                                        name: \"Quantitative Reasoning\",\n  //                                                                                                                        MCs: 4}\n  //                                                                                         }\n  //                                                                                 ] \n  //                                                                               }                        \n  //                                                                 }\n  //                                                     ]}\n  //                                               },\n  //                                      {name: \"Industrial Experience Requirement\",\n  //                                      tag: \"cs_foundation_2018\",\n  //                                      requirement: {}},\n  //                                      {name: \"IT Professionalism\",\n  //                                      tag: \"cs_foundation_2018\",\n  //                                      requirement: {}}\n  //               ]}},\n  //              {unrestrictedModules: {} }\n  //             ],\n  //  summary: [{cat: \"General Elective Module\",\n  //             MCs: 0},\n  //             {cat: \"Core Module\",\n  //             MCs: 0},\n  //             {cat: \"Specialisation Module\",\n  //             MCs: 0},\n  //             {cat: \"Unrestricted Module\",\n  //             MCs: 0}],\n  // grandTotal: 0,\n  // this.changeFaculty = this.changeFaculty.bind(this);\n  // this.changeMajor=this.changeMajor.bind(this);\n  // this.changeSpecialisation= this.changeSpecialisation.bind(this);\n  // this.changeResidence= this.changeResidence.bind(this);\n  // this.generateOptions =this.generateOptions.bind(this);\n  //   this.makeTable = this.makeTable.bind(this);\n  //   this.generateDropDown = this.generateDropDown.bind(this);\n  //   this.handleClick = this.handleClick.bind(this);\n  //   this.countModule = this.countModule.bind(this);\n  //   this.getDropdownMCs = this.getDropdownMCs.bind(this);\n  //   this.receiveModuleRules=this.receiveModuleRules.bind(this);\n  //   // }\n  //   componentDidMount() {\n  //     // Call our fetch function below once the component mounts\n  //   this.callBackendAPI()\n  //     .then(res => this.setState({ data: res.express }))\n  //     .catch(err => console.log(err));\n  // }\n  //   // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n  // callBackendAPI = async () => {\n  //   const response = await fetch('http://localhost:5001/');\n  //   const body = await response.json();\n  //   if (response.status !== 200) {\n  //     throw Error(body.message) \n  //   }\n  //   return body;\n  // };\n  //receive the choice of faculty from module.js and change state of faculty\n  //   changeFaculty(value, index) {\n  //     this.setState({\n  //       faculty: value,\n  //       facIndex: index,\n  //       major: null\n  //     });\n  //   }\n  //   changeMajor(value, index) {\n  //     this.setState({\n  //       major: value,\n  //       majorIndex: index\n  //     });\n  //   }\n  //   changeSpecialisation(value) {\n  //     this.setState({\n  //       specialisation: value,\n  //     });\n  //   }\n  //   changeResidence(value) {\n  //     this.setState({\n  //       residence: value,\n  //     });\n  //   }\n  //   //turn array of choices into options dropdown\n  //   generateOptions(choices) {\n  //     let facIndex = this.state.facIndex;\n  //   if(choices === 'faculty'){\n  //     return this.state.dummyfac.map((obj) => {\n  //       return (\n  //       <option value={Object.keys(obj)}>\n  //         {Object.keys(obj)}\n  //       </option>\n  //       );\n  //     });\n  //   } else if(choices === 'major') {\n  //       if(this.state.faculty) {\n  //     return this.state.dummyfac\n  //            [facIndex]\n  //            [this.state.faculty].map((obj) => {\n  //                   return (\n  //                     <option value={Object.keys(obj)}>\n  //                       {Object.keys(obj)}\n  //                     </option>\n  //                   )\n  //               }\n  //     )}\n  //   } else if(choices === 'specialisation') {\n  //       if(this.state.major && this.state.faculty) {\n  //       return this.state.dummyfac\n  //              [facIndex]\n  //              [this.state.faculty][this.state.majorIndex][this.state.major].map((item) => {\n  //                   return (\n  //                     <option>\n  //                       {item}\n  //                     </option>\n  //                   )\n  //                 }    \n  //       )}\n  //   } else {\n  //     return this.state.residenceOptions.map((obj) => {\n  //       return (\n  //       <option value={obj}>\n  //         {obj}\n  //       </option>\n  //       );\n  //     });\n  //   }\n  // }\n  //takes in array of objects for modules and return a table\n  //   makeTable(item, moduleCat, index) {\n  //     if(item === 'summary') {\n  //       return this.state.summary.map((module) => {\n  //       const { cat, MCs } = module;\n  //       return(\n  //         <div>\n  //           <tr key={cat}>\n  //             <td>{cat}</td>\n  //             <td>{MCs + 'MCs'}</td>\n  //           </tr>\n  //         </div>\n  //       )\n  //       }\n  //     )}\n  //     else{\n  //     let propfunction;\n  //       if (item === 'coreModule'){\n  //         propfunction = this.state.dummymodules[1].coreModules;\n  //       }\n  //       else if(item === 'specialisation') {\n  //         propfunction = this.state.dummymodules[2].specialisationModules;\n  //       } \n  //       else if(item === 'unrestricted') {\n  //         propfunction = this.state.dummymodules[3].unrestrictedModules;\n  //       } \n  //       else {\n  //         propfunction = this.state.dummymodules[0].GEMs[index][moduleCat]\n  //       }\n  //    return propfunction.map((module) => {\n  //         const { code, name, MCs} = module\n  //         const desc = name.replace(/ /g, '-');\n  //         const link = `https://nusmods.com/modules/${code}/${desc}`\n  //         if(item === 'GEM') {\n  //           return (\n  //             <div>\n  //                 <tr key={code} data-toggle=\"tooltip\" \n  //                     title=\"Click row to select module, click on the module code for more information\"\n  //                     onClick={() => this.handleClick(code, name, MCs, moduleCat)}\n  //                     >\n  //                     <a href={link}\n  //                       target=\"_blank\"\n  //                       rel=\"noopener noreferrer\"\n  //                       className=\"text-decoration-none\">\n  //                     <td>{code}</td>\n  //                     </a>\n  //                     <td>{name}</td>\n  //                     <td>{MCs + 'MCs'}</td>\n  //                 </tr>\n  //             </div>\n  //         )\n  //         } else{\n  //         return (\n  //             <div>\n  //                 <tr key={code} >\n  //                 <a href={link} \n  //                            target=\"_blank\" \n  //                            rel=\"noopener noreferrer\"\n  //                            className=\"text-white text-decoration-none\">\n  //                     <td>{code}</td>\n  //                     <td>{name}</td>\n  //                     <td>{MCs + 'MCs'}</td>\n  //                     </a>\n  //                 </tr>\n  //             </div>\n  //         )}\n  //    })\n  //   }\n  // }\n  useEffect(() => {\n    if (!isEmpty(props.settings.userInfo.modPlan) && isEmpty(props.modplan.selectedModules)) {\n      console.log(props.modplan.selectedModules);\n      props.setSelectedModules(null, props.settings.userInfo.modPlan);\n    }\n  }, [props.settings.userInfo]);\n\n  const handleClick = (code, name, MCs, moduleCat) => {\n    const title = code + ': ' + name;\n    this.setState({\n      GEMTitle: title,\n      MCTemp: MCs,\n      moduleCat: moduleCat\n    });\n  };\n\n  const countModule = () => {\n    const GEMs = this.state.totalGEMMCs;\n    const coreModules = this.state.dummymodules[1].coreModules.reduce((currentTotal, next) => {\n      return currentTotal + next.MCs;\n    }, 0);\n    const specialisationModules = this.state.dummymodules[2].specialisationModules.reduce((currentTotal, next) => {\n      return currentTotal + next.MCs;\n    }, 0);\n    const unrestrictedModules = this.state.dummymodules[3].unrestrictedModules.reduce((currentTotal, next) => {\n      return currentTotal + next.MCs;\n    }, 0);\n    const grandTotal = GEMs + coreModules + specialisationModules + unrestrictedModules;\n    this.setState({\n      summary: [{\n        cat: \"General Elective Module\",\n        MCs: GEMs\n      }, {\n        cat: \"Core Module\",\n        MCs: coreModules\n      }, {\n        cat: \"Specialisation Module\",\n        MCs: specialisationModules\n      }, {\n        cat: \"Unrestricted Module\",\n        MCs: unrestrictedModules\n      }],\n      grandTotal: grandTotal\n    });\n  }; // takes in array of objects for modules and return a table\n\n\n  return isEmpty(props.settings.userInfo) || isEmpty(props.settings.userInfo.matriculationYear) ? /*#__PURE__*/React.createElement(LoadingDots, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 654,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    class: \"full-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 655,\n      columnNumber: 16\n    }\n  }, generateObject(props.settings.userInfo.matriculationYear, props.settings.userInfo.targetGradYear, \"tables\", props.modplan.selectedModules));\n};\nModuleSelectionPage.propTypes = {\n  modplan: PropTypes.object.isRequired,\n  settings: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  modplan: state.modplan,\n  settings: state.settings\n});\n\nexport default connect(mapStateToProps)(ModuleSelectionPage);","map":{"version":3,"sources":["/Users/frisciliasultan/Documents/Orbitalhosting/src/Pages/Module Selection Page/ModuleSelectionPage.jsx"],"names":["React","useEffect","Dropdown","PropTypes","connect","isEmpty","generateObject","LoadingDots","totalGEMMCs","ModuleSelectionPage","props","settings","userInfo","modPlan","modplan","selectedModules","console","log","setSelectedModules","handleClick","code","name","MCs","moduleCat","title","setState","GEMTitle","MCTemp","countModule","GEMs","state","coreModules","dummymodules","reduce","currentTotal","next","specialisationModules","unrestrictedModules","grandTotal","summary","cat","matriculationYear","targetGradYear","propTypes","object","isRequired","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,UAApB;AACA,SAASC,cAAT,QAA+B,6BAA/B;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AAEA,IAAIC,WAAW,GAAG,CAAlB;AAEA,OAAO,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;AACpkd,QAAG,CAACI,OAAO,CAACK,KAAK,CAACC,QAAN,CAAeC,QAAf,CAAwBC,OAAzB,CAAR,IAA6CR,OAAO,CAACK,KAAK,CAACI,OAAN,CAAcC,eAAf,CAAvD,EAAwF;AACpFC,MAAAA,OAAO,CAACC,GAAR,CAAYP,KAAK,CAACI,OAAN,CAAcC,eAA1B;AACAL,MAAAA,KAAK,CAACQ,kBAAN,CAAyB,IAAzB,EAA+BR,KAAK,CAACC,QAAN,CAAeC,QAAf,CAAwBC,OAAvD;AACH;AACF,GALQ,EAKN,CAACH,KAAK,CAACC,QAAN,CAAeC,QAAhB,CALM,CAAT;;AAOA,QAAMO,WAAW,GAAG,CAACC,IAAD,EAAOC,IAAP,EAAaC,GAAb,EAAkBC,SAAlB,KAAgC;AAC9C,UAAMC,KAAK,GAAGJ,IAAI,GAAG,IAAP,GAAcC,IAA5B;AACA,SAAKI,QAAL,CAAc;AAACC,MAAAA,QAAQ,EAAEF,KAAX;AACCG,MAAAA,MAAM,EAAEL,GADT;AAEEC,MAAAA,SAAS,EAAEA;AAFb,KAAd;AAGD,GALL;;AAOA,QAAMK,WAAW,GAAG,MAAM;AACpB,UAAMC,IAAI,GAAG,KAAKC,KAAL,CAAWtB,WAAxB;AACA,UAAMuB,WAAW,GAAG,KAAKD,KAAL,CAAWE,YAAX,CAAwB,CAAxB,EAA2BD,WAA3B,CAAuCE,MAAvC,CAA8C,CAACC,YAAD,EAAeC,IAAf,KAAwB;AACxF,aAAOD,YAAY,GAAGC,IAAI,CAACb,GAA3B;AAA+B,KADb,EACgB,CADhB,CAApB;AAEA,UAAMc,qBAAqB,GAAG,KAAKN,KAAL,CAAWE,YAAX,CAAwB,CAAxB,EAA2BI,qBAA3B,CAAiDH,MAAjD,CAAwD,CAACC,YAAD,EAAeC,IAAf,KAAwB;AAC5G,aAAOD,YAAY,GAAGC,IAAI,CAACb,GAA3B;AAA+B,KADH,EACM,CADN,CAA9B;AAEA,UAAMe,mBAAmB,GAAG,KAAKP,KAAL,CAAWE,YAAX,CAAwB,CAAxB,EAA2BK,mBAA3B,CAA+CJ,MAA/C,CAAsD,CAACC,YAAD,EAAeC,IAAf,KAAwB;AACxG,aAAOD,YAAY,GAAGC,IAAI,CAACb,GAA3B;AAA+B,KADL,EACQ,CADR,CAA5B;AAEA,UAAMgB,UAAU,GAAGT,IAAI,GAAGE,WAAP,GAAqBK,qBAArB,GAA6CC,mBAAhE;AACE,SAAKZ,QAAL,CAAc;AAACc,MAAAA,OAAO,EAAE,CAAC;AAACC,QAAAA,GAAG,EAAE,yBAAN;AACAlB,QAAAA,GAAG,EAAEO;AADL,OAAD,EAEA;AAACW,QAAAA,GAAG,EAAE,aAAN;AACClB,QAAAA,GAAG,EAAES;AADN,OAFA,EAIA;AAACS,QAAAA,GAAG,EAAE,uBAAN;AACClB,QAAAA,GAAG,EAAEc;AADN,OAJA,EAMA;AAACI,QAAAA,GAAG,EAAE,qBAAN;AACClB,QAAAA,GAAG,EAAEe;AADN,OANA,CAAV;AAQAC,MAAAA,UAAU,EAAEA;AARZ,KAAd;AAWD,GApBP,CAxmB4C,CA8nBxC;;;AAGJ,SACEjC,OAAO,CAACK,KAAK,CAACC,QAAN,CAAeC,QAAhB,CAAP,IAAoCP,OAAO,CAACK,KAAK,CAACC,QAAN,CAAeC,QAAf,CAAwB6B,iBAAzB,CAA3C,gBACU,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADV,gBAEW;AAAK,IAAA,KAAK,EAAC,gBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACFnC,cAAc,CAACI,KAAK,CAACC,QAAN,CAAeC,QAAf,CAAwB6B,iBAAzB,EACG/B,KAAK,CAACC,QAAN,CAAeC,QAAf,CAAwB8B,cAD3B,EAEG,QAFH,EAEahC,KAAK,CAACI,OAAN,CAAcC,eAF3B,CADZ,CAHb;AAwED,CAzsBM;AA2sBPN,mBAAmB,CAACkC,SAApB,GAAgC;AAC9B7B,EAAAA,OAAO,EAAEX,SAAS,CAACyC,MAAV,CAAiBC,UADI;AAE9BlC,EAAAA,QAAQ,EAAER,SAAS,CAACyC,MAAV,CAAiBC;AAFG,CAAhC;;AAKA,MAAMC,eAAe,GAAGhB,KAAK,KAAK;AAChChB,EAAAA,OAAO,EAAEgB,KAAK,CAAChB,OADiB;AAEhCH,EAAAA,QAAQ,EAAEmB,KAAK,CAACnB;AAFgB,CAAL,CAA7B;;AAKA,eAAeP,OAAO,CAAC0C,eAAD,CAAP,CAA0BrC,mBAA1B,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { Dropdown } from './Dropdown';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport isEmpty from \"is-empty\";\nimport { generateObject } from \"../../utils/commonFunctions\";\nimport LoadingDots from \"../Loading Page/LoadingPage\";\n\nlet totalGEMMCs = 0;\n\nexport const ModuleSelectionPage = (props) => {\n          // data: null,\n          // faculty: null,\n          \n          // major: null,\n          // specialisation: null,\n          // residenceOptions: ['N/A','CAPT', 'RC4', 'RVRC','Tembusu', 'USP'],\n          // residence: 'N/A',\n          // dummyfac: [{'Business': [{'Business Administration': ['A', 'B']},\n          //                           {'Accountancy': ['C', 'D']}]},\n          //           {'FASS': [{'C': ['N/A']},\n          //                     {'D': ['N/A']}]},\n          //           {\n          //             'Computing': [\n          //                             {'Computer Science': ['N/A']},\n          //                             {'Business Analytics': ['N/A']}\n          //             ]\n          //           }],\n          // dummymodules: [{GEMs:[\n          //   {\"GEH: Human Culture\": [{code: 'GEH1001', \n          //                           name: 'Globalisation and New Media', \n          //                           MCs: 4, \n          //                           link: \"https://nusmods.com/modules/MA1521/calculus-for-computing\"},\n          //                           {code: 'GEH1002', \n          //                           name: \"Economic Issues in Dev World\", \n          //                           MCs:2, \n          //                           link: \"https://nusmods.com/modules/MA1521/calculus-for-computing\"},\n          //                           {code: 'GEH23420', \n          //                           name: 'lafjkljwe', \n          //                           MCs: 4, \n          //                           link: \"https://nusmods.com/modules/MA1521/calculus-for-computing\"}]}, //end of first object member\n            \n          //   {\"GES: Singapore Studies\": [{code: 'GES324230', \n          //                               name: 'adkfjkjfklasj', \n          //                               MCs: 4, \n          //                               link: 'asdfew'}]} //end of object 2\n          //   ]},\n          //   {coreModules: [\n          //     {code: \"CS1231\",\n          //      name: \"Discrete Structures\",\n          //      MCs: 4,\n          //      link: \"https://nusmods.com/modules/MA1521/calculus-for-computing\"},\n          //      {code: \"MA1101\",\n          //      name: \"Linear Algebra I\",\n          //      MCs: 4,\n          //      link: \"https://nusmods.com/modules/MA1521/calculus-for-computing\"},\n          //      {code: \"MA1521\",\n          //      name: \"Calculus for Computing\",\n          //      MCs: 4,\n          //      link: \"https://nusmods.com/modules/MA1521/calculus-for-computing\"},\n          //      {\n          //        code: \"GER1000\",\n          //        name: \"Quantitative Reasoning\",\n          //        MCs: 4\n          //      },\n          //      {\n          //       code: \"CS1101S\",\n          //       name: \"Programming Methodology\",\n          //       MCs: 4\n          //     }\n          //     ]},\n          //   {specialisationModules: [\n          //     {code: \"MA1531\",\n          //      name: \"Calculus not Computing\",\n          //      MCs: 4,\n          //      link: \"https://nusmods.com/modules/MA1521/calculus-for-computing\"},\n          //      {code: \"MA1531\",\n          //      name: \"Calculus not Computing\",\n          //      MCs: 4,\n          //      link: \"https://nusmods.com/modules/MA1521/calculus-for-computing\"}\n          //   ]},\n          //   {unrestrictedModules: [{code: \"MA1521\",\n          // name: \"Calculus for Computing\",\n          // MCs: 4,\n          // link: \"https://nusmods.com/modules/MA1521/calculus-for-computing\"},\n          // ]},\n\n          // //y1s2 4\n          // {coreModules: [\n          //   {\n          //     code: \"CS2030\",\n          //     name: \"Programming Methodology II\",\n          //     MCs: 4\n          //   },\n          //   {\n          //     code: \"CS2040\",\n          //     name: \"Data Structures and Algorithms\",\n          //     MCs: 4\n          //   },\n          //   {\n          //     code: \"IS1103\",\n          //     name: \"IS Innovations in Organisations and Society\",\n          //     MCs: 4\n          //   },\n          //   {\n          //     code: \"GEH1000\",\n          //     name: \"Cultural Diversity in ASEAN\",\n          //     MCs: 4\n          //   },\n          //   {\n          //     code: \"GEQ1000\",\n          //     name: \"Asking Questions\",\n          //     MCs: 4\n          //   },\n          //   ]},\n          //   //y2s1 5\n          //   {coreModules: [\n          //     {\n          //       code: \"GET1000\",\n          //       name: \"Ethics at Work: Rhyme, Reason and Reality\",\n          //       MCs: 4\n          //     },\n          //     {\n          //       code: \"GES1000\",\n          //       name: \"Labour Law in Singapore\",\n          //       MCs: 4\n          //     },\n          //     ]},\n\n          //     //y2s2 6\n          //     {coreModules: [\n          //       {\n          //         code: \"CS2100\",\n          //         name: \"Computer Organisation\",\n          //         MCs: 4\n          //       },\n          //       {\n          //         code: \"CS2103T\",\n          //         name: \"Software Engineering\",\n          //         MCs: 4\n          //       },\n          //       {\n          //         code: \"CS2106\",\n          //         name: \"Introduction to Operating Systems\",\n          //         MCs: 4\n          //       },\n          //       {\n          //         code: \"CS3230\",\n          //         name: \"Design and Analysis of Algorithms\",\n          //         MCs: 4\n          //       },\n          //       ]},\n\n          //       // y3s1 7\n          //       {coreModules: [\n          //         {\n          //           code: \"CP4101\",\n          //           name: \"B.Comp. Dissertation\",\n          //           MCs: 12\n          //         },\n          //         {\n          //           code: \"CS3236\",\n          //           name: \"Introduction to Information Theory\",\n          //           MCs: 4\n          //         },\n          //         {\n          //           code: \"CS4231\",\n          //           name: \"Parallel and Distributed Algorithms\",\n          //           MCs: 4\n          //         },\n          //         {\n          //           code: \"CS4234\",\n          //           name: \"Optimisatin Algorithms\",\n          //           MCs: 4\n          //         },\n          //         {\n          //           code: \"CS3203\",\n          //           name: \"Software Engineering Project\",\n          //           MCs: 8\n          //         },\n\n          //         ]},\n\n          //         // y3s2 8\n          //         {coreModules: [\n          //           {\n          //             code: \"CP3880\",\n          //             name: \"Advanced Technology Attachment Programme\",\n          //             MCs: 12\n          //           },\n          //           ]},\n\n          //           // y4s1 9\n          //           {coreModules: [\n          //             {\n          //               code: \"ST2334\",\n          //               name: \"Probability and Statistics\",\n          //               MCs: 4\n          //             },\n          //             ]},\n\n          //             // y4s2 10\n          //             {coreModules: [\n          //               {\n          //                 code: \"ES2660\",\n          //                 name: \"Communicating in The Information Age\",\n          //                 MCs: 4\n          //               },\n          //               {\n          //                 code: \"CS2101\",\n          //                 name: \"Effective Communication for Computing\",\n          //                 MCs: 4\n          //               },\n          //               {\n          //                 code: \"CM1121\",\n          //                 name: \"Organic Chemistry 1\",\n          //                 MCs: 4\n          //               },\n          //               ]},\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n          // ],\n          // dummyrules: [{name: \"ULR\",\n          //               tag: \"ULR_2018\",\n          //               requirements: {\"and\": [{name: \"Complete Quantitative Reasoning\",\n          //                                     tag: \"GER\",\n          //                                     requirements: {\"and\": [\n          //                                                           {name: \"Complete GER1000\",\n          //                                                            tag: \"GER1000\",\n          //                                                            module: {code: \"GER1000\",\n          //                                                                     name: \"Quantitative Reasoning\",\n          //                                                                     MCs: 4}\n          //                                                           }\n          //                                                         ]\n          //                                                   }\n          //                                       },\n    \n          //                                       {name: \"Complete Human Culture\",\n          //                                        tag: \"GEH\",\n          //                                        requirements: {\"or\": [{name: \"Complete Globalisation and New Media\",\n          //                                                               tag: \"GEH1001\",\n          //                                                             module: {code: \"GEH1001\",\n          //                                                                      name: \"Globalisation and New Media\",\n          //                                                                      MCs: 4}\n          //                                                               },\n                                     \n          //                                                               {name: \"Complete Economic Issues in Dev World\",\n          //                                                                tag: \"GEH1001\",\n          //                                                                module: {code: \"GEH1001\",\n          //                                                                         name: \"Globalisation and New Media\",\n          //                                                                         MCs: 4}\n          //                                                                        }\n          //                                                               ]\n          //                                                       },\n          //                                       }\n          //                                     ]\n          //                               }\n          //               },\n    \n          //              {name: \"Core Modules\",\n          //               tag: \"Core Modules 2018\",\n          //               requirement: {\"and\": [\n          //                                     {name: \"Computer Science Foundation\",\n          //                                      tag: \"cs_foundation_2018\",\n          //                                      requirement: {\"and\": [\n          //                                                             {name: \"Complete GER1000\",\n          //                                                             tag: \"GER1000\",\n          //                                                             module: {code: \"GER1000\",\n          //                                                                      name: \"Quantitative Reasoning\",\n          //                                                                      MCs: 4}\n          //                                                             },\n    \n          //                                                             {name: \"Complete GER1000\",\n          //                                                              tag: \"GER1000\",\n          //                                                              module: {code: \"GER1000\",\n          //                                                                       name: \"Quantitative Reasoning\",\n          //                                                                       MCs: 4}\n          //                                                             },\n    \n          //                                                             {name: \"Complete GER1000\",\n          //                                                            tag: \"GER1000\",\n          //                                                            module: {code: \"GER1000\",\n          //                                                                     name: \"Quantitative Reasoning\",\n          //                                                                     MCs: 4}\n          //                                                           },\n    \n          //                                                           {name: \"Complete GER1000\",\n          //                                                            tag: \"GER1000\",\n          //                                                            module: {code: \"GER1000\",\n          //                                                                     name: \"Quantitative Reasoning\",\n          //                                                                     MCs: 4}\n          //                                                           }\n          //                                                           ]\n          //                                                   }\n          //                                       },\n    \n          //                                      {name: \"Computer Science Breadth and Depth\",\n          //                                      tag: \"cs_foundation_2018\",\n          //                                      requirement: {\"condition\": {\"at least\": [{rule: \"CS Focus Area\"}, {MCs: 12, minLevel: 4000}]},\n                                                 \n          //                                       \"or\": [ {name: \"CS Focus Area\",\n          //                                                              tag: \"GER1000\",\n          //                                                              requirement: { \n          //                                                                             \"or\" : [\n          //                                                                                       {\n          //                                                                                         name: \"Algorithms and Theory\",\n          //                                                                                         tag: \"algorithms\",\n          //                                                                                         requirement: { \"condition\": {\"at least\": [{number: 3,\n          //                                                                                                                                   level: \"any\"},\n          //                                                                                                                                   {number: 1,\n          //                                                                                                                                   level: 4000}\n          //                                                                                                                                  ] \n          //                                                                                                                     },\n          //                                                                                                         \"or\": [{name: \"Ger1000\",\n          //                                                                                                               tag: \"GER1000\",\n          //                                                                                                               module: {code: \"GER1000\",\n          //                                                                                                                        name: \"Quantitative Reasoning\",\n          //                                                                                                                        MCs: 4}\n                                                                                                                                \n          //                                                                                                                },\n          //                                                                                                                {name: \"Complete GER1000\",\n          //                                                                                                                 tag: \"GER1000\",\n          //                                                                                                                 module: {code: \"GER1000\",\n          //                                                                                                                         name: \"Quantitative Reasoning\",\n          //                                                                                                                         MCs: 4}\n                                                                                                                                \n          //                                                                                                                },\n          //                                                                                                                {name: \"Complete GER1000\",\n          //                                                                                                               tag: \"GER1000\",\n          //                                                                                                               module: {code: \"GER1000\",\n          //                                                                                                                        name: \"Quantitative Reasoning\",\n          //                                                                                                                        MCs: 4}\n                                                                                                                                \n          //                                                                                                                },\n          //                                                                                                                {name: \"Complete GER1000\",\n          //                                                                                                               tag: \"GER1000\",\n          //                                                                                                               module: {code: \"GER1000\",\n          //                                                                                                                        name: \"Quantitative Reasoning\",\n          //                                                                                                                        MCs: 4}\n                                                                                                                                \n          //                                                                                                                },\n          //                                                                                                                {name: \"Complete GER1000\",\n          //                                                                                                                 tag: \"GER1000\",\n          //                                                                                                                 module: {code: \"GER1000\",\n          //                                                                                                                        name: \"Quantitative Reasoning\",\n          //                                                                                                                        MCs: 4}\n                                                                                                                                  \n          //                                                                                                                },\n          //                                                                                                               ]\n          //                                                                                                       }\n          //                                                                                       }\n          //                                                                                     ]\n          //                                                                                   }\n          //                                                                                 },\n                                                                                          \n          //                                                                 {name: \"CP-coded\",\n          //                                                                  tag: \"CP-coded\",\n          //                                                                  requirement: {\"condition\": {\n          //                                                                                               \"at most\": {MCs: 12, \n          //                                                                                                           minLevel: 4000}\n          //                                                                                             },\n          //                                                                                 \"or\": [\n          //                                                                                         {\n          //                                                                                           name: \"Complete GER1000\",\n          //                                                                                                               tag: \"GER1000\",\n          //                                                                                                               module: {code: \"GER1000\",\n          //                                                                                                                        name: \"Quantitative Reasoning\",\n          //                                                                                                                        MCs: 4}\n          //                                                                                         },\n    \n          //                                                                                         {\n          //                                                                                           name: \"Complete GER1000\",\n          //                                                                                                               tag: \"GER1000\",\n          //                                                                                                               module: {code: \"GER1000\",\n          //                                                                                                                        name: \"Quantitative Reasoning\",\n          //                                                                                                                        MCs: 4}\n          //                                                                                         }\n          //                                                                                 ] \n          //                                                                               }                        \n          //                                                                 }\n          //                                                     ]}\n          //                                               },\n    \n          //                                      {name: \"Industrial Experience Requirement\",\n          //                                      tag: \"cs_foundation_2018\",\n          //                                      requirement: {}},\n    \n          //                                      {name: \"IT Professionalism\",\n          //                                      tag: \"cs_foundation_2018\",\n          //                                      requirement: {}}\n          //               ]}},\n          //              {unrestrictedModules: {} }\n          //             ],\n          \n        //  summary: [{cat: \"General Elective Module\",\n        //             MCs: 0},\n        //             {cat: \"Core Module\",\n        //             MCs: 0},\n        //             {cat: \"Specialisation Module\",\n        //             MCs: 0},\n        //             {cat: \"Unrestricted Module\",\n        //             MCs: 0}],\n        // grandTotal: 0,\n    \n    \n        \n        // this.changeFaculty = this.changeFaculty.bind(this);\n        // this.changeMajor=this.changeMajor.bind(this);\n        // this.changeSpecialisation= this.changeSpecialisation.bind(this);\n        // this.changeResidence= this.changeResidence.bind(this);\n        // this.generateOptions =this.generateOptions.bind(this);\n      //   this.makeTable = this.makeTable.bind(this);\n      //   this.generateDropDown = this.generateDropDown.bind(this);\n      //   this.handleClick = this.handleClick.bind(this);\n      //   this.countModule = this.countModule.bind(this);\n      //   this.getDropdownMCs = this.getDropdownMCs.bind(this);\n      //   this.receiveModuleRules=this.receiveModuleRules.bind(this);\n    //   // }\n      \n    //   componentDidMount() {\n    //     // Call our fetch function below once the component mounts\n    //   this.callBackendAPI()\n    //     .then(res => this.setState({ data: res.express }))\n    //     .catch(err => console.log(err));\n    // }\n    //   // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n    // callBackendAPI = async () => {\n    //   const response = await fetch('http://localhost:5001/');\n    //   const body = await response.json();\n    \n    //   if (response.status !== 200) {\n    //     throw Error(body.message) \n    //   }\n    //   return body;\n    // };\n    \n      //receive the choice of faculty from module.js and change state of faculty\n    //   changeFaculty(value, index) {\n    //     this.setState({\n    //       faculty: value,\n    //       facIndex: index,\n    //       major: null\n    //     });\n    //   }\n    \n    //   changeMajor(value, index) {\n    //     this.setState({\n    //       major: value,\n    //       majorIndex: index\n    //     });\n    //   }\n    \n    //   changeSpecialisation(value) {\n    //     this.setState({\n    //       specialisation: value,\n    //     });\n    //   }\n    //   changeResidence(value) {\n    //     this.setState({\n    //       residence: value,\n    //     });\n    //   }\n    \n    //   //turn array of choices into options dropdown\n    //   generateOptions(choices) {\n    //     let facIndex = this.state.facIndex;\n    //   if(choices === 'faculty'){\n    //     return this.state.dummyfac.map((obj) => {\n    //       return (\n    //       <option value={Object.keys(obj)}>\n    //         {Object.keys(obj)}\n    //       </option>\n    //       );\n    //     });\n    //   } else if(choices === 'major') {\n    //       if(this.state.faculty) {\n    //     return this.state.dummyfac\n    //            [facIndex]\n    //            [this.state.faculty].map((obj) => {\n    //                   return (\n    //                     <option value={Object.keys(obj)}>\n    //                       {Object.keys(obj)}\n    //                     </option>\n    //                   )\n    //               }\n    //     )}\n    //   } else if(choices === 'specialisation') {\n    //       if(this.state.major && this.state.faculty) {\n    //       return this.state.dummyfac\n    //              [facIndex]\n    //              [this.state.faculty][this.state.majorIndex][this.state.major].map((item) => {\n    //                   return (\n    //                     <option>\n    //                       {item}\n    //                     </option>\n    //                   )\n    //                 }    \n    //       )}\n    //   } else {\n    //     return this.state.residenceOptions.map((obj) => {\n    //       return (\n    //       <option value={obj}>\n    //         {obj}\n    //       </option>\n    //       );\n    //     });\n    //   }\n    // }\n    \n      //takes in array of objects for modules and return a table\n    //   makeTable(item, moduleCat, index) {\n    //     if(item === 'summary') {\n    //       return this.state.summary.map((module) => {\n    //       const { cat, MCs } = module;\n    //       return(\n    //         <div>\n    //           <tr key={cat}>\n    //             <td>{cat}</td>\n    //             <td>{MCs + 'MCs'}</td>\n    //           </tr>\n    //         </div>\n    //       )\n    //       }\n    //     )}\n    \n    //     else{\n    //     let propfunction;\n    //       if (item === 'coreModule'){\n    //         propfunction = this.state.dummymodules[1].coreModules;\n    //       }\n    //       else if(item === 'specialisation') {\n    //         propfunction = this.state.dummymodules[2].specialisationModules;\n    //       } \n    //       else if(item === 'unrestricted') {\n    //         propfunction = this.state.dummymodules[3].unrestrictedModules;\n    //       } \n    //       else {\n    //         propfunction = this.state.dummymodules[0].GEMs[index][moduleCat]\n    //       }\n    \n    //    return propfunction.map((module) => {\n    //         const { code, name, MCs} = module\n    //         const desc = name.replace(/ /g, '-');\n    //         const link = `https://nusmods.com/modules/${code}/${desc}`\n    //         if(item === 'GEM') {\n    //           return (\n    //             <div>\n    //                 <tr key={code} data-toggle=\"tooltip\" \n    //                     title=\"Click row to select module, click on the module code for more information\"\n    //                     onClick={() => this.handleClick(code, name, MCs, moduleCat)}\n    //                     >\n    //                     <a href={link}\n    //                       target=\"_blank\"\n    //                       rel=\"noopener noreferrer\"\n    //                       className=\"text-decoration-none\">\n    //                     <td>{code}</td>\n    //                     </a>\n    //                     <td>{name}</td>\n    //                     <td>{MCs + 'MCs'}</td>\n    //                 </tr>\n    //             </div>\n    //         )\n    //         } else{\n    //         return (\n    //             <div>\n    //                 <tr key={code} >\n    //                 <a href={link} \n    //                            target=\"_blank\" \n    //                            rel=\"noopener noreferrer\"\n    //                            className=\"text-white text-decoration-none\">\n    //                     <td>{code}</td>\n    //                     <td>{name}</td>\n    //                     <td>{MCs + 'MCs'}</td>\n    //                     </a>\n    //                 </tr>\n    //             </div>\n    //         )}\n    //    })\n    //   }\n    // }\n\n  useEffect(() => {\n    if(!isEmpty(props.settings.userInfo.modPlan) && isEmpty(props.modplan.selectedModules)) {\n        console.log(props.modplan.selectedModules)\n        props.setSelectedModules(null, props.settings.userInfo.modPlan)\n    }\n  }, [props.settings.userInfo])\n    \n  const handleClick = (code, name, MCs, moduleCat) => {\n        const title = code + ': ' + name;\n        this.setState({GEMTitle: title,\n                       MCTemp: MCs,\n                        moduleCat: moduleCat});\n      }\n    \n  const countModule = () => {\n        const GEMs = this.state.totalGEMMCs;\n        const coreModules = this.state.dummymodules[1].coreModules.reduce((currentTotal, next) => {\n          return currentTotal + next.MCs} , 0);\n        const specialisationModules = this.state.dummymodules[2].specialisationModules.reduce((currentTotal, next) => {\n          return currentTotal + next.MCs} , 0);\n        const unrestrictedModules = this.state.dummymodules[3].unrestrictedModules.reduce((currentTotal, next) => {\n          return currentTotal + next.MCs} , 0);\n        const grandTotal = GEMs + coreModules + specialisationModules + unrestrictedModules;\n          this.setState({summary: [{cat: \"General Elective Module\",\n                                   MCs: GEMs},\n                                  {cat: \"Core Module\",\n                                   MCs: coreModules},\n                                  {cat: \"Specialisation Module\",\n                                   MCs: specialisationModules},\n                                  {cat: \"Unrestricted Module\",\n                                   MCs: unrestrictedModules}],\n                        grandTotal: grandTotal\n                                  });\n          \n        }\n    \n      // takes in array of objects for modules and return a table\n  \n\n  return (\n    isEmpty(props.settings.userInfo) || isEmpty(props.settings.userInfo.matriculationYear) \n            ? <LoadingDots/>\n            : (<div class=\"full-container\">\n            {generateObject(props.settings.userInfo.matriculationYear, \n                              props.settings.userInfo.targetGradYear,\n                              \"tables\", props.modplan.selectedModules)}\n            {/* <div className=\"row\">\n              <h1 className=\"display-3 ml-4\">\n                Module Information\n              </h1>\n            </div>\n      \n            <div className=\"row\"> \n      \n            <div className=\"col-lg col-md-4 col-sm-6\">\n              <Table\n                    title=\"Year 1 Semester 1\"\n                    module={makeTable('y1s1')} />\n            </div>\n      \n            <div className=\"col-lg col-md-4 col-sm-6\">\n              <Table\n                    title=\"Year 1 Semester 2\"\n                    module={makeTable('y1s2')} />\n            </div>\n      \n            <div className=\"col-lg col-md-4 col-sm-6\">\n              <Table\n                    title=\"Year 2 Semester 1\"\n                    module={makeTable('y2s1')} />\n            </div>\n      \n            <div className=\"col-lg col-md-4 col-sm-6\">\n              <Table\n                    title=\"Year 2 Semester 2\"\n                    module={makeTable('y2s2')} />\n            </div>\n      \n            </div>\n      \n      \n            <div className=\"row\"> \n              <div className=\"col-lg col-md-4 col-sm-6\">\n                <Table\n                      title=\"Year 3 Semester 1\"\n                      module={makeTable('y3s1')} />\n              </div>\n      \n              <div className=\"col-lg col-md-4 col-sm-6\">\n                <Table\n                      title=\"Year 3 Semester 2\"\n                      module={makeTable('y3s2')} />\n              </div>\n      \n      \n                \n              <div className=\"col-lg col-md-4 col-sm-6\">\n                <Table\n                      title=\"Year 4 Semester 1\"\n                      module={makeTable('y4s1')} />\n              </div>\n      \n              <div className=\"col-lg col-md-4 col-sm-6\">\n                <Table\n                      title=\"Year 4 Semester 2\"\n                      module={makeTable('y4s2')} />\n              </div>\n            \n            </div> */}\n        </div>)\n  )\n}\n\nModuleSelectionPage.propTypes = {\n  modplan: PropTypes.object.isRequired,\n  settings: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = state => ({\n  modplan: state.modplan,\n  settings: state.settings\n});\n\nexport default connect(mapStateToProps) (ModuleSelectionPage);"]},"metadata":{},"sourceType":"module"}