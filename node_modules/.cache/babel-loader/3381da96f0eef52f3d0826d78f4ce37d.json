{"ast":null,"code":"var _jsxFileName = \"/Users/frisciliasultan/Documents/Orbital/client/src/Pages/Module Planner Page/ModulePlannerPageTemp.jsx\";\nimport React from 'react';\nimport Board from './Board';\nimport Rules from './Rules';\nimport YearDisplay from './YearDisplay';\nimport './plannertemp.css';\nimport { Button, Card } from 'react-bootstrap';\nimport { HTML5Backend as Backend } from 'react-dnd-html5-backend';\nimport { DndProvider } from 'react-dnd';\n\nclass ModulePlannerPageTemp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedModules: [],\n      isLoading: false,\n      modulesSelected: ['MA1101R'],\n      rules: {\n        _id: \"5ed0d9a9a9225a12882ec26d\",\n        name: \"Degree Requirement\",\n        desc: \"Complete at least 20MCs worth of General Education Modules, with at least 1 module in each of the GEH, GEQ, GER, GES and GET pillars\",\n        tag: \"r_ulr\",\n        sub: [{\n          _id: \"5ed0dd49a9225a12882ec26e\",\n          name: \"University Level Requirement\",\n          desc: \"Complete a GEH-coded module\",\n          tag: \"r_geh_pillar\",\n          sub: [{\n            _id: \"5ed0dd54a9225a12882ec26f\",\n            name: \"GEQ Pillar\",\n            desc: \"Complete a GEQ-coded module\",\n            tag: \"r_geq_pillar\"\n          }, {\n            _id: \"5ed0dd60a9225a12882ec270\",\n            name: \"GER Pillar\",\n            desc: \"Complete a GER-coded module\",\n            tag: \"r_ger_pillar\"\n          }, {\n            _id: \"5ed0dd6ca9225a12882ec271\",\n            name: \"GES Pillar\",\n            desc: \"Complete a GES-coded module\",\n            tag: \"r_ges_pillar\"\n          }, {\n            _id: \"5ed0dd76a9225a12882ec272\",\n            name: \"GET Pillar\",\n            desc: \"Complete a GET-coded module\",\n            tag: \"r_get_pillar\"\n          }]\n        }, {\n          _id: \"5ed0dd54a9225a12882ec26f\",\n          name: \"GEQ Pillar\",\n          desc: \"Complete a GEQ-coded module\",\n          tag: \"r_geq_pillar\"\n        }, {\n          _id: \"5ed0dd60a9225a12882ec270\",\n          name: \"GER Pillar\",\n          desc: \"Complete a GER-coded module\",\n          tag: \"r_ger_pillar\"\n        }, {\n          _id: \"5ed0dd6ca9225a12882ec271\",\n          name: \"GES Pillar\",\n          desc: \"Complete a GES-coded module\",\n          tag: \"r_ges_pillar\"\n        }, {\n          _id: \"5ed0dd76a9225a12882ec272\",\n          name: \"GET Pillar\",\n          desc: \"Complete a GET-coded module\",\n          tag: \"r_get_pillar\"\n        }]\n      }\n    };\n    this.updateSelectedModules = this.updateSelectedModules.bind(this);\n  } // componentDidMount() {\n  //     // Call our fetch function below once the component mounts\n  //   this.callBackendAPI()\n  //     .then(res => this.setState({ data: res.express }))\n  //     .catch(err => console.log(err));\n  // }\n  //   // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n  // callBackendAPI = async () => {\n  //   const response = await fetch('http://localhost:5000/rules/r_cs_degree');\n  //   const body = await response.json();\n  //   if (response.status !== 200) {\n  //     throw Error(body.message) \n  //   }\n  //   return body;\n  // };\n\n\n  updateSelectedModules(object) {\n    object.location = this.props.year + ' ' + this.props.semester;\n    let newSelectedModules = this.selectedModules;\n\n    if (!newSelectedModules.includes(object)) {\n      newSelectedModules.push(object);\n      this.setState({\n        selectedModules: newSelectedModules\n      }); // setDisplayCard(generateCards);\n    }\n  } //  CUSTOM HOOK\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(DndProvider, {\n      backend: Backend,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(YearDisplay, {\n      year: \"Year 1\",\n      updateSelectedModules: this.updateSelectedModules,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 16\n      }\n    }), /*#__PURE__*/React.createElement(Board, {\n      id: \"board-1\",\n      className: \"board\",\n      year: \"Year 3\",\n      semester: \"Semester 1\",\n      generateModuleCards: this.generateModuleCards,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Board, {\n      id: \"board-1\",\n      className: \"board\",\n      year: \"Year 4\",\n      semester: \"Semester 1\",\n      generateModuleCards: this.generateModuleCards,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      onClick: () => {\n        this.setState({\n          callBackendNow: true\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }\n    }, \"Evaluate\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Rules, {\n      rules: this.state.rules,\n      callBackendNow: this.state.callBackendNow,\n      modulesSelected: this.state.modulesSelected,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default ModulePlannerPageTemp;","map":{"version":3,"sources":["/Users/frisciliasultan/Documents/Orbital/client/src/Pages/Module Planner Page/ModulePlannerPageTemp.jsx"],"names":["React","Board","Rules","YearDisplay","Button","Card","HTML5Backend","Backend","DndProvider","ModulePlannerPageTemp","Component","constructor","props","state","selectedModules","isLoading","modulesSelected","rules","_id","name","desc","tag","sub","updateSelectedModules","bind","object","location","year","semester","newSelectedModules","includes","push","setState","render","generateModuleCards","callBackendNow"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Board from './Board';\nimport Rules from './Rules';\nimport YearDisplay from './YearDisplay';\nimport './plannertemp.css';\nimport { Button, Card } from 'react-bootstrap';\nimport { HTML5Backend as Backend } from 'react-dnd-html5-backend';\nimport { DndProvider } from 'react-dnd';\n\n\nclass ModulePlannerPageTemp extends React.Component {\n   constructor(props) {\n       super(props);\n       this.state = {   selectedModules: [],\n                        isLoading: false,\n                        modulesSelected: ['MA1101R'],\n                        rules: {_id:\"5ed0d9a9a9225a12882ec26d\",\n                                name:\"Degree Requirement\",\n                                desc:\"Complete at least 20MCs worth of General Education Modules, with at least 1 module in each of the GEH, GEQ, GER, GES and GET pillars\",\n                                tag:\"r_ulr\",\n                                sub:[\n                                        {_id:\"5ed0dd49a9225a12882ec26e\",\n                                        name:\"University Level Requirement\",\n                                        desc:\"Complete a GEH-coded module\",\n                                        tag:\"r_geh_pillar\",\n                                        sub: [\n                                                {_id:\"5ed0dd54a9225a12882ec26f\",\n                                                name:\"GEQ Pillar\",\n                                                desc:\"Complete a GEQ-coded module\",\n                                                tag:\"r_geq_pillar\"},\n                                                \n                                                {_id:\"5ed0dd60a9225a12882ec270\",\n                                                name:\"GER Pillar\",\n                                                desc:\"Complete a GER-coded module\",\n                                                tag:\"r_ger_pillar\"},\n                                                \n                                                {_id:\"5ed0dd6ca9225a12882ec271\",\n                                                name:\"GES Pillar\",\n                                                desc:\"Complete a GES-coded module\",\n                                                tag:\"r_ges_pillar\"},\n                                                \n                                                {_id:\"5ed0dd76a9225a12882ec272\",\n                                                name:\"GET Pillar\",\n                                                desc:\"Complete a GET-coded module\",\n                                                tag:\"r_get_pillar\"}\n                                            ]},\n                                        \n                                        {_id:\"5ed0dd54a9225a12882ec26f\",\n                                        name:\"GEQ Pillar\",\n                                        desc:\"Complete a GEQ-coded module\",\n                                        tag:\"r_geq_pillar\"},\n                                        \n                                        {_id:\"5ed0dd60a9225a12882ec270\",\n                                        name:\"GER Pillar\",\n                                        desc:\"Complete a GER-coded module\",\n                                        tag:\"r_ger_pillar\"},\n                                        \n                                        {_id:\"5ed0dd6ca9225a12882ec271\",\n                                        name:\"GES Pillar\",\n                                        desc:\"Complete a GES-coded module\",\n                                        tag:\"r_ges_pillar\"},\n                                        \n                                        {_id:\"5ed0dd76a9225a12882ec272\",\n                                        name:\"GET Pillar\",\n                                        desc:\"Complete a GET-coded module\",\n                                        tag:\"r_get_pillar\"}\n                                    ]\n\n                                },\n        }\n        this.updateSelectedModules = this.updateSelectedModules.bind(this);\n\n    }\n\n    // componentDidMount() {\n    //     // Call our fetch function below once the component mounts\n    //   this.callBackendAPI()\n    //     .then(res => this.setState({ data: res.express }))\n    //     .catch(err => console.log(err));\n    // }\n    //   // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n    // callBackendAPI = async () => {\n    //   const response = await fetch('http://localhost:5000/rules/r_cs_degree');\n    //   const body = await response.json();\n    \n    //   if (response.status !== 200) {\n    //     throw Error(body.message) \n    //   }\n    //   return body;\n    // };\n\n    updateSelectedModules(object) {\n        object.location = this.props.year + ' ' + this.props.semester;\n         let newSelectedModules = this.selectedModules;\n         if (!newSelectedModules.includes(object)) {\n             newSelectedModules.push(object);\n             this.setState({selectedModules: newSelectedModules});\n            // setDisplayCard(generateCards);\n         }\n \n     }\n    \n    //  CUSTOM HOOK\n    \n    \n    render () {\n        return (\n            <DndProvider backend={Backend}>\n\n               <YearDisplay\n                        year=\"Year 1\"\n                        updateSelectedModules={this.updateSelectedModules} />\n                \n\n                <Board \n                        id=\"board-1\"\n                        className=\"board\"\n                        year=\"Year 3\"\n                        semester=\"Semester 1\"\n                        generateModuleCards={this.generateModuleCards}>\n                    \n                </Board>\n\n                <Board \n                        id=\"board-1\"\n                        className=\"board\"\n                        year=\"Year 4\"\n                        semester=\"Semester 1\"\n                        generateModuleCards={this.generateModuleCards}>\n                    \n                </Board>\n                <br/>\n\n                <Button onClick={() => {this.setState({callBackendNow: true})}}>Evaluate</Button>\n                <br/>\n                <br/>\n\n                <Card>\n                    <Rules\n                        rules={this.state.rules}\n                        callBackendNow={this.state.callBackendNow}\n                        modulesSelected={this.state.modulesSelected}/>\n                </Card>\n                <br/>\n                \n\n           </DndProvider>\n        )\n    }\n}\n\nexport default ModulePlannerPageTemp;\n"]},"metadata":{},"sourceType":"module"}