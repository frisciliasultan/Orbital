{"ast":null,"code":"var _jsxFileName = \"/Users/frisciliasultan/Documents/Orbitalhosting/src/utils/commonFunctions.js\";\nimport React from \"react\";\nimport { Select } from \"antd\";\nimport { Table } from \"../Pages/Module Selection Page/Module Table\";\nimport YearDisplay from \"../Pages/Module Planner Page/YearDisplay\";\nconst {\n  Option\n} = Select;\nexport const generateOptions = (optionList, category, object) => {\n  if (optionList) {\n    if (category === \"grade\") {\n      return optionList.map(option => {\n        return /*#__PURE__*/React.createElement(Option, {\n          value: option.grade,\n          object: object,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 21\n          }\n        }, option.grade);\n      });\n    } else if (category === 'faculty') {\n      return optionList.map((option, index) => {\n        return /*#__PURE__*/React.createElement(Option, {\n          key: option.name,\n          value: option.name,\n          name: category,\n          selectedindex: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 25\n          }\n        }, option.name);\n      });\n    } else if (category === 'major' || category === \"specialisation\" || category === \"secondMajor\" || category === \"minor\" || category === \"residence\") {\n      return optionList.map((option, index) => {\n        return /*#__PURE__*/React.createElement(Option, {\n          key: option.fullName,\n          value: option.fullName,\n          name: category,\n          selectedindex: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 21\n          }\n        }, option.fullName);\n      });\n    } else if (category === 'matriculationYear') {\n      return optionList.map(option => {\n        return /*#__PURE__*/React.createElement(Option, {\n          key: option.substr(3, 9),\n          value: option.substr(3, 9),\n          name: category,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 21\n          }\n        }, option);\n      });\n    } else if (category === 'targetGradYear') {\n      return optionList.map(option => {\n        return /*#__PURE__*/React.createElement(Option, {\n          key: option.substr(6, 9),\n          value: option.substr(6, 9),\n          name: category,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 21\n          }\n        }, option);\n      });\n    }\n\n    return optionList.map(option => {\n      return /*#__PURE__*/React.createElement(Option, {\n        key: option,\n        value: option,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }\n      }, option);\n    });\n  }\n};\nexport const handleSaveClick = props => {\n  const userData = {\n    modPlan: props.modplan.selectedModules,\n    residential: props.settings.userInfo.residential,\n    faculty: props.settings.userInfo.faculty,\n    facIndex: props.settings.userInfo.facIndex,\n    major: props.settings.userInfo.major,\n    majorIndex: props.settings.userInfo.majorIndex,\n    specialisation: props.settings.userInfo.specialisation,\n    matriculationYear: props.settings.userInfo.matriculationYear,\n    targetGradYear: props.settings.userInfo.targetGradYear,\n    cap: props.cap.cap,\n    targetCap: props.cap.targetCap\n  };\n  props.updateSettings(userData);\n}; // generate Year Cards in Module Planner Page / Tables in Mod Info Page\n\nexport const generateObject = (matriYear, gradYear, category, module, props) => {\n  const matYear = Number(matriYear.substr(0, 4));\n  const noOfYear = Number(gradYear.substr(5, 4)) - matYear;\n  let display = [];\n\n  if (category === \"yearDisplay\") {\n    for (let i = 1; i <= noOfYear; i++) {\n      const start = matYear + i - 1;\n      display.push({\n        year: `Year ${i}`,\n        AY: `${start}/${start + 1}`\n      });\n    }\n\n    return display.map(object => {\n      return /*#__PURE__*/React.createElement(YearDisplay, {\n        year: object.year,\n        AY: object.AY,\n        module: module,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }\n      });\n    });\n  } else {\n    let sem1;\n    let sem2;\n\n    for (let i = 1; i < noOfYear * 2; i += 2) {\n      const year = Math.ceil(i / 2);\n      sem1 = `Year ${year} Semester 1`;\n      sem2 = `Year ${year} Semester 2`;\n      display[i - 1] = sem1;\n      display[i] = sem2;\n    }\n\n    if (category === \"semesterOptions\") {\n      return display;\n    } else if (category === \"tables\") {\n      return display.map(sem => {\n        const status = props ? checkIsPast(sem, props.userSemester, props.currentSemester, props.month) : undefined;\n        return /*#__PURE__*/React.createElement(Table, {\n          title: sem,\n          module: module,\n          category: props ? \"capTable\" : category,\n          handleGradeClick: props.handleGradeClick,\n          handleCheckboxChange: props.handleCheckboxChange,\n          isPast: status,\n          gradeList: props.gradeList,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 25\n          }\n        });\n      });\n    }\n  }\n}; //Eg. Y2S1 => 3 (third sem)\n\nexport const convertSemToNumber = sem => {\n  if (sem.substr(7) === \"Semester 1\") {\n    return sem.substr(5, 1) * 2 - 1;\n  } else {\n    return sem.substr(5, 1) * 2;\n  }\n}; //check if the semester chosen is in the past or future\n\nexport const checkIsPast = (curr, user, currentSemester, month) => {\n  const currSem = convertSemToNumber(curr);\n\n  if (user > currSem) {\n    return true;\n  } else if (user === currSem) {\n    if (currentSemester === \"Semester 1\" && month === 12 || currentSemester === \"Semester 2\" && month >= 6) {\n      return true;\n    }\n  } else {\n    return false;\n  }\n};","map":{"version":3,"sources":["/Users/frisciliasultan/Documents/Orbitalhosting/src/utils/commonFunctions.js"],"names":["React","Select","Table","YearDisplay","Option","generateOptions","optionList","category","object","map","option","grade","index","name","fullName","substr","handleSaveClick","props","userData","modPlan","modplan","selectedModules","residential","settings","userInfo","faculty","facIndex","major","majorIndex","specialisation","matriculationYear","targetGradYear","cap","targetCap","updateSettings","generateObject","matriYear","gradYear","module","matYear","Number","noOfYear","display","i","start","push","year","AY","sem1","sem2","Math","ceil","sem","status","checkIsPast","userSemester","currentSemester","month","undefined","handleGradeClick","handleCheckboxChange","gradeList","convertSemToNumber","curr","user","currSem"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Select } from \"antd\";\nimport { Table } from \"../Pages/Module Selection Page/Module Table\";\nimport  YearDisplay  from \"../Pages/Module Planner Page/YearDisplay\";\n\nconst { Option } = Select;\n\nexport const generateOptions = (optionList, category, object) => {\n    if(optionList) {\n        if(category === \"grade\") {\n            return optionList.map((option) => {\n                return (\n                    <Option value={option.grade} object={object}>\n                    {option.grade}\n                    </Option>\n                );\n            })\n        } else if (category === 'faculty') {\n                return optionList.map((option, index) => {\n                    return (\n                        <Option \n                            key={option.name} \n                            value={option.name}\n                            name={category}\n                            selectedindex={index}>\n                        {option.name}\n                        </Option>\n                    );\n                })\n        } else if (category === 'major' || category === \"specialisation\" \n                    || category === \"secondMajor\" || category === \"minor\" \n                        || category === \"residence\"\n                        ) {\n            return optionList.map((option, index) => {\n                return (\n                    <Option \n                        key={option.fullName} \n                        value={option.fullName}\n                        name={category}\n                        selectedindex={index}>\n                    {option.fullName}\n                    </Option>\n                );\n            })\n        } else if (category === 'matriculationYear') {\n            return optionList.map((option) => {\n                return (\n                    <Option \n                        key={option.substr(3,9)} \n                        value={option.substr(3,9)}\n                        name={category}>\n                    {option}\n                    </Option>\n                );\n            })\n        } else if (category === 'targetGradYear') {\n            return optionList.map((option) => {\n                return (\n                    <Option \n                        key={option.substr(6,9)} \n                        value={option.substr(6,9)}\n                        name={category}>\n                    {option}\n                    </Option>\n                );\n            })\n        } \n    \n        return optionList.map((option) => {\n            return (\n                <Option key={option} value={option}>\n                {option}\n                </Option>\n            );\n        });\n    }\n}\n\nexport const handleSaveClick = (props) => {\n    const userData = {\n        modPlan: props.modplan.selectedModules,\n        residential: props.settings.userInfo.residential,\n        faculty: props.settings.userInfo.faculty,\n        facIndex: props.settings.userInfo.facIndex,\n        major: props.settings.userInfo.major,\n        majorIndex: props.settings.userInfo.majorIndex,\n        specialisation: props.settings.userInfo.specialisation,\n        matriculationYear: props.settings.userInfo.matriculationYear,\n        targetGradYear: props.settings.userInfo.targetGradYear,\n        cap: props.cap.cap,\n        targetCap: props.cap.targetCap\n    }\n\n    props.updateSettings(userData);\n}\n\n// generate Year Cards in Module Planner Page / Tables in Mod Info Page\nexport const generateObject = (matriYear, gradYear, category, module, props) => {\n    const matYear = Number(matriYear.substr(0, 4));\n    const noOfYear = Number(gradYear.substr(5, 4)) - matYear;\n    let display = [];\n\n    if(category === \"yearDisplay\") {\n        for(let i = 1; i <= noOfYear; i++) {\n            const start = matYear + i - 1;\n            display.push({\n                year: `Year ${i}`,\n                AY: `${start}/${start + 1}`\n            })\n        }\n        \n        return display.map((object) => {\n                return (\n                    <YearDisplay\n                        year={object.year}\n                        AY={object.AY}\n                        module={module} />\n                )\n            })\n    } else {\n        let sem1;\n        let sem2;\n\n        for(let i = 1; i < (noOfYear * 2); i += 2) {\n            const year = Math.ceil(i / 2);\n            sem1 = `Year ${year} Semester 1`;\n            sem2 = `Year ${year} Semester 2`;\n            display[i - 1] = sem1;\n            display[i] = sem2;\n        }\n        \n        if(category === \"semesterOptions\") {\n            return display;\n        } else if(category === \"tables\") {\n            return display.map((sem) => {\n                const status = props ? checkIsPast(sem, props.userSemester, props.currentSemester, props.month) : undefined;\n                return (\n                        <Table\n                            title={sem}\n                            module={module}\n                            category={props ? \"capTable\" : category}\n                            handleGradeClick={props.handleGradeClick}\n                            handleCheckboxChange={props.handleCheckboxChange}\n                            isPast={status}\n                            gradeList={props.gradeList}/>\n                )\n            })\n        } \n\n        }\n    } \n\n     //Eg. Y2S1 => 3 (third sem)\n    export const convertSemToNumber = (sem) => {\n        if(sem.substr(7) === \"Semester 1\") {\n            return sem.substr(5,1) * 2 - 1;\n        } else {\n            return sem.substr(5,1) * 2;\n        }\n    }\n\n    //check if the semester chosen is in the past or future\n    export const checkIsPast = (curr, user, currentSemester, month) => {\n        const currSem = convertSemToNumber(curr);\n        if (user > currSem) {\n            return true;\n        } else if (user === currSem) {\n            if ((currentSemester === \"Semester 1\" && month === 12) \n                || (currentSemester === \"Semester 2\" && month >= 6)) {\n                    return true;\n            }\n        } else {\n            return false;\n        }\n    };"]},"metadata":{},"sourceType":"module"}