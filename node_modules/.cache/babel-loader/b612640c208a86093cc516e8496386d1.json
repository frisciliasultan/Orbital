{"ast":null,"code":"var _jsxFileName = \"/Users/frisciliasultan/Documents/Orbitalhosting/src/Settings/AccountSettings.jsx\";\nimport React, { useState, useReducer } from \"react\";\nimport SideNav from \"./SideNav\";\nimport { Input } from 'antd';\nimport { UserOutlined } from '@ant-design/icons';\nimport { Card } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport RegistrationForm from \"./ChangePassword\";\nimport { deleteUser } from \"../actions/authActions\";\n\nconst AccountSettings = props => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [changePassword, setChangePassword] = useState(false);\n  const [userInput, setUserInput] = useReducer((state, newState) => ({ ...state,\n    ...newState\n  }), {\n    username: props.auth.user.name,\n    email: props.auth.user.email\n  });\n\n  const presentButton = () => {\n    if (!isEditing) {\n      return /*#__PURE__*/React.createElement(\"button\", {\n        className: \"button settings-button\",\n        onClick: () => setIsEditing(true),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 20\n        }\n      }, \"Edit Settings\");\n    } else {\n      return /*#__PURE__*/React.createElement(\"button\", {\n        className: \"button settings-button\",\n        onClick: () => {\n          handleSubmit();\n          setIsEditing(false);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 20\n        }\n      }, \"Save Settings\");\n    }\n  };\n\n  const handleSubmit = () => {};\n\n  const renderContent = name => {\n    if (isEditing) {\n      if (name === \"username\") {\n        return /*#__PURE__*/React.createElement(Input, {\n          placeholder: \"Enter username\",\n          type: \"text\",\n          name: name,\n          prefix: /*#__PURE__*/React.createElement(UserOutlined, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 34\n            }\n          }),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }\n        });\n      } else {\n        return /*#__PURE__*/React.createElement(Input, {\n          placeholder: `Enter ${name}`,\n          type: \"email\",\n          name: name,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 21\n          }\n        });\n      }\n    } else {\n      return userInput[name];\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"settings\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SideNav, {\n    active: \"account\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    className: \"container\",\n    id: \"degree-settings\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }, \"Account Settings\"), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table table-hover settings-table\",\n    id: \"degree-acad-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 37\n    }\n  }, \"Username :\")), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 33\n    }\n  }, renderContent(\"username\"))), !props.auth.socialLogin && /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 58\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 37\n    }\n  }, \"Email :\")), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 33\n    }\n  }, renderContent(\"email\"))))), /*#__PURE__*/React.createElement(RegistrationForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  }), presentButton(), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button settings-button\",\n    onClick: () => setChangePassword(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }, \"Change Password\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button settings-button\",\n    id: \"delete\",\n    onClick: props.deleteUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }\n  }, \"Delete account\")));\n};\n\nAccountSettings.propType = {\n  deleteUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProp = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProp, {\n  deleteUser\n})(AccountSettings);","map":{"version":3,"sources":["/Users/frisciliasultan/Documents/Orbitalhosting/src/Settings/AccountSettings.jsx"],"names":["React","useState","useReducer","SideNav","Input","UserOutlined","Card","connect","PropTypes","RegistrationForm","deleteUser","AccountSettings","props","isEditing","setIsEditing","changePassword","setChangePassword","userInput","setUserInput","state","newState","username","auth","user","name","email","presentButton","handleSubmit","renderContent","socialLogin","propType","func","isRequired","object","mapStateToProp"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,KAAT,QAAsB,MAAtB;AACA,SAASC,YAAT,QAA6B,mBAA7B;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,gBAAP,MAA6B,kBAA7B;AACA,SAASC,UAAT,QAA2B,wBAA3B;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACc,cAAD,EAAiBC,iBAAjB,IAAsCf,QAAQ,CAAC,KAAD,CAApD;AAEA,QAAM,CAACgB,SAAD,EAAYC,YAAZ,IAA4BhB,UAAU,CACxC,CAACiB,KAAD,EAAQC,QAAR,MAAsB,EAAC,GAAGD,KAAJ;AAAW,OAAGC;AAAd,GAAtB,CADwC,EAExC;AACEC,IAAAA,QAAQ,EAAET,KAAK,CAACU,IAAN,CAAWC,IAAX,CAAgBC,IAD5B;AAEEC,IAAAA,KAAK,EAAEb,KAAK,CAACU,IAAN,CAAWC,IAAX,CAAgBE;AAFzB,GAFwC,CAA5C;;AAQA,QAAMC,aAAa,GAAG,MAAM;AACtB,QAAG,CAACb,SAAJ,EAAe;AACb,0BAAO;AACL,QAAA,SAAS,EAAC,wBADL;AAEL,QAAA,OAAO,EAAE,MAAMC,YAAY,CAAC,IAAD,CAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAP;AAKD,KAND,MAMO;AACL,0BAAO;AACL,QAAA,SAAS,EAAC,wBADL;AAEL,QAAA,OAAO,EAAE,MAAM;AACba,UAAAA,YAAY;AACZb,UAAAA,YAAY,CAAC,KAAD,CAAZ;AAAqB,SAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAP;AAOD;AACJ,GAhBH;;AAkBA,QAAMa,YAAY,GAAG,MAAM,CAE1B,CAFD;;AAIA,QAAMC,aAAa,GAAIJ,IAAD,IAAU;AAC5B,QAAGX,SAAH,EAAc;AACV,UAAGW,IAAI,KAAK,UAAZ,EAAwB;AACpB,4BACI,oBAAC,KAAD;AACK,UAAA,WAAW,EAAC,gBADjB;AAEK,UAAA,IAAI,EAAC,MAFV;AAGK,UAAA,IAAI,EAAEA,IAHX;AAIK,UAAA,MAAM,eAAE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,OAPD,MAOO;AACH,4BACI,oBAAC,KAAD;AACK,UAAA,WAAW,EAAG,SAAQA,IAAK,EADhC;AAEK,UAAA,IAAI,EAAC,OAFV;AAGK,UAAA,IAAI,EAAEA,IAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;AAEJ,KAhBD,MAgBO;AACH,aAAOP,SAAS,CAACO,IAAD,CAAhB;AACH;AACJ,GApBD;;AAqBA,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AAAS,IAAA,MAAM,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEQ,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,WAAhB;AAA4B,IAAA,EAAE,EAAC,iBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAII;AAAO,IAAA,SAAS,EAAC,kCAAjB;AAAoD,IAAA,EAAE,EAAC,mBAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,CADJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKI,aAAa,CAAC,UAAD,CADlB,CALJ,CADJ,EAWK,CAAChB,KAAK,CAACU,IAAN,CAAWO,WAAZ,iBAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,CADyB,eAKzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,aAAa,CAAC,OAAD,CADlB,CALyB,CAXjC,CADJ,CAJJ,eA4BI,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA5BJ,EA6BKF,aAAa,EA7BlB,eA8BI;AACI,IAAA,SAAS,EAAC,wBADd;AAEI,IAAA,OAAO,EAAE,MAAMV,iBAAiB,CAAC,IAAD,CAFpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBA9BJ,eAoCI;AACI,IAAA,SAAS,EAAC,wBADd;AACuC,IAAA,EAAE,EAAC,QAD1C;AAEI,IAAA,OAAO,EAAEJ,KAAK,CAACF,UAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBApCJ,CAFR,CADJ;AA+CH,CAtGD;;AAwGAC,eAAe,CAACmB,QAAhB,GAA2B;AACvBpB,EAAAA,UAAU,EAAEF,SAAS,CAACuB,IAAV,CAAeC,UADJ;AAEvBV,EAAAA,IAAI,EAAEd,SAAS,CAACyB,MAAV,CAAiBD;AAFA,CAA3B;;AAKA,MAAME,cAAc,GAAGf,KAAK,KAAK;AAC7BG,EAAAA,IAAI,EAAEH,KAAK,CAACG;AADiB,CAAL,CAA5B;;AAIA,eAAef,OAAO,CAAC2B,cAAD,EAAiB;AAAExB,EAAAA;AAAF,CAAjB,CAAP,CAAyCC,eAAzC,CAAf","sourcesContent":["import React, { useState, useReducer } from \"react\";\nimport SideNav from \"./SideNav\";\nimport { Input } from 'antd';\nimport { UserOutlined } from '@ant-design/icons';\nimport { Card } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport RegistrationForm from \"./ChangePassword\";\nimport { deleteUser } from \"../actions/authActions\";\n\nconst AccountSettings = (props) => {\n    const [isEditing, setIsEditing] = useState(false);\n    const [changePassword, setChangePassword] = useState(false);\n\n    const [userInput, setUserInput] = useReducer(\n        (state, newState) => ({...state, ...newState}), \n        {\n          username: props.auth.user.name,\n          email: props.auth.user.email,\n        }\n      );\n\n    const presentButton = () => {\n          if(!isEditing) {\n            return <button \n              className=\"button settings-button\" \n              onClick={() => setIsEditing(true)}>\n                  Edit Settings\n            </button>\n          } else {\n            return <button \n              className=\"button settings-button\" \n              onClick={() => {\n                handleSubmit();\n                setIsEditing(false);}}>\n                Save Settings\n            </button>\n          }\n      }\n    \n    const handleSubmit = () => {\n\n    }\n\n    const renderContent = (name) => {\n        if(isEditing) {\n            if(name === \"username\") {\n                return (\n                    <Input \n                         placeholder=\"Enter username\"\n                         type=\"text\"\n                         name={name}\n                         prefix={<UserOutlined />}/>) \n            } else {\n                return (\n                    <Input \n                         placeholder={`Enter ${name}`}\n                         type=\"email\"\n                         name={name}/>) \n            }\n                \n        } else {\n            return userInput[name];\n        }\n    }\n    return (\n        <div className=\"settings\">\n            <SideNav active=\"account\"/>\n                <Card className=\"container\" id=\"degree-settings\">\n                    <Card.Header>\n                        Account Settings\n                    </Card.Header>\n                    <table className=\"table table-hover settings-table\" id=\"degree-acad-table\">\n                        <tbody>\n                            <tr>\n                                <td>\n                                    <label>Username :</label>\n                                </td>\n\n                                <td>\n                                    {renderContent(\"username\")}\n                                </td>\n                            </tr>\n\n                            {!props.auth.socialLogin && (<tr>\n                                <td>\n                                    <label>Email :</label>\n                                </td>\n\n                                <td>\n                                    {renderContent(\"email\")}\n                                </td>\n                            </tr>)}\n                        </tbody>\n                    </table>\n                    \n                    <RegistrationForm/>\n                    {presentButton()}\n                    <button \n                        className=\"button settings-button\" \n                        onClick={() => setChangePassword(true)}>\n                            Change Password\n                    </button>\n\n                    <button \n                        className=\"button settings-button\" id=\"delete\" \n                        onClick={props.deleteUser}>\n                            Delete account\n                    </button>\n                </Card>\n        </div>\n    )\n}\n\nAccountSettings.propType = {\n    deleteUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProp = state => ({\n    auth: state.auth\n});\n\nexport default connect(mapStateToProp, { deleteUser }) (AccountSettings);"]},"metadata":{},"sourceType":"module"}