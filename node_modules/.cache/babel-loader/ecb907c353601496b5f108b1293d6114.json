{"ast":null,"code":"import axios from 'axios';\nimport { SET_BOARD_FILLED, SET_MODULES, SET_RULES, SET_CALL_BACKEND_NOW, SET_SELECTED_MODULES, SET_MODULE_LOCATION, SET_CURRRENT_SEMESTER, CLEAN_UP_MODPLAN } from './types';\nimport setAuthToken from '../utils/setAuthToken';\nexport const setIsBoardFilled = () => {\n  return {\n    type: SET_BOARD_FILLED\n  };\n};\nexport const callBackendAPI = (backend, ulrTag, degreeTag) => dispatch => {\n  if (backend === 'NUSMods') {\n    setAuthToken(false);\n    axios.get('https://api.nusmods.com/v2/2018-2019/moduleInfo.json').then(res => dispatch(setModules(res.data))).then(setAuthToken(localStorage.jwtToken)).catch(err => {\n      console.log(err);\n    });\n  } else {\n    axios.all([axios.get('http://172.19.162.53:3000/rules/' + ulrTag), axios.get('http://172.19.162.53:3000/rules/' + degreeTag)]).then(resArr => {\n      dispatch(setRules([resArr[0].data, resArr[1].data]));\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n}; //AXIOS CALL BUT IT DOESNT WORK -- FOR FUTURE REFERENCE\n// export const callBackendAPI = () => dispatch => {\n//     const headers = { headers: {'accept': 'application/json'}}\n//     axios.all([\n//         axios.get('https://api.nusmods.com/v2/2018-2019/moduleInfo.json', headers),\n//         axios.get('http://172.19.162.53:3000/rules/r_cs_degree')\n//     ])\n//     .then(resArr => {\n//         dispatch(setModules(resArr[0]));\n//         dispatch(setRules(resArr[1].data));\n//     }) \n//     .catch(err => {\n//         console.log(err)\n//     });\n// }\n\nexport const setModules = modules => {\n  return {\n    type: SET_MODULES,\n    payload: modules\n  };\n};\nexport const setRules = rules => {\n  return {\n    type: SET_RULES,\n    payload: rules\n  };\n};\nexport const setCallBackendNow = status => {\n  return {\n    type: SET_CALL_BACKEND_NOW,\n    payload: status\n  };\n};\nexport const setSelectedModules = (object, selectedModules) => {\n  return {\n    type: SET_SELECTED_MODULES,\n    moduleAdded: object,\n    currentSelectedModules: selectedModules\n  };\n};\nexport const setModuleLocation = (item, location, AY, selectedModules) => {\n  return {\n    type: SET_MODULE_LOCATION,\n    item,\n    location,\n    AY,\n    modules: selectedModules\n  };\n};\nexport const setCurrentSemester = (AY, semester) => {\n  return {\n    type: SET_CURRRENT_SEMESTER,\n    AY,\n    semester\n  };\n};\nexport const cleanUpModPlan = () => {\n  return {\n    type: CLEAN_UP_MODPLAN\n  };\n};","map":{"version":3,"sources":["/Users/frisciliasultan/Documents/Orbital/client/src/actions/modplanActions.js"],"names":["axios","SET_BOARD_FILLED","SET_MODULES","SET_RULES","SET_CALL_BACKEND_NOW","SET_SELECTED_MODULES","SET_MODULE_LOCATION","SET_CURRRENT_SEMESTER","CLEAN_UP_MODPLAN","setAuthToken","setIsBoardFilled","type","callBackendAPI","backend","ulrTag","degreeTag","dispatch","get","then","res","setModules","data","localStorage","jwtToken","catch","err","console","log","all","resArr","setRules","modules","payload","rules","setCallBackendNow","status","setSelectedModules","object","selectedModules","moduleAdded","currentSelectedModules","setModuleLocation","item","location","AY","setCurrentSemester","semester","cleanUpModPlan"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport {\n    SET_BOARD_FILLED,\n    SET_MODULES,\n    SET_RULES,\n    SET_CALL_BACKEND_NOW,\n    SET_SELECTED_MODULES,\n    SET_MODULE_LOCATION,\n    SET_CURRRENT_SEMESTER,\n    CLEAN_UP_MODPLAN\n} from './types';\nimport setAuthToken from '../utils/setAuthToken';\n\n\n\nexport const setIsBoardFilled = () => {\n    return {\n        type: SET_BOARD_FILLED,\n    }\n}\n\nexport const callBackendAPI = (backend, ulrTag, degreeTag) => dispatch => {\n\n    if(backend === 'NUSMods') {\n        setAuthToken(false);\n\n        axios.get('https://api.nusmods.com/v2/2018-2019/moduleInfo.json' )\n        .then(res => dispatch(setModules(res.data)))\n        .then(setAuthToken(localStorage.jwtToken))\n        .catch(err => {\n            console.log(err)\n        });\n        \n    } else {\n        axios.all([\n            axios.get('http://172.19.162.53:3000/rules/' + ulrTag),\n            axios.get('http://172.19.162.53:3000/rules/' + degreeTag)\n        ])\n        .then(resArr => {\n                dispatch(setRules([resArr[0].data, resArr[1].data]));\n            }) \n        .catch(err => {\n            console.log(err)\n        });\n    }\n    \n}\n\n//AXIOS CALL BUT IT DOESNT WORK -- FOR FUTURE REFERENCE\n// export const callBackendAPI = () => dispatch => {\n\n//     const headers = { headers: {'accept': 'application/json'}}\n//     axios.all([\n//         axios.get('https://api.nusmods.com/v2/2018-2019/moduleInfo.json', headers),\n//         axios.get('http://172.19.162.53:3000/rules/r_cs_degree')\n//     ])\n//     .then(resArr => {\n//         dispatch(setModules(resArr[0]));\n//         dispatch(setRules(resArr[1].data));\n//     }) \n//     .catch(err => {\n//         console.log(err)\n//     });\n// }\n\nexport const setModules = (modules) => {\n    return {\n        type: SET_MODULES,\n        payload: modules\n    }\n}\n\nexport const setRules = (rules) => {\n    return {\n        type: SET_RULES,\n        payload: rules\n    }\n}\n\nexport const setCallBackendNow = (status) => {\n    return {\n        type: SET_CALL_BACKEND_NOW,\n        payload: status\n    }\n}\n\nexport const setSelectedModules = (object, selectedModules) => {\n    return { \n        type: SET_SELECTED_MODULES,\n        moduleAdded: object,\n        currentSelectedModules: selectedModules\n    }\n}\n\nexport const setModuleLocation = (item, location, AY, selectedModules) => {\n    return { \n        type: SET_MODULE_LOCATION,\n        item,\n        location,\n        AY,\n        modules: selectedModules\n    }\n}\n\nexport const setCurrentSemester = (AY, semester) => {\n    return {\n        type: SET_CURRRENT_SEMESTER,\n        AY,\n        semester\n    }\n}\n\nexport const cleanUpModPlan = () => {\n    return { \n        type: CLEAN_UP_MODPLAN\n    }\n}"]},"metadata":{},"sourceType":"module"}