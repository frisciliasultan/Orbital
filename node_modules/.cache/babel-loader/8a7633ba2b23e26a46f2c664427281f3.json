{"ast":null,"code":"var _jsxFileName = \"/Users/frisciliasultan/Documents/Orbital/client/src/Pages/Module Planner Page/AutocompleteText.jsx\";\nimport React from 'react';\nimport \"./AutocompleteText.css\";\nimport PropTypes from 'prop-types';\nimport { connect } from \"react-redux\";\nimport { setSelectedModules } from \"../../actions/modplanActions\";\n\nclass AutoCompleteText extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      suggestions: [],\n      text: ''\n    };\n    this.handleTextChange = this.handleTextChange.bind(this);\n    this.renderSuggestions = this.renderSuggestions.bind(this);\n    this.suggestionsSelected = this.suggestionsSelected.bind(this);\n    this.handleListClick = this.handleListClick.bind(this);\n  }\n\n  handleTextChange(e) {\n    const value = e.target.value;\n    let suggestions = [];\n    const module = this.props.module;\n\n    if (value.length > 0) {\n      const regex = new RegExp(`^${value}`, 'i');\n\n      for (let i = 0; i < module.length; i++) {\n        const moduleCode = module[i].moduleCode;\n\n        if (regex.test(moduleCode)) {\n          suggestions.push(module[i]);\n        }\n      }\n    }\n\n    this.setState(() => ({\n      suggestions,\n      text: value\n    }));\n  }\n\n  handleListClick(object) {\n    const module = { ...object\n    };\n    module.location = this.props.location;\n    this.props.setSelectedModules(module, this.props.modplan.selectedModules);\n    this.setState(() => ({\n      suggestions: []\n    }));\n  }\n\n  renderSuggestions() {\n    const {\n      suggestions\n    } = this.state;\n\n    if (suggestions.length === 0) {\n      return null;\n    }\n\n    return /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, suggestions.map(object => /*#__PURE__*/React.createElement(\"li\", {\n      onClick: () => this.handleListClick(object),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 46\n      }\n    }, `${object.moduleCode}: ${object.title}`)));\n  }\n\n  suggestionsSelected(value) {\n    this.setState(() => ({\n      text: value,\n      suggestions: []\n    }));\n  }\n\n  render() {\n    const {\n      text\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"AutoCompleteText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"autocomplete-input\",\n      value: text,\n      onChange: this.handleTextChange,\n      type: \"text\",\n      placeholder: \"Enter module code\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }), this.renderSuggestions()));\n  }\n\n}\n\nAutoCompleteText.propTypes = {\n  setSelectedModules: PropTypes.func.isRequired,\n  modplan: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  modplan: state.modplan\n});\n\nexport default connect(mapStateToProps, {\n  setSelectedModules\n})(AutoCompleteText);","map":{"version":3,"sources":["/Users/frisciliasultan/Documents/Orbital/client/src/Pages/Module Planner Page/AutocompleteText.jsx"],"names":["React","PropTypes","connect","setSelectedModules","AutoCompleteText","Component","constructor","props","state","suggestions","text","handleTextChange","bind","renderSuggestions","suggestionsSelected","handleListClick","e","value","target","module","length","regex","RegExp","i","moduleCode","test","push","setState","object","location","modplan","selectedModules","map","title","render","propTypes","func","isRequired","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport \"./AutocompleteText.css\";\nimport PropTypes from 'prop-types';\nimport { connect } from \"react-redux\";\nimport { setSelectedModules } from \"../../actions/modplanActions\";\n\nclass AutoCompleteText extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = { suggestions: [],\n                       text: '',\n\n                     };\n        this.handleTextChange = this.handleTextChange.bind(this);\n        this.renderSuggestions = this.renderSuggestions.bind(this);\n        this.suggestionsSelected = this.suggestionsSelected.bind(this);\n        this.handleListClick = this.handleListClick.bind(this);\n    }\n\n    handleTextChange (e) {\n        const value = e.target.value;\n        let suggestions = [];\n        const module = this.props.module;\n        \n        if (value.length > 0) {\n            const regex = new RegExp(`^${value}`, 'i');\n\n            for(let i = 0; i < module.length; i++) {\n                const moduleCode = module[i].moduleCode\n                if(regex.test(moduleCode)) {\n                    suggestions.push(module[i]);\n                }\n            }\n\n        }\n        this.setState(() => ({ suggestions, text: value }));\n    }\n\n    handleListClick(object) {\n        const module = {...object};\n        module.location = this.props.location;\n        this.props.setSelectedModules(module, this.props.modplan.selectedModules)\n        this.setState(() => ({suggestions: []})) \n    }\n\n    renderSuggestions () {\n        const { suggestions } = this.state;\n        if (suggestions.length === 0) {\n            return null;\n        }\n        return (\n            <ul>\n                {suggestions.map((object) => <li onClick={() => this.handleListClick(object)}>{`${object.moduleCode}: ${object.title}`}</li>)}\n            </ul>\n        );\n\n    }\n\n    suggestionsSelected (value) {\n        this.setState(() => ({\n            text: value,\n            suggestions: [],\n        }))\n    }\n\n    render () {\n        const { text } = this.state;\n        return (\n            <div>\n                <div className=\"AutoCompleteText\">\n                <input \n                       className=\"autocomplete-input\"\n                       value={text}\n                       onChange={this.handleTextChange}\n                       type=\"text\"\n                       placeholder=\"Enter module code\" />\n                {this.renderSuggestions()}\n                \n                </div>\n\n                {/* <h1>{this.state.moduleCode}</h1>     */}\n                </div>\n        )\n    }\n}\n\nAutoCompleteText.propTypes = {\n    setSelectedModules: PropTypes.func.isRequired,\n    modplan: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    modplan: state.modplan\n});\n\nexport default connect(mapStateToProps, { setSelectedModules })(AutoCompleteText);"]},"metadata":{},"sourceType":"module"}