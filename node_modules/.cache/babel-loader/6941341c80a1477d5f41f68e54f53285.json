{"ast":null,"code":"var _jsxFileName = \"/Users/frisciliasultan/Documents/Orbitalhosting/src/Settings/Options.js\";\nimport React, { useState } from \"react\";\nimport AutoCompleteText from \"../Pages/Module Planner Page/AutocompleteText\";\nimport { generateOptions } from \"../utils/commonFunctions\";\nimport isEmpty from \"is-empty\";\nimport { Switch, Select } from \"antd\";\nimport DynamicFieldSet from \"./DynamicFieldSet\";\n\nconst Options = props => {\n  const [isOpen, setIsOpen] = useState(isEmpty(props.value) || !props.value ? false : true);\n  const {\n    Option\n  } = Select;\n  let value;\n\n  if (!isEmpty(props.value)) {\n    if (props.name === \"honours\") {\n      value = props.value ? \"With Honours\" : \"Without Honours\";\n    } else if (props.name === \"specialisation\") {\n      value = props.value ? props.value : \"None \";\n    } else if (props.name === \"secondMajors\" || props.name === \"minors\") {\n      props.value.map(object => {\n        if (value) {\n          value += `, ${object.name}`;\n        } else {\n          value = object.name;\n        }\n      });\n    } else {\n      value = props.value.name ? props.value.name : props.value;\n    }\n  } else {\n    value = \"None \";\n  }\n\n  const renderContent = () => {\n    if (props.editing) {\n      if (props.name == \"honours\" || props.hidden && !isOpen) {\n        return value;\n      } else if (!props.hidden) {\n        return /*#__PURE__*/React.createElement(Select, {\n          showSearch: true,\n          onChange: props.handleChange,\n          defaultValue: \"None \",\n          value: value,\n          style: {\n            width: 300\n          },\n          optionFilterProp: \"children\",\n          filterOption: (input, option) => {\n            return option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Option, {\n          key: \"choose\" + props.label,\n          value: \"None \",\n          disabled: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }\n        }, \"Choose \" + props.label), generateOptions(props.optionList, props.name));\n      } else if (isOpen) {\n        if (!isEmpty(props.optionList)) {\n          console.log(props.value);\n          return /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(DynamicFieldSet, {\n            label: props.label,\n            setUserInput: props.setUserInput,\n            optionList: props.optionList,\n            name: props.name,\n            value: props.value,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 21\n            }\n          }));\n        }\n      }\n    } else {\n      return value;\n    }\n  };\n\n  const handleSwitch = () => {\n    if (props.name === \"honours\") {\n      props.setUserInput({\n        major: { ...props.major,\n          honours: !isOpen\n        }\n      });\n    } else {\n      if (isOpen) {\n        if (props.name === \"specialisation\") {\n          props.setUserInput({\n            specialisation: \"None \"\n          });\n        } else {\n          props.setUserInput({\n            [props.name]: []\n          });\n        }\n      }\n    }\n\n    setIsOpen(!isOpen);\n  };\n\n  return /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  }, props.label)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, renderContent()), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }, (props.hidden || props.name === \"honours\") && props.editing ? /*#__PURE__*/React.createElement(Switch, {\n    checked: isOpen,\n    onChange: handleSwitch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 27\n    }\n  }) : null));\n};\n\nexport default Options;","map":{"version":3,"sources":["/Users/frisciliasultan/Documents/Orbitalhosting/src/Settings/Options.js"],"names":["React","useState","AutoCompleteText","generateOptions","isEmpty","Switch","Select","DynamicFieldSet","Options","props","isOpen","setIsOpen","value","Option","name","map","object","renderContent","editing","hidden","handleChange","width","input","option","children","toLowerCase","indexOf","label","optionList","console","log","setUserInput","handleSwitch","major","honours","specialisation"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport AutoCompleteText from \"../Pages/Module Planner Page/AutocompleteText\";\nimport { generateOptions } from \"../utils/commonFunctions\";\nimport isEmpty from \"is-empty\";\nimport { Switch, Select } from \"antd\";\nimport DynamicFieldSet from \"./DynamicFieldSet\";\n\nconst Options = (props) => {\n    const [isOpen, setIsOpen] = useState(isEmpty(props.value) || !props.value ? false : true);\n    const { Option } = Select;\n\n    let value;\n    if (!isEmpty(props.value)) {\n        if(props.name === \"honours\") {\n            value = props.value ? \"With Honours\" : \"Without Honours\"; \n        } else if(props.name === \"specialisation\") {\n            value = props.value ? props.value : \"None \";\n        } else if(props.name === \"secondMajors\" || props.name === \"minors\") {\n            props.value.map((object) => {\n                if(value) {\n                    value += `, ${object.name}`\n                } else {\n                    value = object.name;\n                }\n            })\n        } else {\n            value = props.value.name ? props.value.name : props.value;\n        }\n    } else {\n        value = \"None \";\n    } \n\n    const renderContent = () => {\n        if(props.editing) {\n            if(props.name == \"honours\" || props.hidden && !isOpen) {\n                return value;\n            } else if(!props.hidden) {\n                return (\n                    <Select\n                        showSearch\n                        onChange={props.handleChange}\n                        defaultValue=\"None \"\n                        value={value}\n                        style={{ width: 300 }}\n                        optionFilterProp=\"children\"\n                        filterOption={(input, option) => {\n                            return option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                        }}>\n                        <Option \n                            key={\"choose\" + props.label}\n                            value=\"None \" \n                             disabled>\n                            {\"Choose \" + props.label}\n                        </Option>\n                        {generateOptions(props.optionList, props.name)}\n                    </Select> \n                    ) \n            } else if (isOpen) {\n                if(!isEmpty(props.optionList)) {\n                    console.log(props.value)\n                return (\n                    <div>\n                    <DynamicFieldSet\n                        label={props.label}\n                        setUserInput={props.setUserInput}\n                        optionList={props.optionList}\n                        name={props.name}\n                        value={props.value}/>\n                    </div>\n                )\n                }\n            } \n        } else {\n            return value;\n        }\n    }\n\n    const handleSwitch = () => {\n        if(props.name === \"honours\") {\n            \n            props.setUserInput({major: {...props.major, honours: !isOpen}});\n        } else {\n            if(isOpen) {\n                if(props.name === \"specialisation\") {\n                    props.setUserInput({specialisation: \"None \"});\n                } else {\n                    props.setUserInput({[props.name]: []});\n                }\n            }\n        }\n        setIsOpen(!isOpen);\n    }\n\n    return (\n            <tr>\n                <td>\n                    <label>{props.label}</label>\n                </td>\n\n                <td>\n                    {renderContent()}\n                </td>\n\n                <td>\n                    {(props.hidden || props.name === \"honours\") && props.editing\n                        ? <Switch  \n                            checked={isOpen} \n                            onChange={handleSwitch}/>\n                        : null}\n                </td>\n            </tr>\n    )        \n}\n\nexport default Options;"]},"metadata":{},"sourceType":"module"}