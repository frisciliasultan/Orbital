{"ast":null,"code":"var _jsxFileName = \"/Users/frisciliasultan/Documents/Orbital/client/src/Pages/Module Planner Page/Board.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport AutoCompleteText from './AutocompleteText';\nimport { Card, Button } from 'react-bootstrap';\nimport ModuleCard from './Card';\nimport { ItemTypes } from './itemType';\nimport { useDrop } from 'react-dnd';\n\nfunction Board(props) {\n  const [isTextBoxOpen, setIsTextBoxOpen] = useState(false);\n  const [isBoardFilled, setIsBoardFilled] = useState(false);\n\n  const generateCards = () => {\n    const filtered = selectedModules.filter((object, i) => object.location === props.id);\n\n    if (filtered.length > 0) {\n      console.log('called');\n      setIsBoardFilled(true);\n      filtered.map((object, i) => /*#__PURE__*/React.createElement(ModuleCard, {\n        id: object.moduleCode,\n        location: props.id,\n        className: \"card\",\n        title: `${object.moduleCode}: ${object.title}`,\n        MCs: object.moduleCredit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 14\n        }\n      }));\n    }\n  };\n\n  const [{\n    isOver\n  }, drop] = useDrop({\n    accept: ItemTypes.CARD,\n    drop: (item, monitor) => props.updateModuleLocation(item, props.id),\n    collect: monitor => ({\n      isOver: !!monitor.isOver()\n    })\n  });\n\n  function handleButtonClick() {\n    setIsTextBoxOpen(!isTextBoxOpen);\n  }\n\n  const selectedModules = props.selectedModules;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, props.semester), /*#__PURE__*/React.createElement(\"div\", {\n    ref: drop,\n    id: props.id,\n    style: {\n      width: '20rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '165px',\n      height: !isBoardFilled && '59px',\n      outline: isBoardFilled ? 'none' : '1px dotted'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, isBoardFilled ? generateCards() : 'Drop module here'), isTextBoxOpen && /*#__PURE__*/React.createElement(AutoCompleteText, {\n    location: props.id,\n    updateSelectedModules: props.updateSelectedModules,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleButtonClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, \"Add Module\")));\n}\n\nexport default Board;","map":{"version":3,"sources":["/Users/frisciliasultan/Documents/Orbital/client/src/Pages/Module Planner Page/Board.jsx"],"names":["React","useState","useEffect","AutoCompleteText","Card","Button","ModuleCard","ItemTypes","useDrop","Board","props","isTextBoxOpen","setIsTextBoxOpen","isBoardFilled","setIsBoardFilled","generateCards","filtered","selectedModules","filter","object","i","location","id","length","console","log","map","moduleCode","title","moduleCredit","isOver","drop","accept","CARD","item","monitor","updateModuleLocation","collect","handleButtonClick","semester","width","height","outline","updateSelectedModules"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport AutoCompleteText from './AutocompleteText';\nimport { Card, Button } from 'react-bootstrap';\nimport ModuleCard from './Card';\nimport { ItemTypes } from './itemType';\nimport { useDrop } from 'react-dnd';\n\n\n\n\n\nfunction Board (props) {\n    const [isTextBoxOpen, setIsTextBoxOpen] = useState(false);\n    const [isBoardFilled, setIsBoardFilled] = useState(false);\n    const generateCards = () => {\n        const filtered = selectedModules.filter((object, i) => object.location === props.id);\n        if(filtered.length > 0){\n            console.log('called');\n            setIsBoardFilled(true);\n            filtered.map((object, i) => \n            (<ModuleCard\n                id={object.moduleCode}\n                location={props.id}\n                className=\"card\"\n                title={`${object.moduleCode}: ${object.title}`}\n                MCs={object.moduleCredit}/>));\n        }\n        }\n\n    const [{ isOver }, drop] = useDrop({\n            accept: ItemTypes.CARD,\n            drop: (item, monitor) => props.updateModuleLocation(item, props.id),\n            collect: monitor => ({\n                isOver: !!monitor.isOver(),\n            }),\n    })\n\n    function handleButtonClick() {\n        setIsTextBoxOpen(!isTextBoxOpen);\n     }\n\n \n\n        const selectedModules = props.selectedModules;\n\n        return (\n            \n            <div>\n                <h3>{props.semester}</h3>\n            <div   \n                ref={drop}\n                id={props.id}\n                style={{width: '20rem'}}\n            >\n\n            <div style={{width: '165px', \n                        height: (!isBoardFilled) && '59px', \n                        outline: isBoardFilled ? 'none' : '1px dotted'}}>\n                            {isBoardFilled ? generateCards() : 'Drop module here'}\n            </div>\n            {isTextBoxOpen && <AutoCompleteText \n                                            location={props.id}\n                                            updateSelectedModules={props.updateSelectedModules}/>}\n                <Button onClick={handleButtonClick}>Add Module</Button>\n                \n                </div>\n            </div>\n        )\n   \n}\n\nexport default Board;"]},"metadata":{},"sourceType":"module"}