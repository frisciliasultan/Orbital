{"ast":null,"code":"import { SET_USER_SETTINGS, SET_CURRENT_SEMESTER, SET_MATRICULATION_OPTIONS, SET_TARGET_GRAD_OPTIONS } from \"../actions/types\";\nconst initialState = {\n  currentAY: null,\n  currentSemester: null,\n  matriculationOptions: [],\n  targetGradOptions: [],\n  userInfo: null\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_USER_SETTINGS:\n      return { ...state,\n        userInfo: action.payload\n      };\n\n    case SET_CURRENT_SEMESTER:\n      return { ...state,\n        currentAY: action.currentAY,\n        currentSemester: action.currentSemester\n      };\n\n    case SET_MATRICULATION_OPTIONS:\n      const {\n        currentAY,\n        currentSemester\n      } = action;\n      const year = Number(currentAY.substr(5, 4));\n      let matriculationOptions = [];\n      let value;\n\n      if (currentSemester === \"Semester 1\") {\n        for (let i = 0; i <= 6; i++) {\n          const start = year - i;\n          const end = start + 1;\n\n          if (i === 0) {\n            value = `AY ${start}/${end} (Next Year)`;\n          } else {\n            value = `AY ${start}/${end} (Year ${i})`;\n          }\n\n          matriculationOptions[i] = value;\n        }\n      } else {\n        for (let i = 0; i <= 6; i++) {\n          const start = year - i;\n          const end = start + 1;\n\n          if (i === 0) {\n            value = `AY ${start}/${end} (Next Semester)`;\n          } else {\n            value = `AY ${start}/${end} (Year ${i})`;\n          }\n\n          matriculationOptions[i] = value;\n        }\n      }\n\n      return { ...state,\n        matriculationOptions: matriculationOptions\n      };\n\n    case SET_TARGET_GRAD_OPTIONS:\n      const {\n        AY,\n        Semester\n      } = action;\n      const Year = Number(AY.substr(0, 4));\n      let targetGradOptions = [];\n      let option;\n\n      for (let i = 0; i <= 6; i++) {\n        const start = Year + i;\n        const end = start + 1;\n\n        if (i === 0) {\n          option = `In AY ${AY} (This Year)`;\n        } else if (i === 1) {\n          option = `In AY ${start}/${end} (Next Year)`;\n        } else {\n          option = `In AY ${start}/${end} (In ${i} Year)`;\n        }\n\n        targetGradOptions[i] = option;\n      }\n\n      return { ...state,\n        targetGradOptions: targetGradOptions\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/frisciliasultan/Documents/Orbital/client/src/reducers/settingsReducer.js"],"names":["SET_USER_SETTINGS","SET_CURRENT_SEMESTER","SET_MATRICULATION_OPTIONS","SET_TARGET_GRAD_OPTIONS","initialState","currentAY","currentSemester","matriculationOptions","targetGradOptions","userInfo","state","action","type","payload","year","Number","substr","value","i","start","end","AY","Semester","Year","option"],"mappings":"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","sourcesContent":["import {\n    SET_USER_SETTINGS,\n    SET_CURRENT_SEMESTER,\n    SET_MATRICULATION_OPTIONS,\n    SET_TARGET_GRAD_OPTIONS\n} from \"../actions/types\";\n\nconst initialState = {\n    currentAY: null,\n    currentSemester: null,\n    matriculationOptions:[],\n    targetGradOptions: [],\n    userInfo: null\n}\n\nexport default function (state = initialState, action ) {\n    switch(action.type) {\n        case SET_USER_SETTINGS:\n            return {\n                ...state,\n                userInfo: action.payload\n            }\n        \n        case SET_CURRENT_SEMESTER:\n            return {\n                ...state,\n                currentAY: action.currentAY,\n                currentSemester: action.currentSemester\n            }\n        \n        case SET_MATRICULATION_OPTIONS:\n            const { currentAY, currentSemester } = action;\n            const year = Number(currentAY.substr(5,4));\n            let matriculationOptions = [];\n            let value;\n\n            if(currentSemester === \"Semester 1\") { \n                for(let i = 0; i <= 6; i++) {\n                    const start = year - i;\n                    const end = start + 1;\n\n                    if(i === 0) {\n                        value = `AY ${start}/${end} (Next Year)`\n                    } else {\n                        value = `AY ${start}/${end} (Year ${i})`\n                    }\n\n                    matriculationOptions[i] = value;\n                }\n            } else {\n                for(let i = 0; i <= 6; i++ ) {\n                    const start = year - i;\n                    const end = start + 1;\n\n                    if(i === 0) {\n                        value = `AY ${start}/${end} (Next Semester)`\n                    }\n                    else {\n                        value = `AY ${start}/${end} (Year ${i})`\n                    }\n                    \n                    matriculationOptions[i] = value;\n                }\n            }\n\n            return{\n                ...state,\n                matriculationOptions: matriculationOptions    \n            }\n        \n        case SET_TARGET_GRAD_OPTIONS:\n            const { AY, Semester } = action;\n            const Year = Number(AY.substr(0,4));\n            let targetGradOptions = []\n            let option;\n\n                for(let i = 0; i <= 6; i++) {\n                    const start = Year + i;\n                    const end = start + 1;\n\n                    if(i === 0) {\n                        option = `In AY ${AY} (This Year)`\n                    } else if (i === 1) {\n                        option = `In AY ${start}/${end} (Next Year)`\n                    } else {\n                        option = `In AY ${start}/${end} (In ${i} Year)`\n                    }\n                    targetGradOptions[i] = option;\n                }\n\n            return{\n                ...state,\n                targetGradOptions: targetGradOptions    \n            }\n\n        default:\n            return state;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}