{"ast":null,"code":"var _jsxFileName = \"/Users/frisciliasultan/Documents/Orbitalhosting/src/Settings/AccountSettings.jsx\";\nimport React, { useState, useReducer } from \"react\";\nimport SideNav from \"./SideNav\";\nimport { Input, Popconfirm, message } from 'antd';\nimport { UserOutlined } from '@ant-design/icons';\nimport { Card } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport RegistrationForm from \"./ChangePassword\";\nimport { deleteUser } from \"../actions/authActions\";\nimport LoadingDots from \"../Pages/Loading Page/LoadingPage\";\n\nconst AccountSettings = props => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [changePassword, setChangePassword] = useState(false);\n  const [userInput, setUserInput] = useReducer((state, newState) => ({ ...state,\n    ...newState\n  }), {\n    username: props.auth.user.name,\n    email: props.auth.user.email\n  });\n\n  function confirm(e) {\n    console.log(e);\n    message.success('Account successfully deleted');\n    props.deleteUser();\n  }\n\n  const presentButton = () => {\n    if (!isEditing) {\n      return /*#__PURE__*/React.createElement(\"button\", {\n        className: \"button settings-button\",\n        onClick: () => setIsEditing(true),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 20\n        }\n      }, \"Edit Settings\");\n    } else {\n      return /*#__PURE__*/React.createElement(\"button\", {\n        className: \"button settings-button\",\n        onClick: () => {\n          handleSubmit();\n          setIsEditing(false);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 20\n        }\n      }, \"Save Settings\");\n    }\n  };\n\n  const handleSubmit = () => {};\n\n  const renderContent = name => {\n    if (isEditing) {\n      if (name === \"username\") {\n        return /*#__PURE__*/React.createElement(Input, {\n          placeholder: \"Enter username\",\n          type: \"text\",\n          name: name,\n          prefix: /*#__PURE__*/React.createElement(UserOutlined, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 34\n            }\n          }),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 21\n          }\n        });\n      } else {\n        return /*#__PURE__*/React.createElement(Input, {\n          placeholder: `Enter ${name}`,\n          type: \"email\",\n          name: name,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 21\n          }\n        });\n      }\n    } else {\n      return userInput[name];\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"settings\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SideNav, {\n    active: \"account\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    className: \"container\",\n    id: \"degree-settings\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }, \"Account Settings\"), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table table-hover settings-table\",\n    id: \"degree-acad-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 37\n    }\n  }, \"Username :\")), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 33\n    }\n  }, renderContent(\"username\"))), !props.auth.socialLogin && /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 58\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 37\n    }\n  }, \"Email :\")), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 33\n    }\n  }, renderContent(\"email\"))), changePassword && /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 37\n    }\n  }, \"Changing Password\")), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(RegistrationForm, {\n    setChangePassword: setChangePassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 33\n    }\n  }))))), presentButton(), !changePassword && /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button settings-button\",\n    onClick: () => setChangePassword(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 25\n    }\n  }, \"Change Password\"), /*#__PURE__*/React.createElement(Popconfirm, {\n    title: \"Confirm delete account?\",\n    onConfirm: confirm,\n    okText: \"Yes\",\n    cancelText: \"No\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button settings-button\",\n    id: \"delete\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 29\n    }\n  }, \"Delete account\")), /*#__PURE__*/React.createElement(LoadingDots, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 21\n    }\n  })));\n};\n\nAccountSettings.propType = {\n  deleteUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProp = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProp, {\n  deleteUser\n})(AccountSettings);","map":{"version":3,"sources":["/Users/frisciliasultan/Documents/Orbitalhosting/src/Settings/AccountSettings.jsx"],"names":["React","useState","useReducer","SideNav","Input","Popconfirm","message","UserOutlined","Card","connect","PropTypes","RegistrationForm","deleteUser","LoadingDots","AccountSettings","props","isEditing","setIsEditing","changePassword","setChangePassword","userInput","setUserInput","state","newState","username","auth","user","name","email","confirm","e","console","log","success","presentButton","handleSubmit","renderContent","socialLogin","propType","func","isRequired","object","mapStateToProp"],"mappings":"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","sourcesContent":["import React, { useState, useReducer } from \"react\";\nimport SideNav from \"./SideNav\";\nimport { Input, Popconfirm, message } from 'antd';\nimport { UserOutlined } from '@ant-design/icons';\nimport { Card } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport RegistrationForm from \"./ChangePassword\";\nimport { deleteUser } from \"../actions/authActions\";\nimport LoadingDots from \"../Pages/Loading Page/LoadingPage\";\n\nconst AccountSettings = (props) => {\n    const [isEditing, setIsEditing] = useState(false);\n    const [changePassword, setChangePassword] = useState(false);\n\n    const [userInput, setUserInput] = useReducer(\n        (state, newState) => ({...state, ...newState}), \n        {\n          username: props.auth.user.name,\n          email: props.auth.user.email,\n        }\n      );\n    \n    function confirm(e) {\n        console.log(e);\n        message.success('Account successfully deleted');\n        props.deleteUser();\n    }\n    \n    const presentButton = () => {\n          if(!isEditing) {\n            return <button \n              className=\"button settings-button\" \n              onClick={() => setIsEditing(true)}>\n                  Edit Settings\n            </button>\n          } else {\n            return <button \n              className=\"button settings-button\" \n              onClick={() => {\n                handleSubmit();\n                setIsEditing(false);}}>\n                Save Settings\n            </button>\n          }\n      }\n    \n    const handleSubmit = () => {\n\n    }\n\n    const renderContent = (name) => {\n        if(isEditing) {\n            if(name === \"username\") {\n                return (\n                    <Input \n                         placeholder=\"Enter username\"\n                         type=\"text\"\n                         name={name}\n                         prefix={<UserOutlined />}/>) \n            } else {\n                return (\n                    <Input \n                         placeholder={`Enter ${name}`}\n                         type=\"email\"\n                         name={name}/>) \n            }\n                \n        } else {\n            return userInput[name];\n        }\n    }\n    return (\n        \n        <div className=\"settings\">\n            \n            <SideNav active=\"account\"/>\n                <Card className=\"container\" id=\"degree-settings\">\n                    <Card.Header>\n                        Account Settings\n                    </Card.Header>\n                    <table className=\"table table-hover settings-table\" id=\"degree-acad-table\">\n                        <tbody>\n                            <tr>\n                                <td>\n                                    <label>Username :</label>\n                                </td>\n\n                                <td>\n                                    {renderContent(\"username\")}\n                                </td>\n                            </tr>\n\n                            {!props.auth.socialLogin && (<tr>\n                                <td>\n                                    <label>Email :</label>\n                                </td>\n\n                                <td>\n                                    {renderContent(\"email\")}\n                                </td>\n                            </tr>)}\n\n                            {changePassword && (<tr>\n                                <td>\n                                    <label>Changing Password</label>\n                                </td>\n\n                                <td>\n                                <RegistrationForm \n                                    setChangePassword={setChangePassword}/>\n                                </td>\n                            </tr>)}\n                        </tbody>\n                    </table>\n                  \n                    {presentButton()}\n                    {!changePassword && \n                        <button \n                            className=\"button settings-button\" \n                            onClick={() => setChangePassword(true)}>\n                                Change Password\n                        </button>}\n                    \n                        <Popconfirm\n                            title=\"Confirm delete account?\"\n                            onConfirm={confirm}\n                            okText=\"Yes\"\n                            cancelText=\"No\"\n                        >\n                            <button \n                                className=\"button settings-button\" id=\"delete\">\n                                    Delete account\n                            </button>\n                        </Popconfirm>\n                    \n                    <LoadingDots/>\n                </Card>\n        </div>\n    )\n}\n\nAccountSettings.propType = {\n    deleteUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProp = state => ({\n    auth: state.auth\n});\n\nexport default connect(mapStateToProp, { deleteUser }) (AccountSettings);"]},"metadata":{},"sourceType":"module"}