{"ast":null,"code":"var _jsxFileName = \"/Users/frisciliasultan/Documents/Orbitalhosting/src/Settings/DynamicFieldSet.jsx\";\nimport { Form, Input, Button, Switch } from 'antd';\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\nimport AutocompleteText from \"../Pages/Module Planner Page/AutocompleteText\";\nimport React from \"react\";\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 4\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 20\n    }\n  }\n};\nconst formItemLayoutWithOutLabel = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0\n    },\n    sm: {\n      span: 20,\n      offset: 4\n    }\n  }\n};\n\nconst DynamicFieldSet = props => {\n  const handleRemove = index => {\n    const original = this.props.value ? [...this.props.value] : [];\n    original.splice(index, 1);\n    props.setUserInput({\n      [props.category]: original\n    });\n  };\n\n  const onFinish = values => {\n    console.log('Received values of form:', values);\n  };\n\n  return /*#__PURE__*/React.createElement(Form, Object.assign({\n    name: \"dynamic_form_item\"\n  }, formItemLayoutWithOutLabel, {\n    onFinish: onFinish,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Form.List, {\n    // name={props.name}\n    name: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, (fields, {\n    add,\n    remove\n  }) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 15\n      }\n    }, fields.map((field, index) =>\n    /*#__PURE__*/\n    //   <Form.Item\n    //   {...(formItemLayoutWithOutLabel)}\n    //   // label={index === 0 ? 'SecondMajors' : ''}\n    //   required={false}\n    //   key={field.key}\n    // >\n    //   <Form.Item\n    //     {...field}\n    //     validateTrigger={['onChange', 'onBlur']}\n    //     rules={[\n    //       {\n    //         required: true,\n    //         whitespace: true,\n    //         message: `Please input ${props.name} or delete this field.`,\n    //       },\n    //     ]}\n    //     noStyle\n    //   >\n    //     <AutocompleteText id=\"autocomplete-settings\" category={props.name}/>\n    //     {/* <Input placeholder={`Enter ${props.name}`} style={{ width: '60%' }} /> */}\n    //   </Form.Item>\n    //   {fields.length > 1 ? (\n    //     <MinusCircleOutlined\n    //       className=\"dynamic-delete-button\"\n    //       style={{ margin: '0 8px' }}\n    //       onClick={() => {\n    //         remove(field.name);\n    //       }}\n    //     />\n    //   ) : null}\n    // </Form.Item>\n    React.createElement(Form.Item, Object.assign({}, formItemLayoutWithOutLabel, {\n      // label={index === 0 ? 'SecondMajors' : ''}\n      required: false,\n      key: field.key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Form.Item, {\n      // {...field}\n      // validateTrigger={['onChange', 'onBlur']}\n      // rules={[\n      //   {\n      //     required: true,\n      //     whitespace: true,\n      //     message: `Please input ${props.name} or delete this field.`,\n      //   },\n      // ]}\n      noStyle: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(AutocompleteText, {\n      category: props.name,\n      setUserInput: props.setUserInput,\n      index: index,\n      value: props.value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 23\n      }\n    })), fields.length > 1 ? /*#__PURE__*/React.createElement(MinusCircleOutlined, {\n      className: \"dynamic-delete-button\",\n      onClick: () => {\n        remove(field.name);\n        handleRemove(index);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 23\n      }\n    }) : null)), /*#__PURE__*/React.createElement(Form.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"dashed\",\n      onClick: () => {\n        add();\n      },\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(PlusOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }\n    }), \" Add \", props.name === \"secondMajor\" ? \"Major\" : \"Minor\")));\n  }));\n};\n\nexport default DynamicFieldSet;","map":{"version":3,"sources":["/Users/frisciliasultan/Documents/Orbitalhosting/src/Settings/DynamicFieldSet.jsx"],"names":["Form","Input","Button","Switch","MinusCircleOutlined","PlusOutlined","AutocompleteText","React","formItemLayout","labelCol","xs","span","sm","wrapperCol","formItemLayoutWithOutLabel","offset","DynamicFieldSet","props","handleRemove","index","original","value","splice","setUserInput","category","onFinish","values","console","log","fields","add","remove","map","field","key","name","length","width"],"mappings":"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","sourcesContent":["import { Form, Input, Button, Switch } from 'antd';\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\nimport AutocompleteText from \"../Pages/Module Planner Page/AutocompleteText\";\nimport React from \"react\";\n\nconst formItemLayout = {\n    labelCol: {\n      xs: { span: 24 },\n      sm: { span: 4 },\n    },\n    wrapperCol: {\n      xs: { span: 24 },\n      sm: { span: 20 },\n    },\n  };\n  const formItemLayoutWithOutLabel = {\n    wrapperCol: {\n      xs: { span: 24, offset: 0 },\n      sm: { span: 20, offset: 4 },\n    },\n  };\n  \n  \n\n  const DynamicFieldSet = (props) => {\n    \n    const handleRemove = (index) => {\n      const original = this.props.value ? [...this.props.value] : [];\n      original.splice(index, 1);\n      props.setUserInput({[props.category]: original});\n    }\n\n    const onFinish = values => {\n      console.log('Received values of form:', values);\n    };\n  \n    return (\n      <Form name=\"dynamic_form_item\" \n        {...formItemLayoutWithOutLabel} \n        onFinish={onFinish}\n        >\n        <Form.List \n        // name={props.name}\n        name=\"name\">\n          {(fields, { add, remove }) => {\n            return (\n              <div>\n                \n                {fields.map((field, index) => (\n                //   <Form.Item\n                //   {...(formItemLayoutWithOutLabel)}\n                //   // label={index === 0 ? 'SecondMajors' : ''}\n                //   required={false}\n                //   key={field.key}\n                // >\n                //   <Form.Item\n                //     {...field}\n                //     validateTrigger={['onChange', 'onBlur']}\n                //     rules={[\n                //       {\n                //         required: true,\n                //         whitespace: true,\n                //         message: `Please input ${props.name} or delete this field.`,\n                //       },\n                //     ]}\n                //     noStyle\n                //   >\n                //     <AutocompleteText id=\"autocomplete-settings\" category={props.name}/>\n                //     {/* <Input placeholder={`Enter ${props.name}`} style={{ width: '60%' }} /> */}\n                //   </Form.Item>\n                //   {fields.length > 1 ? (\n                //     <MinusCircleOutlined\n                //       className=\"dynamic-delete-button\"\n                //       style={{ margin: '0 8px' }}\n                //       onClick={() => {\n                //         remove(field.name);\n                //       }}\n                //     />\n                //   ) : null}\n                // </Form.Item>\n\n\n\n\n\n                  <Form.Item\n                    {...(formItemLayoutWithOutLabel)}\n                    // label={index === 0 ? 'SecondMajors' : ''}\n                    required={false}\n                    key={field.key}\n                  >\n                    <Form.Item\n                      // {...field}\n                      // validateTrigger={['onChange', 'onBlur']}\n                      // rules={[\n                      //   {\n                      //     required: true,\n                      //     whitespace: true,\n                      //     message: `Please input ${props.name} or delete this field.`,\n                      //   },\n                      // ]}\n                      noStyle\n                    >\n                      <AutocompleteText category={props.name}\n                      setUserInput ={props.setUserInput}\n                      index={index}\n                      value={props.value}/>\n                      {/* <Input placeholder={`Enter ${props.name}`} style={{ width: '60%' }} /> */}\n                    </Form.Item>\n\n                    {fields.length > 1 ? (\n                      <MinusCircleOutlined\n                        className=\"dynamic-delete-button\"\n\n                        onClick={() => {\n                          remove(field.name);\n                          handleRemove(index);\n                        }}\n                      />\n                    ) : null}\n                  </Form.Item>\n                ))}\n                <Form.Item>\n                  <Button\n                    type=\"dashed\"\n                    onClick={() => {\n                      add();\n                    }}\n                    style={{ width: '100%' }}\n                  >\n                    <PlusOutlined /> Add {props.name === \"secondMajor\" ? \"Major\" : \"Minor\"}\n                  </Button>\n                </Form.Item>\n              </div>\n            );\n          }}\n        </Form.List>\n  \n        {/* <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Submit\n          </Button>\n        </Form.Item> */}\n      </Form>\n    );\n  };\n  \n\nexport default DynamicFieldSet;"]},"metadata":{},"sourceType":"module"}