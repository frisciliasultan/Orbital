{"ast":null,"code":"var _jsxFileName = \"/Users/frisciliasultan/Documents/Orbital/client/src/Pages/CAP Calculator Page/CAPCalculatorPage.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport { setSemesterOptions, setModulesForCAP } from '../../actions/capActions';\nimport { updateSettings, initialSettings } from \"../../actions/settingsActions\";\nimport { setSelectedModules } from \"../../actions/modplanActions\";\nimport { generateOptions } from \"../../utils/optionGenerator\";\nimport isEmpty from 'is-empty';\n\nconst CAPCalculatorPage = props => {\n  const gradeList = [{\n    grade: \"A+\",\n    gradePoint: 5\n  }, {\n    grade: \"A\",\n    gradePoint: 5\n  }, {\n    grade: \"A-\",\n    gradePoint: 5\n  }, {\n    grade: \"B+\",\n    gradePoint: 5\n  }, {\n    grade: \"B\",\n    gradePoint: 5\n  }, {\n    grade: \"B-\",\n    gradePoint: 5\n  }, {\n    grade: \"C+\",\n    gradePoint: 5\n  }, {\n    grade: \"C\",\n    gradePoint: 5\n  }, {\n    grade: \"D+\",\n    gradePoint: 5\n  }, {\n    grade: \"D\",\n    gradePoint: 5\n  }, {\n    grade: \"F\",\n    gradePoint: 0\n  }];\n  const [semester, setSemester] = useState(\"Year 1 Semester 1\");\n  useEffect(() => {\n    if (isEmpty(props.cap.semesterOptions) && !isEmpty(props.settings.userInfo)) {\n      const start = props.settings.userInfo.matriculationYear.substr(0, 4);\n      const end = props.settings.userInfo.targetGradYear.substr(5, 4);\n      const diff = end - start;\n      props.setSemesterOptions(diff);\n    }\n\n    if (!isEmpty(props.settings.userInfo.modPlan) && isEmpty(props.selectedModules)) {\n      props.setSelectedModules(null, props.settings.userInfo.modPlan);\n    }\n  }, [props.settings.userInfo]);\n  useEffect(() => {\n    props.setModulesForCAP(props.selectedModules);\n  }, [props.selectedModules]);\n  const gradeDropDown = generateOptions(gradeList, \"grade\");\n\n  const handleGradeClick = (grade, object) => {\n    console.log(object);\n    const module = { ...object\n    };\n    module.grade = grade;\n    console.log(module);\n  };\n\n  const generateTable = () => {\n    return props.cap.CAPModules.filter(object => object.location === semester).map(object => {\n      const {\n        moduleCode,\n        title,\n        moduleCredit\n      } = object;\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: moduleCode,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 29\n        }\n      }, title), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 29\n        }\n      }, moduleCode), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 29\n        }\n      }, moduleCredit), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"select\", {\n        onChange: (e, object) => handleGradeClick(e.target.value, object),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        selected: true,\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 37\n        }\n      }, \"Input Grade\"), gradeDropDown)));\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ml-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"display-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, \"CAP Calculator\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, \"CAP at the beginning of the semester: \", props.settings.userInfo.cap, \" \"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, \"Semester: \"), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"time\",\n    onChange: e => setSemester(e.target.value),\n    size: \"5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, isEmpty(props.cap.semesterOptions) && /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 52\n    }\n  }, \"Year 1 Semester 1\"), generateOptions(props.cap.semesterOptions)), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, \"Courses taken this semester\"), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table table-hover\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, \"Module Title\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, \"Module Code\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, \"Modular Credits\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, \"Grade\"), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, !isEmpty(props.settings.userInfo) && generateTable())));\n};\n\nCAPCalculatorPage.propType = {\n  setSemesterOptions: PropTypes.func.isRequired,\n  setModulesForCAP: PropTypes.func.isRequired,\n  setSelectedModules: PropTypes.func.isRequired,\n  updateSettings: PropTypes.func.isRequired,\n  initialSettings: PropTypes.func.isRequired,\n  generateOptions: PropTypes.func.isRequired,\n  settings: PropTypes.object.isRequired,\n  cap: PropTypes.object.isRequired,\n  selectedModules: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  settings: state.settings,\n  cap: state.cap,\n  selectedModules: state.modplan.selectedModules\n});\n\nexport default connect(mapStateToProps, {\n  setSemesterOptions,\n  setModulesForCAP,\n  setSelectedModules,\n  updateSettings,\n  initialSettings\n})(CAPCalculatorPage);\n{\n  /* <label>CAP: </label>\n            <input type=\"text\" name=\"prevCAP\" />\n            <label>Credits Earned: </label>\n            <input type=\"text\" name=\"prevCreditsEarned\" />\n            <br/>\n            <br/> */\n}\n{\n  /* <label>Module</label>\n            <label>Grade</label>\n            <br/>\n            <input type=\"text\" placeholder=\"Credits\"/>\n            <input type=\"text\" placeholder=\"MCs\" /> */\n}","map":{"version":3,"sources":["/Users/frisciliasultan/Documents/Orbital/client/src/Pages/CAP Calculator Page/CAPCalculatorPage.jsx"],"names":["React","useState","useEffect","connect","PropTypes","setSemesterOptions","setModulesForCAP","updateSettings","initialSettings","setSelectedModules","generateOptions","isEmpty","CAPCalculatorPage","props","gradeList","grade","gradePoint","semester","setSemester","cap","semesterOptions","settings","userInfo","start","matriculationYear","substr","end","targetGradYear","diff","modPlan","selectedModules","gradeDropDown","handleGradeClick","object","console","log","module","generateTable","CAPModules","filter","location","map","moduleCode","title","moduleCredit","e","target","value","propType","func","isRequired","mapStateToProps","state","modplan"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport { setSemesterOptions, setModulesForCAP } from '../../actions/capActions';\nimport { updateSettings, initialSettings } from \"../../actions/settingsActions\";\nimport { setSelectedModules } from \"../../actions/modplanActions\";\nimport { generateOptions } from \"../../utils/optionGenerator\";\nimport isEmpty from 'is-empty';\n\n\nconst CAPCalculatorPage = (props) => {\n    const gradeList = [\n                        {grade: \"A+\", gradePoint: 5},\n                        {grade: \"A\", gradePoint: 5},\n                        {grade: \"A-\", gradePoint: 5},\n                        {grade: \"B+\", gradePoint: 5},\n                        {grade: \"B\", gradePoint: 5},\n                        {grade: \"B-\", gradePoint: 5},\n                        {grade: \"C+\", gradePoint: 5},\n                        {grade: \"C\", gradePoint: 5},\n                        {grade: \"D+\", gradePoint: 5},\n                        {grade: \"D\", gradePoint: 5},\n                        {grade: \"F\", gradePoint: 0}\n    ]       \n\n    const [semester, setSemester] = useState(\"Year 1 Semester 1\");\n\n    useEffect(() => {\n        if(isEmpty(props.cap.semesterOptions) && !isEmpty(props.settings.userInfo)){\n            const start = props.settings.userInfo.matriculationYear.substr(0, 4);\n            const end = props.settings.userInfo.targetGradYear.substr(5, 4);\n            const diff = end - start;\n            props.setSemesterOptions(diff);\n        }\n        if(!isEmpty(props.settings.userInfo.modPlan) && isEmpty(props.selectedModules)) {\n            props.setSelectedModules(null, props.settings.userInfo.modPlan)\n        }\n    }, [props.settings.userInfo])\n\n    useEffect(() => {\n        props.setModulesForCAP(props.selectedModules);\n    }, [props.selectedModules])\n    \n    const gradeDropDown = generateOptions(gradeList, \"grade\");\n\n    const handleGradeClick = (grade, object) => {\n        console.log(object);\n        const module = {...object};\n        module.grade = grade;\n        console.log(module);\n    }\n\n    const generateTable = () => {\n            return props.cap.CAPModules\n                .filter((object) => object.location === semester)\n                .map((object) => {\n                    const { moduleCode, title, moduleCredit } = object;\n                    return (\n                        <tr key={moduleCode}>\n                            <td>{title}</td>\n                            <td>{moduleCode}</td>\n                            <td>{moduleCredit}</td>\n                            <td>\n                                <select onChange={(e, object) => handleGradeClick(e.target.value, object)}>\n                                    <option selected disabled>Input Grade</option>\n                                    {gradeDropDown}\n                                </select>\n                            </td>\n                        </tr>\n                    )\n                })   \n    }\n\n    \n    return(\n        <div className=\"ml-4\">\n        <h1 className=\"display-3\">CAP Calculator</h1>\n        <h3>CAP at the beginning of the semester: {props.settings.userInfo.cap} </h3>\n        {/* <h5 onClick={() => {this.setState({open: true})}}>Or click here to manually input CAP</h5> */}\n        {/* {this.state.open && (<input type=\"text\"/>)} */}\n        <label>Semester: </label>\n        <select \n            id=\"time\"\n            onChange={(e) => setSemester(e.target.value)}\n            size=\"5\">\n\n            {/* buffer to display to wait for userInfo */}\n            {isEmpty(props.cap.semesterOptions) && <option>Year 1 Semester 1</option>}\n            {generateOptions(props.cap.semesterOptions)}\n        </select>\n        <br/>\n        \n        <h3>Courses taken this semester</h3>\n            <table className=\"table table-hover\">\n                <th>Module Title</th>\n                <th>Module Code</th>\n                <th>Modular Credits</th>\n                <th>Grade</th>\n                <tbody>\n                    {!isEmpty(props.settings.userInfo) && generateTable()}\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\n\nCAPCalculatorPage.propType = {\n    setSemesterOptions: PropTypes.func.isRequired,\n    setModulesForCAP: PropTypes.func.isRequired,\n    setSelectedModules: PropTypes.func.isRequired,\n    updateSettings: PropTypes.func.isRequired,\n    initialSettings: PropTypes.func.isRequired,\n    generateOptions: PropTypes.func.isRequired,\n    settings: PropTypes.object.isRequired,\n    cap: PropTypes.object.isRequired,\n    selectedModules: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    settings: state.settings,\n    cap: state.cap,\n    selectedModules: state.modplan.selectedModules\n});\n\nexport default connect(mapStateToProps,\n                        { setSemesterOptions, setModulesForCAP, setSelectedModules, updateSettings, initialSettings })\n                        (CAPCalculatorPage);\n\n\n\n {/* <label>CAP: </label>\n            <input type=\"text\" name=\"prevCAP\" />\n            <label>Credits Earned: </label>\n            <input type=\"text\" name=\"prevCreditsEarned\" />\n            <br/>\n            <br/> */}\n\n\n\n {/* <label>Module</label>\n            <label>Grade</label>\n            <br/>\n            <input type=\"text\" placeholder=\"Credits\"/>\n            <input type=\"text\" placeholder=\"MCs\" /> */}"]},"metadata":{},"sourceType":"module"}