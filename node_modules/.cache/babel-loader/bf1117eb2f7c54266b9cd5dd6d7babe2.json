{"ast":null,"code":"var _jsxFileName = \"/Users/frisciliasultan/Documents/Orbitalhosting/src/Settings/Options.js\";\nimport React, { useState } from \"react\";\nimport AutoCompleteText from \"../Pages/Module Planner Page/AutocompleteText\";\nimport { generateOptions } from \"../utils/commonFunctions\";\nimport isEmpty from \"is-empty\";\nimport { Switch, Select } from \"antd\";\nimport DynamicFieldSet from \"./DynamicFieldSet\";\n\nconst Options = props => {\n  const [isOpen, setIsOpen] = useState(!isEmpty(props.value) ? true : false);\n  const {\n    Option\n  } = Select;\n  let value;\n\n  if (!isEmpty(props.value) && props.name !== \"specialisation\" && props.name !== \"secondMajors\" && props.name !== \"minors\") {\n    value = props.value.name ? props.value.name : props.value;\n  } else {\n    value = \"None \";\n  }\n\n  const renderContent = () => {\n    if (props.editing) {\n      if (!props.hidden) {\n        if (props.optionList) {\n          return /*#__PURE__*/React.createElement(Select, {\n            showSearch: true,\n            onChange: props.handleChange,\n            defaultValue: \"None \",\n            value: value,\n            style: {\n              width: 300\n            },\n            optionFilterProp: \"children\",\n            filterOption: (input, option) => {\n              return option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(Option, {\n            key: \"choose\" + props.label,\n            value: \"None \",\n            disabled: true,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 29\n            }\n          }, \"Choose \" + props.label), generateOptions(props.optionList, props.name));\n        }\n      } else if (isOpen) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(DynamicFieldSet, {\n          label: props.label,\n          setUserInput: props.setUserInput,\n          optionList: props.optionList,\n          name: props.name,\n          value: props.value,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 21\n          }\n        }));\n      } else {\n        return value;\n      }\n    } else {\n      return value;\n    }\n  };\n\n  const handleSwitch = () => {\n    if (isOpen) {\n      if (props.name === \"specialisation\") {\n        props.setUserInput({\n          specialisation: \"None \"\n        });\n      } else {\n        props.setUserInput({\n          [props.name]: []\n        });\n      }\n    }\n\n    setIsOpen(!isOpen);\n  };\n\n  return /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, props.label)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, renderContent()), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, props.hidden && props.editing ? /*#__PURE__*/React.createElement(Switch, {\n    checked: isOpen,\n    onChange: handleSwitch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 27\n    }\n  }) : null));\n};\n\nexport default Options;","map":{"version":3,"sources":["/Users/frisciliasultan/Documents/Orbitalhosting/src/Settings/Options.js"],"names":["React","useState","AutoCompleteText","generateOptions","isEmpty","Switch","Select","DynamicFieldSet","Options","props","isOpen","setIsOpen","value","Option","name","renderContent","editing","hidden","optionList","handleChange","width","input","option","children","toLowerCase","indexOf","label","setUserInput","handleSwitch","specialisation"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport AutoCompleteText from \"../Pages/Module Planner Page/AutocompleteText\";\nimport { generateOptions } from \"../utils/commonFunctions\";\nimport isEmpty from \"is-empty\";\nimport { Switch, Select } from \"antd\";\nimport DynamicFieldSet from \"./DynamicFieldSet\";\n\nconst Options = (props) => {\n    const [isOpen, setIsOpen] = useState(!isEmpty(props.value) ? true : false);\n    const { Option } = Select;\n    let value;\n    if (!isEmpty(props.value) && props.name !== \"specialisation\"\n        && props.name !== \"secondMajors\" && props.name !== \"minors\") {\n        value = props.value.name ? props.value.name : props.value;\n    } else {\n        value = \"None \";\n    } \n\n    const renderContent = () => {\n        if(props.editing) {\n            if(!props.hidden) {\n                if(props.optionList) {\n                    return (\n                        <Select\n                            showSearch\n                            onChange={props.handleChange}\n                            defaultValue=\"None \"\n                            value={value}\n                            style={{ width: 300 }}\n                            optionFilterProp=\"children\"\n                            filterOption={(input, option) => {\n                                return option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                            }}>\n                            <Option \n                                key={\"choose\" + props.label}\n                                value=\"None \" \n                                 disabled>\n                                {\"Choose \" + props.label}\n                            </Option>\n                            {generateOptions(props.optionList, props.name)}\n                        </Select> ) \n                }\n            } else if (isOpen) {\n                return (\n                    <div>\n                    <DynamicFieldSet\n                        label={props.label}\n                        setUserInput={props.setUserInput}\n                        optionList={props.optionList}\n                        name={props.name}\n                        value={props.value}/>\n                    </div>\n                )\n            } else {\n                return value;\n            }\n        } else {\n            return value;\n        }\n    }\n\n    const handleSwitch = () => {\n        if(isOpen) {\n            if(props.name === \"specialisation\") {\n                props.setUserInput({specialisation: \"None \"});\n            } else {\n                props.setUserInput({[props.name]: []});\n            }\n        }\n\n        setIsOpen(!isOpen);\n    }\n\n    return (\n            <tr>\n                <td>\n                    <label>{props.label}</label>\n                </td>\n\n                <td>\n                    {renderContent()}\n                </td>\n\n                <td>\n                    {props.hidden && props.editing\n                        ? <Switch  \n                            checked={isOpen} \n                            onChange={handleSwitch}/>\n                        : null}\n                </td>\n            </tr>\n    )        \n}\n\nexport default Options;"]},"metadata":{},"sourceType":"module"}