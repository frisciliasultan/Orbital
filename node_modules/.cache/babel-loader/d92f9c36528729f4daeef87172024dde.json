{"ast":null,"code":"var _jsxFileName = \"/Users/frisciliasultan/Documents/Orbital/client/src/actions/authActions.js\";\nimport React from 'react';\nimport axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\nimport { GET_ERRORS, SET_CURRENT_USER, USER_LOADING } from \"./types\";\nimport { Redirect } from 'react-router-dom'; // Register User\n\nexport const registerUser = (userData, history) => dispatch => {\n  axios.defaults.timeout = 2000;\n  axios.post(\"http://172.19.162.53:3000/user/register\", userData).then(res => history.push(\"/login\")) // re-direct to login on successful register\n  .catch(err => {\n    if (err.response) {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    } else {\n      history.push(\"/500-error\");\n    }\n  });\n}; // Login - get user token\n\nexport const loginUser = userData => dispatch => {\n  axios.defaults.timeout = 2000;\n  axios.post(\"http://172.19.162.53:3000/user/login\", userData).then(res => {\n    // Save to localStorage\n    // Set token to localStorage\n    const {\n      token\n    } = res.data;\n    localStorage.setItem(\"jwtToken\", token); // Set token to Auth header\n\n    setAuthToken(token); // Decode token to get user data\n\n    const decoded = jwt_decode(token); // Set current user\n\n    dispatch(setCurrentUser(decoded));\n  }).catch(err => {\n    if (err.response) {\n      console.log('res called');\n      console.log(err.response.status);\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    } else if (err.request) {\n      console.log(err.request);\n      console.log('req called');\n      console.log(window.history.push);\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/500-error\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 16\n        }\n      });\n    } else {}\n  });\n}; // Set logged in user\n\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n}; // User loading\n\nexport const setUserLoading = () => {\n  return {\n    type: USER_LOADING\n  };\n}; // Log user out\n\nexport const logoutUser = () => dispatch => {\n  // Remove token from local storage\n  localStorage.removeItem(\"jwtToken\"); // Remove auth header for future requests\n\n  setAuthToken(false); // Set current user to empty object {} which will set isAuthenticated to false\n\n  dispatch(setCurrentUser({}));\n};","map":{"version":3,"sources":["/Users/frisciliasultan/Documents/Orbital/client/src/actions/authActions.js"],"names":["React","axios","setAuthToken","jwt_decode","GET_ERRORS","SET_CURRENT_USER","USER_LOADING","Redirect","registerUser","userData","history","dispatch","defaults","timeout","post","then","res","push","catch","err","response","type","payload","data","loginUser","token","localStorage","setItem","decoded","setCurrentUser","console","log","status","request","window","setUserLoading","logoutUser","removeItem"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\nimport {\n  GET_ERRORS,\n  SET_CURRENT_USER,\n  USER_LOADING\n} from \"./types\";\nimport { Redirect } from 'react-router-dom';\n\n// Register User\nexport const registerUser = (userData, history) => dispatch => {\n  axios.defaults.timeout = 2000;\n  axios\n    .post(\"http://172.19.162.53:3000/user/register\", userData)\n    .then(res => history.push(\"/login\")) // re-direct to login on successful register\n    .catch(err => {\n      if(err.response) {\n        dispatch({\n          type: GET_ERRORS,\n          payload: err.response.data\n        })\n      }\n\n      else {\n        history.push(\"/500-error\")\n      }\n    }\n    );\n};\n\n// Login - get user token\nexport const loginUser = userData => dispatch => {\n  axios.defaults.timeout = 2000;\n  axios\n    .post(\"http://172.19.162.53:3000/user/login\", userData)\n    .then(res => {\n      // Save to localStorage\n// Set token to localStorage\n      const { token } = res.data;\n      localStorage.setItem(\"jwtToken\", token);\n      // Set token to Auth header\n      setAuthToken(token);\n      // Decode token to get user data\n      const decoded = jwt_decode(token);\n      // Set current user\n      dispatch(setCurrentUser(decoded));\n    })\n    .catch(err => {\n      if(err.response) {\n        console.log('res called')\n        console.log(err.response.status)\n        dispatch({\n          type: GET_ERRORS,\n          payload: err.response.data\n        })\n      } else if (err.request) {\n        console.log(err.request)\n        console.log('req called')\n        console.log(window.history.push)\n        return <Redirect to=\"/500-error\" />\n      } \n      else {\n        \n      }\n    }\n    );\n};\n\n// Set logged in user\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n};\n\n// User loading\nexport const setUserLoading = () => {\n  return {\n    type: USER_LOADING\n  };\n};\n\n// Log user out\nexport const logoutUser = () => dispatch => {\n  // Remove token from local storage\n  localStorage.removeItem(\"jwtToken\");\n  // Remove auth header for future requests\n  setAuthToken(false);\n  // Set current user to empty object {} which will set isAuthenticated to false\n  dispatch(setCurrentUser({}));\n};"]},"metadata":{},"sourceType":"module"}