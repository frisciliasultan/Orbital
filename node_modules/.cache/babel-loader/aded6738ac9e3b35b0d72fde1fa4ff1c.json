{"ast":null,"code":"var _jsxFileName = \"/Users/frisciliasultan/Documents/Orbital/client/src/Pages/Login/Login.jsx\";\nimport React from \"react\";\nimport loginImg from \"../../login.svg\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\nexport class Login extends React.Component {\n  constructor() {\n    super();\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const userData = {\n        email: this.state.email,\n        password: this.state.password\n      };\n      this.props.loginUser(userData); // since we handle the redirect within our component, we don't need to pass in this.props.history as a parameter\n    };\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    // If logged in and user navigates to Login page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\"); // push user to dashboard when they login\n    }\n\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  render() {\n    const {\n      errors\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"base-container\",\n      ref: this.props.containerRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }, \"Login\"), /*#__PURE__*/React.createElement(\"form\", {\n      noValidate: true,\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"image\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: loginImg,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 19\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"red-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 19\n      }\n    }, errors.email, errors.emailnotfound), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"email\",\n      id: \"email\",\n      placeholder: \"email\",\n      onChange: this.onChange,\n      value: this.state.email,\n      error: errors.email,\n      className: classnames(\"\", {\n        invalid: errors.email || errors.emailnotfound\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 19\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"red-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 19\n      }\n    }, errors.password, errors.passwordincorrect), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      id: \"password\",\n      placeholder: \"password\",\n      onChange: this.onChange,\n      value: this.state.password,\n      error: errors.password,\n      className: classnames(\"\", {\n        invalid: errors.password || errors.passwordincorrect\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 19\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 15\n      }\n    }, \"Login\"))));\n  }\n\n}\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  loginUser\n})(Login);","map":{"version":3,"sources":["/Users/frisciliasultan/Documents/Orbital/client/src/Pages/Login/Login.jsx"],"names":["React","PropTypes","connect","loginUser","classnames","Login","Component","constructor","onChange","e","setState","target","id","value","onSubmit","preventDefault","userData","email","state","password","props","errors","componentDidMount","auth","isAuthenticated","history","push","componentWillReceiveProps","nextProps","render","containerRef","loginImg","emailnotfound","invalid","passwordincorrect","propTypes","func","isRequired","object","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,2BAA1B;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,OAAO,MAAMC,KAAN,SAAoBL,KAAK,CAACM,SAA1B,CAAoC;AACvCC,EAAAA,WAAW,GAAG;AACZ;;AADY,SA4BhBC,QA5BgB,GA4BLC,CAAC,IAAI;AACZ,WAAKC,QAAL,CAAc;AAAE,SAACD,CAAC,CAACE,MAAF,CAASC,EAAV,GAAeH,CAAC,CAACE,MAAF,CAASE;AAA1B,OAAd;AACD,KA9Ba;;AAAA,SA+BhBC,QA/BgB,GA+BLL,CAAC,IAAI;AACZA,MAAAA,CAAC,CAACM,cAAF;AAEJ,YAAMC,QAAQ,GAAG;AACXC,QAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWD,KADP;AAEXE,QAAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWC;AAFV,OAAjB;AAKA,WAAKC,KAAL,CAAWjB,SAAX,CAAqBa,QAArB,EARgB,CAQgB;AAC7B,KAxCa;;AAEZ,SAAKE,KAAL,GAAa;AACXD,MAAAA,KAAK,EAAE,EADI;AAEXE,MAAAA,QAAQ,EAAE,EAFC;AAGXE,MAAAA,MAAM,EAAE;AAHG,KAAb;AAKD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB;AACA,QAAI,KAAKF,KAAL,CAAWG,IAAX,CAAgBC,eAApB,EAAqC;AAEnC,WAAKJ,KAAL,CAAWK,OAAX,CAAmBC,IAAnB,CAAwB,YAAxB;AACD;AACF;;AAEDC,EAAAA,yBAAyB,CAACC,SAAD,EAAY;AACnC,QAAIA,SAAS,CAACL,IAAV,CAAeC,eAAnB,EAAoC;AAClC,WAAKJ,KAAL,CAAWK,OAAX,CAAmBC,IAAnB,CAAwB,YAAxB,EADkC,CACK;AACxC;;AACL,QAAIE,SAAS,CAACP,MAAd,EAAsB;AAChB,WAAKX,QAAL,CAAc;AACZW,QAAAA,MAAM,EAAEO,SAAS,CAACP;AADN,OAAd;AAGD;AACF;;AAgBDQ,EAAAA,MAAM,GAAG;AACP,UAAM;AAAER,MAAAA;AAAF,QAAa,KAAKH,KAAxB;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAgC,MAAA,GAAG,EAAE,KAAKE,KAAL,CAAWU,YAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAGE;AAAM,MAAA,UAAU,MAAhB;AAAiB,MAAA,QAAQ,EAAE,KAAKhB,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,GAAG,EAAEiB,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAMI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE;AAAM,MAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGV,MAAM,CAACJ,KADV,EAEGI,MAAM,CAACW,aAFV,CAFF,eAKE;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,EAAE,EAAC,OAFL;AAGE,MAAA,WAAW,EAAC,OAHd;AAIE,MAAA,QAAQ,EAAE,KAAKxB,QAJjB;AAKE,MAAA,KAAK,EAAE,KAAKU,KAAL,CAAWD,KALpB;AAME,MAAA,KAAK,EAAEI,MAAM,CAACJ,KANhB;AAOE,MAAA,SAAS,EAAEb,UAAU,CAAC,EAAD,EAAK;AACxB6B,QAAAA,OAAO,EAAEZ,MAAM,CAACJ,KAAP,IACRI,MAAM,CAACW;AAFgB,OAAL,CAPvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CAFF,eAqBE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAM,MAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGX,MAAM,CAACF,QADV,EAEGE,MAAM,CAACa,iBAFV,CAFF,eAME;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,EAAE,EAAC,UAFL;AAGE,MAAA,WAAW,EAAC,UAHd;AAIE,MAAA,QAAQ,EAAE,KAAK1B,QAJjB;AAKE,MAAA,KAAK,EAAE,KAAKU,KAAL,CAAWC,QALpB;AAME,MAAA,KAAK,EAAEE,MAAM,CAACF,QANhB;AAOE,MAAA,SAAS,EAAEf,UAAU,CAAC,EAAD,EAAK;AACxB6B,QAAAA,OAAO,EAAEZ,MAAM,CAACF,QAAP,IAAmBE,MAAM,CAACa;AADX,OAAL,CAPvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CArBF,CANJ,CADA,eAoDE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CApDF,CAHF,CADF;AAiED;;AA/GsC;AAkHzC7B,KAAK,CAAC8B,SAAN,GAAkB;AAClBhC,EAAAA,SAAS,EAAEF,SAAS,CAACmC,IAAV,CAAeC,UADR;AAElBd,EAAAA,IAAI,EAAEtB,SAAS,CAACqC,MAAV,CAAiBD,UAFL;AAGlBhB,EAAAA,MAAM,EAAEpB,SAAS,CAACqC,MAAV,CAAiBD;AAHP,CAAlB;;AAMF,MAAME,eAAe,GAAGrB,KAAK,KAAK;AAChCK,EAAAA,IAAI,EAAEL,KAAK,CAACK,IADoB;AAEhCF,EAAAA,MAAM,EAAEH,KAAK,CAACG;AAFkB,CAAL,CAA7B;;AAKA,eAAenB,OAAO,CACpBqC,eADoB,EAEpB;AAAEpC,EAAAA;AAAF,CAFoB,CAAP,CAGbE,KAHa,CAAf","sourcesContent":["import React from \"react\"\nimport loginImg from \"../../login.svg\"\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\n\nexport class Login extends React.Component {\n    constructor() {\n      super();\n      this.state = {\n        email: \"\",\n        password: \"\",\n        errors: {}\n      };\n    }\n    \n    componentDidMount() {\n      // If logged in and user navigates to Login page, should redirect them to dashboard\n      if (this.props.auth.isAuthenticated) {\n        \n        this.props.history.push(\"/dashboard\");\n      }\n    }\n    \n    componentWillReceiveProps(nextProps) {\n      if (nextProps.auth.isAuthenticated) {\n        this.props.history.push(\"/dashboard\"); // push user to dashboard when they login\n      }\n  if (nextProps.errors) {\n        this.setState({\n          errors: nextProps.errors\n        });\n      }\n    }\n\n  onChange = e => {\n      this.setState({ [e.target.id]: e.target.value });\n    };\n  onSubmit = e => {\n      e.preventDefault();\n\n  const userData = {\n        email: this.state.email,\n        password: this.state.password\n      };\n\n  this.props.loginUser(userData); // since we handle the redirect within our component, we don't need to pass in this.props.history as a parameter\n    };\n  \n    render() {\n      const { errors } = this.state;\n\n      return (\n        <div className=\"base-container\" ref={this.props.containerRef}>\n          <div className=\"header\">Login</div>\n\n          <form noValidate onSubmit={this.onSubmit}>\n          <div className=\"content\">\n            <div className=\"image\">\n              <img src={loginImg} />\n            </div>\n\n           \n              <div className=\"form\">\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"email\">Email</label>\n                  <span className=\"red-text\">\n                    {errors.email}\n                    {errors.emailnotfound}</span>\n                  <input \n                    type=\"email\" \n                    id=\"email\" \n                    placeholder=\"email\"\n                    onChange={this.onChange}\n                    value={this.state.email}\n                    error={errors.email}\n                    className={classnames(\"\", {\n                      invalid: errors.email\n                    || errors.emailnotfound\n                    })}\n                     />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"password\">Password</label>\n                  <span className=\"red-text\">\n                    {errors.password}\n                    {errors.passwordincorrect}\n                  </span>\n                  <input \n                    type=\"password\" \n                    id=\"password\" \n                    placeholder=\"password\"\n                    onChange={this.onChange}\n                    value={this.state.password}\n                    error={errors.password}\n                    className={classnames(\"\", {\n                      invalid: errors.password || errors.passwordincorrect\n                    })}\n                     />\n                  </div>\n                </div>\n                \n          </div>\n\n\n\n            <div className=\"footer\">\n              <button type=\"submit\" className=\"btn\">\n                Login\n              </button>\n            </div>\n          </form>\n\n        </div>\n      );\n    }\n  }\n\n  Login.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { loginUser }\n)(Login);"]},"metadata":{},"sourceType":"module"}