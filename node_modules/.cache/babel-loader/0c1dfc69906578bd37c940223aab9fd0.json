{"ast":null,"code":"var _jsxFileName = \"/Users/frisciliasultan/Documents/Orbital/client/src/Pages/Module Planner Page/Rules.jsx\";\nimport React from 'react';\nimport { Card, Spinner, Button } from 'react-bootstrap';\nimport Subrules from './Subrules';\n\nclass Rules extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false\n    };\n    this.generateRules = this.generateRules.bind(this);\n  }\n\n  generateRules() {\n    let rule = this.props.rules;\n\n    if (!Array.isArray(rule)) {\n      rule = [rule];\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    }, rule.map(rule => /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Subrules, {\n      ruleName: rule.name,\n      ruleTag: rule.tag,\n      callBackendNow: this.props.callBackendNow,\n      selectedModules: this.props.selectedModules,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 45\n      }\n    }), rule.sub && /*#__PURE__*/React.createElement(Rules, {\n      rules: rule.sub,\n      callBackendNow: this.props.callBackendNow,\n      selectedModules: this.props.selectedModules,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 49\n      }\n    }))));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, this.generateRules());\n  }\n\n}\n\nexport default Rules;","map":{"version":3,"sources":["/Users/frisciliasultan/Documents/Orbital/client/src/Pages/Module Planner Page/Rules.jsx"],"names":["React","Card","Spinner","Button","Subrules","Rules","Component","constructor","props","state","isLoading","generateRules","bind","rule","rules","Array","isArray","map","name","tag","callBackendNow","selectedModules","sub","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,OAAf,EAAwBC,MAAxB,QAAsC,iBAAtC;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,KAAN,SAAoBL,KAAK,CAACM,SAA1B,CAAoC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACGC,MAAAA,SAAS,EAAE;AADd,KAAb;AAGA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACH;;AAEDD,EAAAA,aAAa,GAAG;AACZ,QAAIE,IAAI,GAAG,KAAKL,KAAL,CAAWM,KAAtB;;AAEA,QAAG,CAACC,KAAK,CAACC,OAAN,CAAcH,IAAd,CAAJ,EAAyB;AACrBA,MAAAA,IAAI,GAAG,CAACA,IAAD,CAAP;AACH;;AAED,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQA,IAAI,CAACI,GAAL,CAASJ,IAAI,iBACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AACI,MAAA,QAAQ,EAAEA,IAAI,CAACK,IADnB;AAEI,MAAA,OAAO,EAAEL,IAAI,CAACM,GAFlB;AAGI,MAAA,cAAc,EAAE,KAAKX,KAAL,CAAWY,cAH/B;AAII,MAAA,eAAe,EAAE,KAAKZ,KAAL,CAAWa,eAJhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAOMR,IAAI,CAACS,GAAL,iBACE,oBAAC,KAAD;AACI,MAAA,KAAK,EAAET,IAAI,CAACS,GADhB;AAEI,MAAA,cAAc,EAAE,KAAKd,KAAL,CAAWY,cAF/B;AAGI,MAAA,eAAe,EAAE,KAAKZ,KAAL,CAAWa,eAHhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARR,CADpB,CAFR,CADJ;AAsBH;;AAEDE,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKZ,aAAL,EADL,CADJ;AAKH;;AA9C+B;;AAiDpC,eAAeN,KAAf","sourcesContent":["import React from 'react';\nimport { Card, Spinner, Button } from 'react-bootstrap';\nimport Subrules from './Subrules';\n\nclass Rules extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n                        isLoading: false,\n                     }\n        this.generateRules = this.generateRules.bind(this);\n    }\n\n    generateRules() {\n        let rule = this.props.rules;\n\n        if(!Array.isArray(rule)) {\n            rule = [rule];   \n        } \n\n        return (\n            <div>\n                {   \n                    rule.map(rule => (\n                                        <ul>\n                                            <Subrules\n                                                ruleName={rule.name}\n                                                ruleTag={rule.tag}\n                                                callBackendNow={this.props.callBackendNow}\n                                                selectedModules={this.props.selectedModules}/>\n                                            \n                                            {(rule.sub && \n                                                <Rules\n                                                    rules={rule.sub}\n                                                    callBackendNow={this.props.callBackendNow}\n                                                    selectedModules={this.props.selectedModules}/>)}\n                                        </ul>\n                                    )\n                            )\n                }\n            </div>\n        )\n    }\n\n    render() {\n        return (\n            <div>\n                {this.generateRules()}\n            </div>\n        )\n    }\n}\n\nexport default Rules;\n"]},"metadata":{},"sourceType":"module"}