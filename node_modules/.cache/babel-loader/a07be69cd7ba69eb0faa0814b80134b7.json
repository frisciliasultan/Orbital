{"ast":null,"code":"var _jsxFileName = \"/Users/frisciliasultan/Documents/Orbital/client/src/Pages/Module Planner Page/Board.jsx\";\nimport React, { useState } from \"react\";\nimport AutoCompleteText from './AutocompleteText';\nimport { DropdownButton, Dropdown, Button } from 'react-bootstrap';\nimport ModuleCard from './Card';\nlet newModuleCodeTitle = [];\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.drop = e => {\n      e.preventDefault();\n      const card_id = e.dataTransfer.getData('card_id');\n      const card = document.getElementById(card_id);\n      card.style.display = 'block';\n      e.target.appendChild(card);\n    };\n\n    this.dragOver = e => {\n      e.preventDefault();\n    };\n\n    this.state = {\n      isTextBoxOpen: false,\n      moduleCodeTitle: []\n    };\n  }\n\n  handleButtonClick() {\n    this.setState({\n      isTextBoxOpen: !this.state.isTextBoxOpen\n    });\n  }\n\n  updateModuleCards(item) {\n    if (!newModuleCodeTitle.includes(item)) {\n      newModuleCodeTitle.push(item);\n      setModuleCodeTitle(newModuleCodeTitle);\n    }\n\n    newModuleCodeTitle.map(item => console.log('new' + item));\n    moduleCodeTitle.map(item => console.log('hey' + item));\n  }\n\n  generateModuleCards() {\n    console.log('called');\n    return moduleCodeTitle.map((item, i) => {\n      return /*#__PURE__*/React.createElement(ModuleCard, {\n        id: \"card_\" + i,\n        className: \"card\",\n        draggable: \"true\",\n        title: item,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: this.props.id,\n      onDrop: drop,\n      onDragOver: dragOver,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }, props.year), generateModuleCards(), isTextBoxOpen && /*#__PURE__*/React.createElement(AutoCompleteText, {\n      updateModuleCards: updateModuleCards,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 35\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      onClick: handleButtonClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }, \"Add Module\"));\n  }\n\n}\n\nexport default Board;","map":{"version":3,"sources":["/Users/frisciliasultan/Documents/Orbital/client/src/Pages/Module Planner Page/Board.jsx"],"names":["React","useState","AutoCompleteText","DropdownButton","Dropdown","Button","ModuleCard","newModuleCodeTitle","Board","Component","constructor","props","drop","e","preventDefault","card_id","dataTransfer","getData","card","document","getElementById","style","display","target","appendChild","dragOver","state","isTextBoxOpen","moduleCodeTitle","handleButtonClick","setState","updateModuleCards","item","includes","push","setModuleCodeTitle","map","console","log","generateModuleCards","i","render","id","year"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport AutoCompleteText from './AutocompleteText';\nimport { DropdownButton, Dropdown, Button } from 'react-bootstrap';\nimport ModuleCard from './Card';\n\nlet newModuleCodeTitle = [];\n\nclass Board extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isTextBoxOpen: false,\n            moduleCodeTitle: []};\n        \n    }\n    \n    \n    drop = e => {\n        e.preventDefault();\n        const card_id = e.dataTransfer.getData('card_id');\n        const card = document.getElementById(card_id);\n        card.style.display = 'block';\n\n        e.target.appendChild(card);\n    }\n\n    dragOver = e => {\n        e.preventDefault();\n    }\n\n    handleButtonClick() {\n        this.setState({isTextBoxOpen: !this.state.isTextBoxOpen});\n     }\n\n    updateModuleCards(item) {\n        if (!newModuleCodeTitle.includes(item)) {\n            newModuleCodeTitle.push(item);\n            setModuleCodeTitle(newModuleCodeTitle);\n        }\n        newModuleCodeTitle.map((item) => console.log('new' + item));\n        moduleCodeTitle.map((item) => console.log('hey' + item));\n        \n    }\n\n    generateModuleCards() {\n        console.log('called');\n        return(\n            moduleCodeTitle.map((item, i) => {\n                return (\n                    <ModuleCard\n                        id={\"card_\" + i}\n                        className=\"card\"\n                        draggable=\"true\"\n                        title={item}>\n                    </ModuleCard>\n                )\n            })\n            \n        )\n        \n    }\n\n    render() {\n        return (\n            <div   \n                id={this.props.id}\n                onDrop={drop}\n                onDragOver={dragOver}\n            >\n                <h3>{props.year}</h3>\n                {generateModuleCards()}\n                {isTextBoxOpen && <AutoCompleteText updateModuleCards={updateModuleCards}/>}\n                \n                <Button onClick={handleButtonClick}>Add Module</Button>\n            </div>\n        )\n    }\n    \n}\n\nexport default Board;"]},"metadata":{},"sourceType":"module"}