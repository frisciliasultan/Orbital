{"ast":null,"code":"var _jsxFileName = \"/Users/frisciliasultan/Documents/Orbitalhosting/src/utils/commonFunctions.js\";\nimport React from \"react\";\nimport Options from \"../Settings/Options\";\nimport SubOptions from \"../Settings/SubOptions\";\nimport { Table } from \"../Pages/Module Selection Page/Module Table\";\nexport const generateOptions = (optionList, category, index) => {\n  // let value;\n  // if(category === 'grade') {\n  //     value = option.grade;\n  // }\n  if (category === \"grade\") {\n    return optionList.map(option => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: option.grade,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 17\n        }\n      }, option.grade);\n    });\n  } else if (category === 'faculty') {\n    return optionList.map(option => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: option.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }\n      }, option.name);\n    });\n  } else if (category === 'residence') {\n    return optionList.map(option => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: option.fullName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }\n      }, option.fullName);\n    });\n  } else if (category === 'major') {\n    return optionList.map(option => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: option.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }\n      }, option.name);\n    });\n  } else if (category === 'test') {\n    return optionList.map(option => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(SubOptions, {\n        name: \"faculty\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"option\", {\n        value: option.fullName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }\n      }));\n    });\n  }\n\n  return optionList.map(option => {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      value: option,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, option);\n  });\n};\nexport const handleSaveClick = props => {\n  const userData = {\n    modPlan: props.modplan.selectedModules,\n    residential: props.settings.userInfo.residential,\n    faculty: props.settings.userInfo.faculty,\n    facIndex: props.settings.userInfo.facIndex,\n    major: props.settings.userInfo.major,\n    majorIndex: props.settings.userInfo.majorIndex,\n    specialisation: props.settings.userInfo.specialisation,\n    matriculationYear: props.settings.userInfo.matriculationYear,\n    targetGradYear: props.settings.userInfo.targetGradYear,\n    cap: props.cap.cap,\n    targetCap: props.cap.targetCap\n  };\n  props.updateSettings(userData);\n}; // generate Year Cards in Module Planner Page / Tables in Mod Info Page\n\nexport const generateObject = (matriYear, gradYear, category) => {\n  const matYear = Number(matriYear.substr(0, 4));\n  const noOfYear = Number(gradYear.substr(5, 4)) - matYear;\n  let display = [];\n\n  if (category === \"yearDisplay\") {\n    for (let i = 1; i <= noOfYear; i++) {\n      const start = matYear + i - 1;\n      display.push({\n        year: `Year ${i}`,\n        AY: `${start}/${start + 1}`\n      });\n    }\n\n    return display.map(object => {\n      return /*#__PURE__*/React.createElement(YearDisplay, {\n        year: object.year,\n        AY: object.AY,\n        module: module,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }\n      });\n    });\n  } else {\n    let sem1;\n    let sem2;\n\n    for (let i = 1; i < noOfYear * 2; i += 2) {\n      const year = Math.ceil(i / 2);\n      sem1 = `Year ${year} Semester 1`;\n      sem2 = `Year ${year} Semester 2`;\n      display[i - 1] = sem1;\n      display[i] = sem2;\n    }\n\n    if (category === \"semesterOptions\") {\n      return display;\n    } else {\n      return display.map(sem => {\n        return /*#__PURE__*/React.createElement(Table, {\n          title: sem,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }\n        });\n      });\n    }\n  }\n};","map":{"version":3,"sources":["/Users/frisciliasultan/Documents/Orbitalhosting/src/utils/commonFunctions.js"],"names":["React","Options","SubOptions","Table","generateOptions","optionList","category","index","map","option","grade","name","fullName","handleSaveClick","props","userData","modPlan","modplan","selectedModules","residential","settings","userInfo","faculty","facIndex","major","majorIndex","specialisation","matriculationYear","targetGradYear","cap","targetCap","updateSettings","generateObject","matriYear","gradYear","matYear","Number","substr","noOfYear","display","i","start","push","year","AY","object","module","sem1","sem2","Math","ceil","sem"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Options from \"../Settings/Options\";\nimport SubOptions from \"../Settings/SubOptions\";\nimport { Table } from \"../Pages/Module Selection Page/Module Table\";\n\nexport const generateOptions = (optionList, category, index) => {\n    // let value;\n\n    // if(category === 'grade') {\n    //     value = option.grade;\n    // }\n    if(category === \"grade\") {\n        return optionList.map((option) => {\n            return (\n                <option value={option.grade}>\n                {option.grade}\n                </option>\n            );\n        })\n    } else if (category === 'faculty') {\n            return optionList.map((option) => {\n                return (\n                    <option value={option.name}>\n                    {option.name}\n                    </option>\n                );\n            })\n    } else if (category === 'residence') {\n        return optionList.map((option) => {\n            return (\n                <option value={option.fullName}>\n                {option.fullName}\n                </option>\n            );\n        })\n    } else if (category === 'major') {\n        return optionList.map((option) => {\n            return (\n                <option value={option.name}>\n                {option.name}\n                </option>\n            );\n        })\n    } \n\n    else if (category === 'test') {\n        return optionList.map((option) => {\n            return (\n                <div>\n                <SubOptions \n                    name=\"faculty\"\n                    />\n\n                <option value={option.fullName}>\n                    \n                </option>\n                </div>\n            );\n        })\n    }\n\n    return optionList.map((option) => {\n        return (\n            <option value={option}>\n            {option}\n            </option>\n        );\n    });\n}\n\nexport const handleSaveClick = (props) => {\n    const userData = {\n        modPlan: props.modplan.selectedModules,\n        residential: props.settings.userInfo.residential,\n        faculty: props.settings.userInfo.faculty,\n        facIndex: props.settings.userInfo.facIndex,\n        major: props.settings.userInfo.major,\n        majorIndex: props.settings.userInfo.majorIndex,\n        specialisation: props.settings.userInfo.specialisation,\n        matriculationYear: props.settings.userInfo.matriculationYear,\n        targetGradYear: props.settings.userInfo.targetGradYear,\n        cap: props.cap.cap,\n        targetCap: props.cap.targetCap\n    }\n\n    props.updateSettings(userData);\n}\n\n// generate Year Cards in Module Planner Page / Tables in Mod Info Page\nexport const generateObject = (matriYear, gradYear, category) => {\n    const matYear = Number(matriYear.substr(0, 4));\n    const noOfYear = Number(gradYear.substr(5, 4)) - matYear;\n    let display = [];\n\n    if(category === \"yearDisplay\") {\n        for(let i = 1; i <= noOfYear; i++) {\n            const start = matYear + i - 1;\n            display.push({\n                year: `Year ${i}`,\n                AY: `${start}/${start + 1}`\n            })\n        }\n\n        return display.map((object) => {\n                return (\n                    <YearDisplay\n                        year={object.year}\n                        AY={object.AY}\n                        module={module} />\n                )\n            })\n    } else {\n        let sem1;\n        let sem2;\n\n        for(let i = 1; i < (noOfYear * 2); i += 2) {\n            const year = Math.ceil(i / 2);\n            sem1 = `Year ${year} Semester 1`;\n            sem2 = `Year ${year} Semester 2`;\n            display[i - 1] = sem1;\n            display[i] = sem2;\n        }\n        \n        if(category === \"semesterOptions\") {\n            return display;\n        } else {\n            return display.map((sem) => {\n                return (\n                        <Table\n                            title={sem} />\n                )\n            })\n        }\n    } \n}"]},"metadata":{},"sourceType":"module"}