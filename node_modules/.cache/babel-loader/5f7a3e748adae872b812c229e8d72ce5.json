{"ast":null,"code":"var _jsxFileName = \"/Users/frisciliasultan/Documents/Orbital/client/src/App.js\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport React from \"react\";\nimport { ModuleList } from \"./Components/ModuleList\";\nimport { Dropdown } from './Containers/Dropdown';\nimport { Table } from './Components/Module Table';\nimport { Login, Register } from './Pages/Login/LoginPage';\nimport \"./App.scss\";\nimport { Switch, Route, useRouteMatch, useParams } from \"react-router-dom\";\nimport { Nav } from \"./Pages/navbar\";\nlet totalGEMMCs = 0;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.callBackendAPI = async () => {\n      const response = await fetch('http://localhost:5001/');\n      const body = await response.json();\n\n      if (response.status !== 200) {\n        throw Error(body.message);\n      }\n\n      return body;\n    };\n\n    this.state = {\n      data: null,\n      faculty: null,\n      major: null,\n      specialisation: null,\n      residenceOptions: ['N/A', 'CAPT', 'RC4', 'RVRC', 'Tembusu', 'USP'],\n      residence: 'N/A',\n      dummyfac: [{\n        'Business': [{\n          'Business Administration': ['A', 'B']\n        }, {\n          'Accountancy': ['C', 'D']\n        }]\n      }, {\n        'FASS': [{\n          'C': ['N/A']\n        }, {\n          'D': ['N/A']\n        }]\n      }, {\n        'Computing': [{\n          'Computer Science': ['N/A']\n        }, {\n          'Business Analytics': ['N/A']\n        }]\n      }],\n      dummymodules: [{\n        GEMs: [{\n          \"GEH: Human Culture\": [{\n            code: 'GEH1001',\n            name: 'Globalisation and New Media',\n            MCs: 4,\n            link: \"https://nusmods.com/modules/MA1521/calculus-for-computing\"\n          }, {\n            code: 'GEH1002',\n            name: \"Economic Issues in Dev World\",\n            MCs: 2,\n            link: \"https://nusmods.com/modules/MA1521/calculus-for-computing\"\n          }, {\n            code: 'GEH23420',\n            name: 'lafjkljwe',\n            MCs: 4,\n            link: \"https://nusmods.com/modules/MA1521/calculus-for-computing\"\n          }]\n        }, //end of first object member\n        {\n          \"GES: Singapore Studies\": [{\n            code: 'GES324230',\n            name: 'adkfjkjfklasj',\n            MCs: 4,\n            link: 'asdfew'\n          }]\n        } //end of object 2\n        ]\n      }, {\n        coreModules: [{\n          code: \"MA1521\",\n          name: \"Calculus for Computing\",\n          MCs: 4,\n          link: \"https://nusmods.com/modules/MA1521/calculus-for-computing\"\n        }, {\n          code: \"MA1531\",\n          name: \"Calculus not Computing\",\n          MCs: 4,\n          link: \"https://nusmods.com/modules/MA1521/calculus-for-computing\"\n        }, {\n          code: \"MA1531\",\n          name: \"Calculus not Computing\",\n          MCs: 4,\n          link: \"https://nusmods.com/modules/MA1521/calculus-for-computing\"\n        }]\n      }, {\n        specialisationModules: [{\n          code: \"MA1531\",\n          name: \"Calculus not Computing\",\n          MCs: 4,\n          link: \"https://nusmods.com/modules/MA1521/calculus-for-computing\"\n        }, {\n          code: \"MA1531\",\n          name: \"Calculus not Computing\",\n          MCs: 4,\n          link: \"https://nusmods.com/modules/MA1521/calculus-for-computing\"\n        }]\n      }, {\n        unrestrictedModules: [{\n          code: \"MA1521\",\n          name: \"Calculus for Computing\",\n          MCs: 4,\n          link: \"https://nusmods.com/modules/MA1521/calculus-for-computing\"\n        }]\n      }],\n      dummyrules: [{\n        name: \"ULR\",\n        tag: \"ULR_2018\",\n        requirements: {\n          \"and\": [{\n            name: \"Complete Quantitative Reasoning\",\n            tag: \"GER\",\n            requirements: {\n              \"and\": [{\n                name: \"Complete GER1000\",\n                tag: \"GER1000\",\n                module: {\n                  code: \"GER1000\",\n                  name: \"Quantitative Reasoning\",\n                  MCs: 4\n                }\n              }]\n            }\n          }, {\n            name: \"Complete Human Culture\",\n            tag: \"GEH\",\n            requirements: {\n              \"or\": [{\n                name: \"Complete Globalisation and New Media\",\n                tag: \"GEH1001\",\n                module: {\n                  code: \"GEH1001\",\n                  name: \"Globalisation and New Media\",\n                  MCs: 4\n                }\n              }, {\n                name: \"Complete Economic Issues in Dev World\",\n                tag: \"GEH1001\",\n                module: {\n                  code: \"GEH1001\",\n                  name: \"Globalisation and New Media\",\n                  MCs: 4\n                }\n              }]\n            }\n          }]\n        }\n      }, {\n        name: \"Core Modules\",\n        tag: \"Core Modules 2018\",\n        requirement: {\n          \"and\": [{\n            name: \"Computer Science Foundation\",\n            tag: \"cs_foundation_2018\",\n            requirement: {\n              \"and\": [{\n                name: \"Complete GER1000\",\n                tag: \"GER1000\",\n                module: {\n                  code: \"GER1000\",\n                  name: \"Quantitative Reasoning\",\n                  MCs: 4\n                }\n              }, {\n                name: \"Complete GER1000\",\n                tag: \"GER1000\",\n                module: {\n                  code: \"GER1000\",\n                  name: \"Quantitative Reasoning\",\n                  MCs: 4\n                }\n              }, {\n                name: \"Complete GER1000\",\n                tag: \"GER1000\",\n                module: {\n                  code: \"GER1000\",\n                  name: \"Quantitative Reasoning\",\n                  MCs: 4\n                }\n              }, {\n                name: \"Complete GER1000\",\n                tag: \"GER1000\",\n                module: {\n                  code: \"GER1000\",\n                  name: \"Quantitative Reasoning\",\n                  MCs: 4\n                }\n              }]\n            }\n          }, {\n            name: \"Computer Science Breadth and Depth\",\n            tag: \"cs_foundation_2018\",\n            requirement: {\n              \"condition\": {\n                \"at least\": [{\n                  rule: \"CS Focus Area\"\n                }, {\n                  MCs: 12,\n                  minLevel: 4000\n                }]\n              },\n              \"or\": [{\n                name: \"CS Focus Area\",\n                tag: \"GER1000\",\n                requirement: {\n                  \"or\": [{\n                    name: \"Algorithms and Theory\",\n                    tag: \"algorithms\",\n                    requirement: {\n                      \"condition\": {\n                        \"at least\": [{\n                          number: 3,\n                          level: \"any\"\n                        }, {\n                          number: 1,\n                          level: 4000\n                        }]\n                      },\n                      \"or\": [{\n                        name: \"Ger1000\",\n                        tag: \"GER1000\",\n                        module: {\n                          code: \"GER1000\",\n                          name: \"Quantitative Reasoning\",\n                          MCs: 4\n                        }\n                      }, {\n                        name: \"Complete GER1000\",\n                        tag: \"GER1000\",\n                        module: {\n                          code: \"GER1000\",\n                          name: \"Quantitative Reasoning\",\n                          MCs: 4\n                        }\n                      }, {\n                        name: \"Complete GER1000\",\n                        tag: \"GER1000\",\n                        module: {\n                          code: \"GER1000\",\n                          name: \"Quantitative Reasoning\",\n                          MCs: 4\n                        }\n                      }, {\n                        name: \"Complete GER1000\",\n                        tag: \"GER1000\",\n                        module: {\n                          code: \"GER1000\",\n                          name: \"Quantitative Reasoning\",\n                          MCs: 4\n                        }\n                      }, {\n                        name: \"Complete GER1000\",\n                        tag: \"GER1000\",\n                        module: {\n                          code: \"GER1000\",\n                          name: \"Quantitative Reasoning\",\n                          MCs: 4\n                        }\n                      }]\n                    }\n                  }]\n                }\n              }, {\n                name: \"CP-coded\",\n                tag: \"CP-coded\",\n                requirement: {\n                  \"condition\": {\n                    \"at most\": {\n                      MCs: 12,\n                      minLevel: 4000\n                    }\n                  },\n                  \"or\": [{\n                    name: \"Complete GER1000\",\n                    tag: \"GER1000\",\n                    module: {\n                      code: \"GER1000\",\n                      name: \"Quantitative Reasoning\",\n                      MCs: 4\n                    }\n                  }, {\n                    name: \"Complete GER1000\",\n                    tag: \"GER1000\",\n                    module: {\n                      code: \"GER1000\",\n                      name: \"Quantitative Reasoning\",\n                      MCs: 4\n                    }\n                  }]\n                }\n              }]\n            }\n          }, {\n            name: \"Industrial Experience Requirement\",\n            tag: \"cs_foundation_2018\",\n            requirement: {}\n          }, {\n            name: \"IT Professionalism\",\n            tag: \"cs_foundation_2018\",\n            requirement: {}\n          }]\n        }\n      }, {\n        unrestrictedModules: {}\n      }],\n      summary: [{\n        cat: \"General Elective Module\",\n        MCs: 0\n      }, {\n        cat: \"Core Module\",\n        MCs: 0\n      }, {\n        cat: \"Specialisation Module\",\n        MCs: 0\n      }, {\n        cat: \"Unrestricted Module\",\n        MCs: 0\n      }],\n      grandTotal: 0,\n      isLogginActive: true //TEMPORARY\n\n    };\n    this.changeFaculty = this.changeFaculty.bind(this);\n    this.changeMajor = this.changeMajor.bind(this);\n    this.changeSpecialisation = this.changeSpecialisation.bind(this);\n    this.changeResidence = this.changeResidence.bind(this);\n    this.generateOptions = this.generateOptions.bind(this);\n    this.makeTable = this.makeTable.bind(this);\n    this.generateDropDown = this.generateDropDown.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.countModule = this.countModule.bind(this);\n    this.getDropdownMCs = this.getDropdownMCs.bind(this);\n    this.changeLoginState = this.changeLoginState.bind(this);\n    this.receiveModuleRules = this.receiveModuleRules.bind(this);\n  }\n\n  componentDidMount() {\n    // Call our fetch function below once the component mounts\n    this.callBackendAPI().then(res => this.setState({\n      data: res.express\n    })).catch(err => console.log(err));\n  } // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n\n\n  //receive the choice of faculty from options.js and change state of faculty\n  changeFaculty(value, index) {\n    this.setState({\n      faculty: value,\n      facIndex: index,\n      major: null\n    });\n  }\n\n  changeMajor(value, index) {\n    this.setState({\n      major: value,\n      majorIndex: index\n    });\n  }\n\n  changeSpecialisation(value) {\n    this.setState({\n      specialisation: value\n    });\n  }\n\n  changeResidence(value) {\n    this.setState({\n      residence: value\n    });\n  } //turn array of choices into options dropdown\n\n\n  generateOptions(choices) {\n    let facIndex = this.state.facIndex;\n\n    if (choices === 'faculty') {\n      return this.state.dummyfac.map(obj => {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          value: Object.keys(obj),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 7\n          }\n        }, Object.keys(obj));\n      });\n    } else if (choices === 'major') {\n      if (this.state.faculty) {\n        return this.state.dummyfac[facIndex][this.state.faculty].map(obj => {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            value: Object.keys(obj),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 21\n            }\n          }, Object.keys(obj));\n        });\n      }\n    } else if (choices === 'specialisation') {\n      if (this.state.major && this.state.faculty) {\n        return this.state.dummyfac[facIndex][this.state.faculty][this.state.majorIndex][this.state.major].map(item => {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 21\n            }\n          }, item);\n        });\n      }\n    } else {\n      return this.state.residenceOptions.map(obj => {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          value: obj,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 7\n          }\n        }, obj);\n      });\n    }\n  } //takes in array of objects for modules and return a table\n\n\n  makeTable(item, moduleCat, index) {\n    if (item === 'summary') {\n      return this.state.summary.map(module => {\n        const {\n          cat,\n          MCs\n        } = module;\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"tr\", {\n          key: cat,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 13\n          }\n        }, cat), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 13\n          }\n        }, MCs + 'MCs')));\n      });\n    } else {\n      let propfunction;\n\n      if (item === 'coreModule') {\n        propfunction = this.state.dummymodules[1].coreModules;\n      } else if (item === 'specialisation') {\n        propfunction = this.state.dummymodules[2].specialisationModules;\n      } else if (item === 'unrestricted') {\n        propfunction = this.state.dummymodules[3].unrestrictedModules;\n      } else {\n        propfunction = this.state.dummymodules[0].GEMs[index][moduleCat];\n      }\n\n      return propfunction.map(module => {\n        const {\n          code,\n          name,\n          MCs\n        } = module;\n        const desc = name.replace(/ /g, '-');\n        const link = `https://nusmods.com/modules/${code}/${desc}`;\n\n        if (item === 'GEM') {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(\"tr\", {\n            key: code,\n            \"data-toggle\": \"tooltip\",\n            title: \"Click row to select module, click on the module code for more information\",\n            onClick: () => this.handleClick(code, name, MCs, moduleCat),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(\"a\", {\n            href: link,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            className: \"text-decoration-none\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 21\n            }\n          }, code)), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 428,\n              columnNumber: 21\n            }\n          }, name), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 21\n            }\n          }, MCs + 'MCs')));\n        } else {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(\"tr\", {\n            key: code,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(\"a\", {\n            href: link,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            className: \"text-white text-decoration-none\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 21\n            }\n          }, code), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 442,\n              columnNumber: 21\n            }\n          }, name), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 21\n            }\n          }, MCs + 'MCs'))));\n        }\n      });\n    }\n  }\n\n  generateDropDown() {\n    let title;\n\n    if (this.state.residence === 'N/A') {\n      title = /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 15\n        }\n      }, \"General Elective Modules\");\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 15\n      }\n    }, title, this.state.dummymodules[0].GEMs.map((module, i) => {\n      const GEMCat = Object.keys(module)[0];\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Dropdown, {\n        cat: GEMCat,\n        title: this.state.GEMTitle,\n        moduleCat: this.state.moduleCat,\n        MCTemp: this.state.MCTemp,\n        sendData: this.getDropdownMCs,\n        id: \"GEM_\" + i,\n        target: \"GEM_\" + i,\n        module: this.makeTable('GEM', GEMCat, i),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 9\n        }\n      }));\n    }));\n  }\n\n  handleClick(code, name, MCs, moduleCat) {\n    const title = code + ': ' + name;\n    this.setState({\n      GEMTitle: title,\n      MCTemp: MCs,\n      moduleCat: moduleCat\n    });\n  }\n\n  countModule() {\n    const GEMs = this.state.totalGEMMCs;\n    const coreModules = this.state.dummymodules[1].coreModules.reduce((currentTotal, next) => {\n      return currentTotal + next.MCs;\n    }, 0);\n    const specialisationModules = this.state.dummymodules[2].specialisationModules.reduce((currentTotal, next) => {\n      return currentTotal + next.MCs;\n    }, 0);\n    const unrestrictedModules = this.state.dummymodules[3].unrestrictedModules.reduce((currentTotal, next) => {\n      return currentTotal + next.MCs;\n    }, 0);\n    const grandTotal = GEMs + coreModules + specialisationModules + unrestrictedModules;\n    this.setState({\n      summary: [{\n        cat: \"General Elective Module\",\n        MCs: GEMs\n      }, {\n        cat: \"Core Module\",\n        MCs: coreModules\n      }, {\n        cat: \"Specialisation Module\",\n        MCs: specialisationModules\n      }, {\n        cat: \"Unrestricted Module\",\n        MCs: unrestrictedModules\n      }],\n      grandTotal: grandTotal\n    });\n  }\n\n  getDropdownMCs(MCs) {\n    totalGEMMCs += MCs;\n    this.setState({\n      totalGEMMCs: totalGEMMCs\n    }, () => this.countModule());\n  }\n\n  receiveModuleRules(rules) {\n    this.setState({\n      rules: rules\n    });\n  }\n\n  changeLoginState() {\n    const {\n      isLogginActive\n    } = this.state;\n\n    if (isLogginActive) {\n      this.rightSide.classList.remove(\"right\");\n      this.rightSide.classList.add(\"left\");\n    } else {\n      this.rightSide.classList.remove(\"left\");\n      this.rightSide.classList.add(\"right\");\n    }\n\n    this.setState(prevState => ({\n      isLogginActive: !prevState.isLogginActive\n    }));\n  }\n\n  render() {\n    const {\n      isLogginActive\n    } = this.state;\n    const current = isLogginActive ? \"Register\" : \"Login\";\n    const currentActive = isLogginActive ? \"login\" : \"register\";\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 537,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 538,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 539,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(LoginPage, {\n      loginStatus: this.state.isLogginActive,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 540,\n        columnNumber: 16\n      }\n    }))));\n  }\n\n}\n\nconst RightSide = props => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"right-side\",\n    ref: props.containerRef,\n    onClick: props.onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 551,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inner-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 556,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 9\n    }\n  }, props.current)));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/frisciliasultan/Documents/Orbital/client/src/App.js"],"names":["$","Popper","React","ModuleList","Dropdown","Table","Login","Register","Switch","Route","useRouteMatch","useParams","Nav","totalGEMMCs","App","Component","constructor","props","callBackendAPI","response","fetch","body","json","status","Error","message","state","data","faculty","major","specialisation","residenceOptions","residence","dummyfac","dummymodules","GEMs","code","name","MCs","link","coreModules","specialisationModules","unrestrictedModules","dummyrules","tag","requirements","module","requirement","rule","minLevel","number","level","summary","cat","grandTotal","isLogginActive","changeFaculty","bind","changeMajor","changeSpecialisation","changeResidence","generateOptions","makeTable","generateDropDown","handleClick","countModule","getDropdownMCs","changeLoginState","receiveModuleRules","componentDidMount","then","res","setState","express","catch","err","console","log","value","index","facIndex","majorIndex","choices","map","obj","Object","keys","item","moduleCat","propfunction","desc","replace","title","i","GEMCat","GEMTitle","MCTemp","reduce","currentTotal","next","rules","rightSide","classList","remove","add","prevState","render","current","currentActive","RightSide","containerRef","onClick"],"mappings":"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","sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport React from \"react\";\nimport { ModuleList } from \"./Components/ModuleList\";\nimport { Dropdown } from './Containers/Dropdown';\nimport { Table } from './Components/Module Table';\nimport { Login, Register } from './Pages/Login/LoginPage'\nimport \"./App.scss\";\nimport {\n  Switch,\n  Route,\n  useRouteMatch,\n  useParams\n} from \"react-router-dom\";\nimport { Nav } from \"./Pages/navbar\";\n\n\nlet totalGEMMCs = 0;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: null,\n      faculty: null,\n      \n      major: null,\n      specialisation: null,\n      residenceOptions: ['N/A','CAPT', 'RC4', 'RVRC','Tembusu', 'USP'],\n      residence: 'N/A',\n      dummyfac: [{'Business': [{'Business Administration': ['A', 'B']},\n                                {'Accountancy': ['C', 'D']}]},\n                {'FASS': [{'C': ['N/A']},\n                          {'D': ['N/A']}]},\n                {\n                  'Computing': [\n                                  {'Computer Science': ['N/A']},\n                                  {'Business Analytics': ['N/A']}\n                  ]\n                }],\n      dummymodules: [{GEMs:[\n        {\"GEH: Human Culture\": [{code: 'GEH1001', \n                                name: 'Globalisation and New Media', \n                                MCs: 4, \n                                link: \"https://nusmods.com/modules/MA1521/calculus-for-computing\"},\n                                {code: 'GEH1002', \n                                name: \"Economic Issues in Dev World\", \n                                MCs:2, \n                                link: \"https://nusmods.com/modules/MA1521/calculus-for-computing\"},\n                                {code: 'GEH23420', \n                                name: 'lafjkljwe', \n                                MCs: 4, \n                                link: \"https://nusmods.com/modules/MA1521/calculus-for-computing\"}]}, //end of first object member\n        \n        {\"GES: Singapore Studies\": [{code: 'GES324230', \n                                    name: 'adkfjkjfklasj', \n                                    MCs: 4, \n                                    link: 'asdfew'}]} //end of object 2\n        ]},\n        {coreModules: [\n          {code: \"MA1521\",\n           name: \"Calculus for Computing\",\n           MCs: 4,\n           link: \"https://nusmods.com/modules/MA1521/calculus-for-computing\"},\n           {code: \"MA1531\",\n           name: \"Calculus not Computing\",\n           MCs: 4,\n           link: \"https://nusmods.com/modules/MA1521/calculus-for-computing\"},\n           {code: \"MA1531\",\n           name: \"Calculus not Computing\",\n           MCs: 4,\n           link: \"https://nusmods.com/modules/MA1521/calculus-for-computing\"}\n          ]},\n        {specialisationModules: [\n          {code: \"MA1531\",\n           name: \"Calculus not Computing\",\n           MCs: 4,\n           link: \"https://nusmods.com/modules/MA1521/calculus-for-computing\"},\n           {code: \"MA1531\",\n           name: \"Calculus not Computing\",\n           MCs: 4,\n           link: \"https://nusmods.com/modules/MA1521/calculus-for-computing\"}\n        ]},\n        {unrestrictedModules: [{code: \"MA1521\",\n      name: \"Calculus for Computing\",\n      MCs: 4,\n      link: \"https://nusmods.com/modules/MA1521/calculus-for-computing\"},\n      ]}\n      ],\n      dummyrules: [{name: \"ULR\",\n                    tag: \"ULR_2018\",\n                    requirements: {\"and\": [{name: \"Complete Quantitative Reasoning\",\n                                          tag: \"GER\",\n                                          requirements: {\"and\": [\n                                                                {name: \"Complete GER1000\",\n                                                                 tag: \"GER1000\",\n                                                                 module: {code: \"GER1000\",\n                                                                          name: \"Quantitative Reasoning\",\n                                                                          MCs: 4}\n                                                                }\n                                                              ]\n                                                        }\n                                            },\n\n                                            {name: \"Complete Human Culture\",\n                                             tag: \"GEH\",\n                                             requirements: {\"or\": [{name: \"Complete Globalisation and New Media\",\n                                                                    tag: \"GEH1001\",\n                                                                  module: {code: \"GEH1001\",\n                                                                           name: \"Globalisation and New Media\",\n                                                                           MCs: 4}\n                                                                    },\n                                 \n                                                                    {name: \"Complete Economic Issues in Dev World\",\n                                                                     tag: \"GEH1001\",\n                                                                     module: {code: \"GEH1001\",\n                                                                              name: \"Globalisation and New Media\",\n                                                                              MCs: 4}\n                                                                             }\n                                                                    ]\n                                                            },\n                                            }\n                                          ]\n                                    }\n                    },\n\n                   {name: \"Core Modules\",\n                    tag: \"Core Modules 2018\",\n                    requirement: {\"and\": [\n                                          {name: \"Computer Science Foundation\",\n                                           tag: \"cs_foundation_2018\",\n                                           requirement: {\"and\": [\n                                                                  {name: \"Complete GER1000\",\n                                                                  tag: \"GER1000\",\n                                                                  module: {code: \"GER1000\",\n                                                                           name: \"Quantitative Reasoning\",\n                                                                           MCs: 4}\n                                                                  },\n\n                                                                  {name: \"Complete GER1000\",\n                                                                   tag: \"GER1000\",\n                                                                   module: {code: \"GER1000\",\n                                                                            name: \"Quantitative Reasoning\",\n                                                                            MCs: 4}\n                                                                  },\n\n                                                                  {name: \"Complete GER1000\",\n                                                                 tag: \"GER1000\",\n                                                                 module: {code: \"GER1000\",\n                                                                          name: \"Quantitative Reasoning\",\n                                                                          MCs: 4}\n                                                                },\n\n                                                                {name: \"Complete GER1000\",\n                                                                 tag: \"GER1000\",\n                                                                 module: {code: \"GER1000\",\n                                                                          name: \"Quantitative Reasoning\",\n                                                                          MCs: 4}\n                                                                }\n                                                                ]\n                                                        }\n                                            },\n\n                                           {name: \"Computer Science Breadth and Depth\",\n                                           tag: \"cs_foundation_2018\",\n                                           requirement: {\"condition\": {\"at least\": [{rule: \"CS Focus Area\"}, {MCs: 12, minLevel: 4000}]},\n                                             \n                                            \"or\": [ {name: \"CS Focus Area\",\n                                                                   tag: \"GER1000\",\n                                                                   requirement: { \n                                                                                  \"or\" : [\n                                                                                            {\n                                                                                              name: \"Algorithms and Theory\",\n                                                                                              tag: \"algorithms\",\n                                                                                              requirement: { \"condition\": {\"at least\": [{number: 3,\n                                                                                                                                        level: \"any\"},\n                                                                                                                                        {number: 1,\n                                                                                                                                        level: 4000}\n                                                                                                                                       ] \n                                                                                                                          },\n                                                                                                              \"or\": [{name: \"Ger1000\",\n                                                                                                                    tag: \"GER1000\",\n                                                                                                                    module: {code: \"GER1000\",\n                                                                                                                             name: \"Quantitative Reasoning\",\n                                                                                                                             MCs: 4}\n                                                                                                                            \n                                                                                                                     },\n                                                                                                                     {name: \"Complete GER1000\",\n                                                                                                                      tag: \"GER1000\",\n                                                                                                                      module: {code: \"GER1000\",\n                                                                                                                              name: \"Quantitative Reasoning\",\n                                                                                                                              MCs: 4}\n                                                                                                                            \n                                                                                                                     },\n                                                                                                                     {name: \"Complete GER1000\",\n                                                                                                                    tag: \"GER1000\",\n                                                                                                                    module: {code: \"GER1000\",\n                                                                                                                             name: \"Quantitative Reasoning\",\n                                                                                                                             MCs: 4}\n                                                                                                                            \n                                                                                                                     },\n                                                                                                                     {name: \"Complete GER1000\",\n                                                                                                                    tag: \"GER1000\",\n                                                                                                                    module: {code: \"GER1000\",\n                                                                                                                             name: \"Quantitative Reasoning\",\n                                                                                                                             MCs: 4}\n                                                                                                                            \n                                                                                                                     },\n                                                                                                                     {name: \"Complete GER1000\",\n                                                                                                                      tag: \"GER1000\",\n                                                                                                                      module: {code: \"GER1000\",\n                                                                                                                             name: \"Quantitative Reasoning\",\n                                                                                                                             MCs: 4}\n                                                                                                                              \n                                                                                                                     },\n                                                                                                                    ]\n                                                                                                            }\n                                                                                            }\n                                                                                          ]\n                                                                                        }\n                                                                                      },\n                                                                                      \n                                                                      {name: \"CP-coded\",\n                                                                       tag: \"CP-coded\",\n                                                                       requirement: {\"condition\": {\n                                                                                                    \"at most\": {MCs: 12, \n                                                                                                                minLevel: 4000}\n                                                                                                  },\n                                                                                      \"or\": [\n                                                                                              {\n                                                                                                name: \"Complete GER1000\",\n                                                                                                                    tag: \"GER1000\",\n                                                                                                                    module: {code: \"GER1000\",\n                                                                                                                             name: \"Quantitative Reasoning\",\n                                                                                                                             MCs: 4}\n                                                                                              },\n\n                                                                                              {\n                                                                                                name: \"Complete GER1000\",\n                                                                                                                    tag: \"GER1000\",\n                                                                                                                    module: {code: \"GER1000\",\n                                                                                                                             name: \"Quantitative Reasoning\",\n                                                                                                                             MCs: 4}\n                                                                                              }\n                                                                                      ] \n                                                                                    }                        \n                                                                      }\n                                                          ]}\n                                                    },\n\n                                           {name: \"Industrial Experience Requirement\",\n                                           tag: \"cs_foundation_2018\",\n                                           requirement: {}},\n\n                                           {name: \"IT Professionalism\",\n                                           tag: \"cs_foundation_2018\",\n                                           requirement: {}}\n                    ]}},\n                   {unrestrictedModules: {} }\n                  ],\n      \n     summary: [{cat: \"General Elective Module\",\n                MCs: 0},\n                {cat: \"Core Module\",\n                MCs: 0},\n                {cat: \"Specialisation Module\",\n                MCs: 0},\n                {cat: \"Unrestricted Module\",\n                MCs: 0}],\n    grandTotal: 0,\n    isLogginActive: true   //TEMPORARY\n\n    }\n    this.changeFaculty = this.changeFaculty.bind(this);\n    this.changeMajor=this.changeMajor.bind(this);\n    this.changeSpecialisation= this.changeSpecialisation.bind(this);\n    this.changeResidence= this.changeResidence.bind(this);\n    this.generateOptions =this.generateOptions.bind(this);\n    this.makeTable = this.makeTable.bind(this);\n    this.generateDropDown = this.generateDropDown.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.countModule = this.countModule.bind(this);\n    this.getDropdownMCs = this.getDropdownMCs.bind(this);\n    this.changeLoginState = this.changeLoginState.bind(this);\n    this.receiveModuleRules=this.receiveModuleRules.bind(this);\n  }\n  \n  componentDidMount() {\n    // Call our fetch function below once the component mounts\n  this.callBackendAPI()\n    .then(res => this.setState({ data: res.express }))\n    .catch(err => console.log(err));\n}\n  // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\ncallBackendAPI = async () => {\n  const response = await fetch('http://localhost:5001/');\n  const body = await response.json();\n\n  if (response.status !== 200) {\n    throw Error(body.message) \n  }\n  return body;\n};\n\n  //receive the choice of faculty from options.js and change state of faculty\n  changeFaculty(value, index) {\n    this.setState({\n      faculty: value,\n      facIndex: index,\n      major: null\n    });\n  }\n\n  changeMajor(value, index) {\n    this.setState({\n      major: value,\n      majorIndex: index\n    });\n  }\n\n  changeSpecialisation(value) {\n    this.setState({\n      specialisation: value,\n    });\n  }\n  changeResidence(value) {\n    this.setState({\n      residence: value,\n    });\n  }\n\n  //turn array of choices into options dropdown\n  generateOptions(choices) {\n    let facIndex = this.state.facIndex;\n  if(choices === 'faculty'){\n    return this.state.dummyfac.map((obj) => {\n      return (\n      <option value={Object.keys(obj)}>\n        {Object.keys(obj)}\n      </option>\n      );\n    });\n  } else if(choices === 'major') {\n      if(this.state.faculty) {\n    return this.state.dummyfac\n           [facIndex]\n           [this.state.faculty].map((obj) => {\n                  return (\n                    <option value={Object.keys(obj)}>\n                      {Object.keys(obj)}\n                    </option>\n                  )\n              }\n    )}\n  } else if(choices === 'specialisation') {\n      if(this.state.major && this.state.faculty) {\n      return this.state.dummyfac\n             [facIndex]\n             [this.state.faculty][this.state.majorIndex][this.state.major].map((item) => {\n                  return (\n                    <option>\n                      {item}\n                    </option>\n                  )\n                }    \n      )}\n  } else {\n    return this.state.residenceOptions.map((obj) => {\n      return (\n      <option value={obj}>\n        {obj}\n      </option>\n      );\n    });\n  }\n}\n\n  //takes in array of objects for modules and return a table\n  makeTable(item, moduleCat, index) {\n    if(item === 'summary') {\n      return this.state.summary.map((module) => {\n      const { cat, MCs } = module;\n      return(\n        <div>\n          <tr key={cat}>\n            <td>{cat}</td>\n            <td>{MCs + 'MCs'}</td>\n          </tr>\n        </div>\n      )\n      }\n    )}\n\n    else{\n    let propfunction;\n      if (item === 'coreModule'){\n        propfunction = this.state.dummymodules[1].coreModules;\n      }\n      else if(item === 'specialisation') {\n        propfunction = this.state.dummymodules[2].specialisationModules;\n      } \n      else if(item === 'unrestricted') {\n        propfunction = this.state.dummymodules[3].unrestrictedModules;\n      } \n      else {\n        propfunction = this.state.dummymodules[0].GEMs[index][moduleCat]\n      }\n\n   return propfunction.map((module) => {\n        const { code, name, MCs} = module\n        const desc = name.replace(/ /g, '-');\n        const link = `https://nusmods.com/modules/${code}/${desc}`\n        if(item === 'GEM') {\n          return (\n            <div>\n                <tr key={code} data-toggle=\"tooltip\" \n                    title=\"Click row to select module, click on the module code for more information\"\n                    onClick={() => this.handleClick(code, name, MCs, moduleCat)}\n                    >\n                    <a href={link}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      className=\"text-decoration-none\">\n                    <td>{code}</td>\n                    </a>\n                    <td>{name}</td>\n                    <td>{MCs + 'MCs'}</td>\n                </tr>\n            </div>\n        )\n        } else{\n        return (\n            <div>\n                <tr key={code} >\n                <a href={link} \n                           target=\"_blank\" \n                           rel=\"noopener noreferrer\"\n                           className=\"text-white text-decoration-none\">\n                    <td>{code}</td>\n                    <td>{name}</td>\n                    <td>{MCs + 'MCs'}</td>\n                    </a>\n                </tr>\n            </div>\n        )}\n   })\n  }\n}\n\n  generateDropDown() {\n    let title;\n    if(this.state.residence === 'N/A') {\n      title = <h3>General Elective Modules</h3>;\n    }  \n      \n      return (<div>\n      {title}\n      {this.state.dummymodules[0].GEMs.map((module, i) => {\n        const GEMCat = Object.keys(module)[0]\n        return (\n        <div>\n        <Dropdown cat={GEMCat}\n          title={this.state.GEMTitle}\n          moduleCat={this.state.moduleCat}\n          MCTemp={this.state.MCTemp}\n          sendData={this.getDropdownMCs}\n          id={\"GEM_\" + i}\n          target={\"GEM_\" + i}\n        module={this.makeTable('GEM', GEMCat, i)} />\n        </div>\n        )\n      })}\n        </div>);\n\n    \n  \n  }\n\n  handleClick(code, name, MCs, moduleCat) {\n    const title = code + ': ' + name;\n    this.setState({GEMTitle: title,\n                   MCTemp: MCs,\n                    moduleCat: moduleCat});\n  }\n\n  countModule() {\n    const GEMs = this.state.totalGEMMCs;\n    const coreModules = this.state.dummymodules[1].coreModules.reduce((currentTotal, next) => {\n      return currentTotal + next.MCs} , 0);\n    const specialisationModules = this.state.dummymodules[2].specialisationModules.reduce((currentTotal, next) => {\n      return currentTotal + next.MCs} , 0);\n    const unrestrictedModules = this.state.dummymodules[3].unrestrictedModules.reduce((currentTotal, next) => {\n      return currentTotal + next.MCs} , 0);\n    const grandTotal = GEMs + coreModules + specialisationModules + unrestrictedModules;\n      this.setState({summary: [{cat: \"General Elective Module\",\n                               MCs: GEMs},\n                              {cat: \"Core Module\",\n                               MCs: coreModules},\n                              {cat: \"Specialisation Module\",\n                               MCs: specialisationModules},\n                              {cat: \"Unrestricted Module\",\n                               MCs: unrestrictedModules}],\n                    grandTotal: grandTotal\n                              });\n      \n    }\n  \n    getDropdownMCs(MCs) {\n      totalGEMMCs += MCs\n      this.setState({totalGEMMCs: totalGEMMCs}, () => this.countModule());\n    }\n  \n    receiveModuleRules(rules) {\n      this.setState({rules: rules});\n    }\n \n    changeLoginState() {\n      const { isLogginActive } = this.state;\n\n      if (isLogginActive) {\n        this.rightSide.classList.remove(\"right\");\n        this.rightSide.classList.add(\"left\");\n      } else {\n        this.rightSide.classList.remove(\"left\");\n        this.rightSide.classList.add(\"right\");\n      }\n      this.setState(prevState => ({ isLogginActive: !prevState.isLogginActive }));\n    }\n    \n  render() {\n      const { isLogginActive } = this.state;\n      const current = isLogginActive ? \"Register\" : \"Login\";\n      const currentActive = isLogginActive ? \"login\" : \"register\";\n       return (\n         <div>\n           <Switch>\n             <Route exact path=\"/\">\n               <LoginPage loginStatus={this.state.isLogginActive}/>\n             </Route>\n\n           </Switch>\n         </div>\n   );\n    }\n}\n\nconst RightSide = props => {\n  return (\n    <div\n      className=\"right-side\"\n      ref={props.containerRef}\n      onClick={props.onClick}\n    >\n      <div className=\"inner-container\">\n        <div className=\"text\">{props.current}</div>\n      </div>\n    </div>\n  );\n};\n\n\nexport default App;\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}