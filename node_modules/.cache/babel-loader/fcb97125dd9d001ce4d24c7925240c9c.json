{"ast":null,"code":"var _jsxFileName = \"/Users/frisciliasultan/Documents/Orbital/client/src/Pages/Module Planner Page/Subrules.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { Card, Spinner } from \"react-bootstrap\";\n\nfunction Subrules(props) {\n  const [isLoading, setIsLoading] = useState(false);\n  const [isRuleFulfilled, setIsRuleFulfilled] = useState(false);\n  useEffect(() => {\n    const callBackendFunc = async ruleTag => {\n      try {\n        const link = \"http://172.31.21.121:3000/rules/\" + ruleTag;\n        const requestOptions = {\n          method: 'POST',\n          mode: 'no-cors',\n          headers: {\n            'Content-Type': 'application/json',\n            'accept': 'application/json'\n          },\n          body: JSON.stringify({\n            modules: props.selectedModules\n          })\n        };\n        setIsLoading(true);\n        const response = await fetch(\"http://172.31.21.121:3000/rules/r_cs_foundation\", requestOptions);\n        const status = await response.json();\n\n        if (!response.ok) {\n          throw new Error(\"An error has occurred\");\n        } else {\n          setIsRuleFulfilled(status);\n          setIsLoading(false);\n          alert('success');\n        }\n      } catch (error) {\n        setIsLoading(false);\n        console.error('There was an error!', error);\n      }\n\n      ;\n    };\n\n    callBackendFunc(props.ruleTag);\n  }, [props.callBackendNow]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, props.ruleName), isLoading && /*#__PURE__*/React.createElement(Spinner, {\n    animation: \"border\",\n    variant: \"success\",\n    role: \"status\",\n    as: \"span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sr-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, \"Loading...\")));\n}\n\nexport default Subrules;","map":{"version":3,"sources":["/Users/frisciliasultan/Documents/Orbital/client/src/Pages/Module Planner Page/Subrules.jsx"],"names":["React","useState","useEffect","Card","Spinner","Subrules","props","isLoading","setIsLoading","isRuleFulfilled","setIsRuleFulfilled","callBackendFunc","ruleTag","link","requestOptions","method","mode","headers","body","JSON","stringify","modules","selectedModules","response","fetch","status","json","ok","Error","alert","error","console","callBackendNow","ruleName"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,OAAf,QAA8B,iBAA9B;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACrB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACQ,eAAD,EAAkBC,kBAAlB,IAAwCT,QAAQ,CAAC,KAAD,CAAtD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMS,eAAe,GAAG,MAAOC,OAAP,IAAmB;AACvC,UAAG;AACC,cAAMC,IAAI,GAAG,qCAAqCD,OAAlD;AACA,cAAME,cAAc,GAAG;AACnBC,UAAAA,MAAM,EAAE,MADW;AAEnBC,UAAAA,IAAI,EAAE,SAFa;AAGnBC,UAAAA,OAAO,EAAE;AAAE,4BAAgB,kBAAlB;AACG,sBAAU;AADb,WAHU;AAMnBC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACC,YAAAA,OAAO,EAAEf,KAAK,CAACgB;AAAhB,WAAf;AANa,SAAvB;AAQAd,QAAAA,YAAY,CAAC,IAAD,CAAZ;AAEA,cAAMe,QAAQ,GAAG,MAAMC,KAAK,CAAC,iDAAD,EAAoDV,cAApD,CAA5B;AACA,cAAMW,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAArB;;AAEA,YAAG,CAACH,QAAQ,CAACI,EAAb,EAAiB;AACb,gBAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;AACH,SAFD,MAEM;AACFlB,UAAAA,kBAAkB,CAACe,MAAD,CAAlB;AACAjB,UAAAA,YAAY,CAAC,KAAD,CAAZ;AACAqB,UAAAA,KAAK,CAAC,SAAD,CAAL;AACH;AAEJ,OAvBD,CAuBE,OAAMC,KAAN,EAAa;AACDtB,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAuB,QAAAA,OAAO,CAACD,KAAR,CAAc,qBAAd,EAAqCA,KAArC;AACH;;AAAA;AACd,KA5BD;;AA6BAnB,IAAAA,eAAe,CAACL,KAAK,CAACM,OAAP,CAAf;AACH,GA/BQ,EA+BN,CAACN,KAAK,CAAC0B,cAAP,CA/BM,CAAT;AAmCA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAa1B,KAAK,CAAC2B,QAAnB,CADJ,EAEK1B,SAAS,iBAAI,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAC,QAAnB;AAA4B,IAAA,OAAO,EAAC,SAApC;AAA8C,IAAA,IAAI,EAAC,QAAnD;AAA4D,IAAA,EAAE,EAAC,MAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACV;AAAM,IAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADU,CAFlB,CADJ;AASH;;AAED,eAAeF,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Card, Spinner } from \"react-bootstrap\";\n\nfunction Subrules(props) {\n    const [isLoading, setIsLoading] = useState(false);\n    const [isRuleFulfilled, setIsRuleFulfilled] = useState(false);\n\n    useEffect(() => {\n        const callBackendFunc = async (ruleTag) => {\n            try{\n                const link = \"http://172.31.21.121:3000/rules/\" + ruleTag;\n                const requestOptions = {\n                    method: 'POST',\n                    mode: 'no-cors',\n                    headers: { 'Content-Type': 'application/json',\n                                'accept': 'application/json'            \n                    },\n                    body: JSON.stringify({modules: props.selectedModules})\n                };\n                setIsLoading(true);\n                \n                const response = await fetch(\"http://172.31.21.121:3000/rules/r_cs_foundation\", requestOptions);\n                const status = await response.json();\n\n                if(!response.ok) {\n                    throw new Error(\"An error has occurred\")\n                } else{\n                    setIsRuleFulfilled(status);\n                    setIsLoading(false);\n                    alert('success');\n                }\n\n            } catch(error) {\n                          setIsLoading(false);\n                          console.error('There was an error!', error);\n                      };\n        };\n        callBackendFunc(props.ruleTag);\n    }, [props.callBackendNow]);\n\n    \n\n    return (    \n        <div>\n            <Card.Title>{props.ruleName}</Card.Title>\n            {isLoading && <Spinner animation=\"border\" variant=\"success\" role=\"status\" as=\"span\">\n                <span className=\"sr-only\">Loading...</span>\n            </Spinner>}\n        </div>\n    )\n\n}\n\nexport default Subrules;"]},"metadata":{},"sourceType":"module"}