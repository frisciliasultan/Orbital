{"ast":null,"code":"import { SET_BOARD_FILLED, SET_MODULES, SET_RULES, SET_CALL_BACKEND_NOW } from \"../actions/types\";\nconst initialState = {\n  isBoardFilled: false,\n  isTextBoxOpen: false,\n  selectedModules: [],\n  callBackendNow: false,\n  rules: [],\n  modules: []\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_BOARD_FILLED:\n      return { ...state,\n        selectedModules: true\n      };\n\n    case SET_MODULES:\n      return { ...state,\n        modules: action.payload\n      };\n\n    case SET_RULES:\n      return { ...state,\n        rules: action.payload\n      };\n\n    case SET_CALL_BACKEND_NOW:\n      return { ...state,\n        callBackendNow: action.payload\n      };\n\n    case SET_SELECTED_MODULES:\n      let unique = true;\n      let indexOfDuplicate; // const modules = action.currentSelectedModules;\n\n      const {\n        moduleAdded,\n        currentSelectedModules\n      } = action;\n\n      for (let i = 0; i < currentSelectedModules.length; i++) {\n        if (currentSelectedModules[i].moduleCode === moduleAdded.moduleCode) {\n          unique = false;\n          indexOfDuplicate = i;\n        }\n      }\n\n      if (!currentSelectedModules.includes(moduleAdded)) {\n        if (unique) {\n          currentSelectedModules.push(object);\n        } else {\n          currentSelectedModules.splice(indexOfDuplicate, 1);\n          currentSelectedModules.push(object);\n        }\n      }\n\n      return { ...state,\n        selectedModules: currentSelectedModules\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/frisciliasultan/Documents/Orbital/client/src/reducers/modplanReducer.js"],"names":["SET_BOARD_FILLED","SET_MODULES","SET_RULES","SET_CALL_BACKEND_NOW","initialState","isBoardFilled","isTextBoxOpen","selectedModules","callBackendNow","rules","modules","state","action","type","payload","SET_SELECTED_MODULES","unique","indexOfDuplicate","moduleAdded","currentSelectedModules","i","length","moduleCode","includes","push","object","splice"],"mappings":"AAAA,SACIA,gBADJ,EAEIC,WAFJ,EAGIC,SAHJ,EAIIC,oBAJJ,QAKO,kBALP;AAOA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,aAAa,EAAE,KADE;AAEjBC,EAAAA,aAAa,EAAE,KAFE;AAGjBC,EAAAA,eAAe,EAAE,EAHA;AAIjBC,EAAAA,cAAc,EAAE,KAJC;AAKjBC,EAAAA,KAAK,EAAE,EALU;AAMjBC,EAAAA,OAAO,EAAE;AANQ,CAArB;AASA,eAAe,UAAUC,KAAK,GAAGP,YAAlB,EAAgCQ,MAAhC,EAAwC;AACnD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKb,gBAAL;AACI,aAAO,EACH,GAAGW,KADA;AAEHJ,QAAAA,eAAe,EAAE;AAFd,OAAP;;AAKJ,SAAKN,WAAL;AACI,aAAO,EACH,GAAGU,KADA;AAEHD,QAAAA,OAAO,EAAEE,MAAM,CAACE;AAFb,OAAP;;AAIJ,SAAKZ,SAAL;AACI,aAAO,EAEH,GAAGS,KAFA;AAGHF,QAAAA,KAAK,EAAEG,MAAM,CAACE;AAHX,OAAP;;AAMJ,SAAKX,oBAAL;AACI,aAAO,EACH,GAAGQ,KADA;AAEHH,QAAAA,cAAc,EAAEI,MAAM,CAACE;AAFpB,OAAP;;AAKJ,SAAKC,oBAAL;AACI,UAAIC,MAAM,GAAG,IAAb;AACA,UAAIC,gBAAJ,CAFJ,CAGI;;AACA,YAAM;AAACC,QAAAA,WAAD;AAAcC,QAAAA;AAAd,UAAwCP,MAA9C;;AAEA,WAAI,IAAIQ,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGD,sBAAsB,CAACE,MAA1C,EAAkDD,CAAC,EAAnD,EAAuD;AACnD,YAAGD,sBAAsB,CAACC,CAAD,CAAtB,CAA0BE,UAA1B,KAAyCJ,WAAW,CAACI,UAAxD,EAAoE;AAChEN,UAAAA,MAAM,GAAG,KAAT;AACAC,UAAAA,gBAAgB,GAAGG,CAAnB;AACH;AACJ;;AAED,UAAI,CAACD,sBAAsB,CAACI,QAAvB,CAAgCL,WAAhC,CAAL,EAAmD;AAC/C,YAAGF,MAAH,EAAW;AACPG,UAAAA,sBAAsB,CAACK,IAAvB,CAA4BC,MAA5B;AACH,SAFD,MAEO;AACHN,UAAAA,sBAAsB,CAACO,MAAvB,CAA8BT,gBAA9B,EAAgD,CAAhD;AACAE,UAAAA,sBAAsB,CAACK,IAAvB,CAA4BC,MAA5B;AACH;AACJ;;AAED,aAAO,EACH,GAAGd,KADA;AAEHJ,QAAAA,eAAe,EAAEY;AAFd,OAAP;;AAIJ;AACI,aAAOR,KAAP;AApDR;AAsDH","sourcesContent":["import {\n    SET_BOARD_FILLED, \n    SET_MODULES, \n    SET_RULES,\n    SET_CALL_BACKEND_NOW \n} from \"../actions/types\";\n\nconst initialState = {\n    isBoardFilled: false,\n    isTextBoxOpen: false,\n    selectedModules: [], \n    callBackendNow: false,\n    rules: [],\n    modules: []\n}\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case SET_BOARD_FILLED: \n            return {\n                ...state,\n                selectedModules: true\n            }\n            \n        case SET_MODULES: \n            return {\n                ...state,\n                modules: action.payload\n        }\n        case SET_RULES: \n            return {\n                \n                ...state,\n                rules: action.payload\n        }\n\n        case SET_CALL_BACKEND_NOW:\n            return {\n                ...state,\n                callBackendNow: action.payload\n            }\n        \n        case SET_SELECTED_MODULES:\n            let unique = true;\n            let indexOfDuplicate;\n            // const modules = action.currentSelectedModules;\n            const {moduleAdded, currentSelectedModules} = action;\n    \n            for(let i = 0; i < currentSelectedModules.length; i++) {\n                if(currentSelectedModules[i].moduleCode === moduleAdded.moduleCode) {\n                    unique = false;\n                    indexOfDuplicate = i;\n                }\n            }\n\n            if (!currentSelectedModules.includes(moduleAdded)) {\n                if(unique) {\n                    currentSelectedModules.push(object);\n                } else {\n                    currentSelectedModules.splice(indexOfDuplicate, 1);\n                    currentSelectedModules.push(object);           \n                }\n            }\n\n            return {\n                ...state, \n                selectedModules: currentSelectedModules    \n            }\n        default:\n            return state\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}