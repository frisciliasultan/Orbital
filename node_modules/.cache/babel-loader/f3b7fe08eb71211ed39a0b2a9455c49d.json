{"ast":null,"code":"var _jsxFileName = \"/Users/frisciliasultan/Documents/Orbital/client/src/Pages/Module Planner Page/Board.jsx\";\nimport React, { useState } from \"react\";\nimport AutoCompleteText from './AutocompleteText';\nimport { DropdownButton, Dropdown, Button } from 'react-bootstrap';\nimport ModuleCard from './Card';\nlet newModuleCodeTitle = [];\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.drop = e => {\n      e.preventDefault();\n      const card_id = e.dataTransfer.getData('card_id');\n      const card = document.getElementById(card_id);\n      card.style.display = 'block';\n      e.target.appendChild(card);\n    };\n\n    this.dragOver = e => {\n      e.preventDefault();\n    };\n\n    this.state = {\n      isTextBoxOpen: false,\n      moduleCodeTitle: []\n    };\n    this.handleButtonClick = this.handleButtonClick.bind(this);\n    this.updateModuleCards = this.updateModuleCards.bind(this);\n    this.generateModuleCards = this.generateModuleCards.bind(this);\n  }\n\n  handleButtonClick() {\n    this.setState({\n      isTextBoxOpen: !this.state.isTextBoxOpen\n    });\n  }\n\n  updateModuleCards(item) {\n    if (!newModuleCodeTitle.includes(item)) {\n      newModuleCodeTitle.push(item);\n      this.setState({\n        moduleCodeTitle: newModuleCodeTitle\n      });\n    }\n  }\n\n  generateModuleCards() {\n    console.log('called');\n    return this.state.moduleCodeTitle.map((item, i) => {\n      return /*#__PURE__*/React.createElement(ModuleCard, {\n        id: \"card_\" + i,\n        className: \"card\",\n        draggable: \"true\",\n        title: item,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: this.props.id,\n      onDrop: this.drop,\n      onDragOver: this.dragOver,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }, this.props.year), this.generateModuleCards(), this.state.isTextBoxOpen && /*#__PURE__*/React.createElement(AutoCompleteText, {\n      updateModuleCards: this.updateModuleCards,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 46\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      onClick: this.handleButtonClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }, \"Add Module\"));\n  }\n\n}\n\nexport default Board;","map":{"version":3,"sources":["/Users/frisciliasultan/Documents/Orbital/client/src/Pages/Module Planner Page/Board.jsx"],"names":["React","useState","AutoCompleteText","DropdownButton","Dropdown","Button","ModuleCard","newModuleCodeTitle","Board","Component","constructor","props","drop","e","preventDefault","card_id","dataTransfer","getData","card","document","getElementById","style","display","target","appendChild","dragOver","state","isTextBoxOpen","moduleCodeTitle","handleButtonClick","bind","updateModuleCards","generateModuleCards","setState","item","includes","push","console","log","map","i","render","id","year"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport AutoCompleteText from './AutocompleteText';\nimport { DropdownButton, Dropdown, Button } from 'react-bootstrap';\nimport ModuleCard from './Card';\n\nlet newModuleCodeTitle = [];\n\nclass Board extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isTextBoxOpen: false,\n            moduleCodeTitle: []};\n        this.handleButtonClick = this.handleButtonClick.bind(this);\n        this.updateModuleCards = this.updateModuleCards.bind(this);\n        this.generateModuleCards = this.generateModuleCards.bind(this);\n    }\n    \n    \n    drop = e => {\n        e.preventDefault();\n        const card_id = e.dataTransfer.getData('card_id');\n        const card = document.getElementById(card_id);\n        card.style.display = 'block';\n\n        e.target.appendChild(card);\n    }\n\n    dragOver = e => {\n        e.preventDefault();\n    }\n\n    handleButtonClick() {\n        this.setState({isTextBoxOpen: !this.state.isTextBoxOpen});\n     }\n\n    updateModuleCards(item) {\n        if (!newModuleCodeTitle.includes(item)) {\n            newModuleCodeTitle.push(item);\n            this.setState({moduleCodeTitle: newModuleCodeTitle});\n        }\n    }\n\n    generateModuleCards() {\n        console.log('called');\n        return(\n            this.state.moduleCodeTitle.map((item, i) => {\n                return (\n                    <ModuleCard\n                        id={\"card_\" + i}\n                        className=\"card\"\n                        draggable=\"true\"\n                        title={item}>\n                    </ModuleCard>\n                )\n            })\n            \n        )\n        \n    }\n\n    render() {\n\n        return (\n            <div   \n                id={this.props.id}\n                onDrop={this.drop}\n                onDragOver={this.dragOver}\n            >\n                <h3>{this.props.year}</h3>\n                {this.generateModuleCards()}\n                {this.state.isTextBoxOpen && <AutoCompleteText updateModuleCards={this.updateModuleCards}/>}\n                \n                <Button onClick={this.handleButtonClick}>Add Module</Button>\n            </div>\n        )\n        \n    }\n    \n}\n\nexport default Board;"]},"metadata":{},"sourceType":"module"}