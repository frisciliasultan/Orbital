{"ast":null,"code":"var _jsxFileName = \"/Users/frisciliasultan/Documents/Orbital/client/src/Containers/GEM Dropdown.js\";\nimport React, { useState } from 'react';\nimport onClickOutside from 'react-onclickoutside';\n\nfunction Dropdown({\n  title,\n  items,\n  multiSelect = false\n}) {\n  const [open, setOpen] = useState(false);\n  const [selection, setSelection] = useState([]);\n\n  const toggle = () => setOpen(!open);\n\n  Dropdown.handleClickOutside = () => setOpen(false);\n\n  function handleOnClick(item) {\n    if (!selection.some(current => current.id === item.id)) {\n      if (!multiSelect) {\n        setSelection([item]);\n      } else if (multiSelect) {\n        setSelection([...selection, item]);\n      }\n    } else {\n      let selectionAfterRemoval = selection;\n      selectionAfterRemoval = selectionAfterRemoval.filter(current => current.id !== item.id);\n      setSelection([...selectionAfterRemoval]);\n    }\n  }\n\n  function isItemInSelection(item) {\n    if (selection.some(current => current.id === item.id)) {\n      return true;\n    }\n\n    return false;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dd-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dd-header\",\n    role: \"button\",\n    onClick: () => toggle(!open),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dd-header__title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"dd-header__title--bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, title))), open && /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"dd-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, items.map(item => /*#__PURE__*/React.createElement(\"li\", {\n    className: \"dd-list-item\",\n    key: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => handleOnClick(item),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, item.value), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, isItemInSelection(item) && /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 51\n    }\n  }, items)))))));\n}\n\nconst clickOutsideConfig = {\n  handleClickOutside: () => Dropdown.handleClickOutside\n};\nexport default onClickOutside(Dropdown, clickOutsideConfig);","map":{"version":3,"sources":["/Users/frisciliasultan/Documents/Orbital/client/src/Containers/GEM Dropdown.js"],"names":["React","useState","onClickOutside","Dropdown","title","items","multiSelect","open","setOpen","selection","setSelection","toggle","handleClickOutside","handleOnClick","item","some","current","id","selectionAfterRemoval","filter","isItemInSelection","map","value","clickOutsideConfig"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport onClickOutside from 'react-onclickoutside';\n\nfunction Dropdown({ title, items, multiSelect = false }) {\n  const [open, setOpen] = useState(false);\n  const [selection, setSelection] = useState([]);\n  const toggle = () => setOpen(!open);\n  Dropdown.handleClickOutside = () => setOpen(false);\n\n  function handleOnClick(item) {\n    if (!selection.some(current => current.id === item.id)) {\n      if (!multiSelect) {\n        setSelection([item]);\n      } else if (multiSelect) {\n        setSelection([...selection, item]);\n      }\n    } else {\n      let selectionAfterRemoval = selection;\n      selectionAfterRemoval = selectionAfterRemoval.filter(\n        current => current.id !== item.id\n      );\n      setSelection([...selectionAfterRemoval]);\n    }\n  }\n\n  function isItemInSelection(item) {\n    if (selection.some(current => current.id === item.id)) {\n      return true;\n    }\n    return false;\n  }\n\n  return (\n    <div className=\"dd-wrapper\">\n      <div\n        className=\"dd-header\"\n        role=\"button\"\n        onClick={() => toggle(!open)}\n      >\n        <div className=\"dd-header__title\">\n          <p className=\"dd-header__title--bold\">{title}</p>\n        </div>\n        \n      </div>\n      {open && (\n        <ul className=\"dd-list\">\n          {items.map(item => (\n            <li className=\"dd-list-item\" key={item.id}>\n              <button type=\"button\" onClick={() => handleOnClick(item)}>\n                <span>{item.value}</span>\n                <span>{isItemInSelection(item) && <strong>{items}</strong>}</span>\n              </button>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n\nconst clickOutsideConfig = {\n  handleClickOutside: () => Dropdown.handleClickOutside,\n};\n\nexport default onClickOutside(Dropdown, clickOutsideConfig);\n"]},"metadata":{},"sourceType":"module"}