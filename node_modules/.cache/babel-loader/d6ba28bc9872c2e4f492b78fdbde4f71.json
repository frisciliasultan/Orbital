{"ast":null,"code":"var _jsxFileName = \"/Users/frisciliasultan/Documents/Orbital/client/src/Settings/AcadSettings.jsx\";\nimport React from 'react';\nimport { Options } from '../Pages/Module Selection Page/ModuleList';\nimport { Link } from 'react-router-dom';\nimport axios from \"axios\";\nimport { Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport PropTypes from \"prop-types\";\nimport { updateSettings, setMatriculationYearOptions, setTargetGradYearOptions } from \"../actions/settingsActions\";\nimport isEmpty from \"is-empty\";\n\nclass AcadSettings extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = () => {\n      const userData = {\n        major: this.state.major,\n        specialisation: this.state.specialisation,\n        residential: this.state.residence,\n        matriculationYear: this.state.matriculationYear,\n        targetGradYear: this.state.targetGradYear,\n        name: this.props.settings.userInfo.name,\n        modPlan: this.props.modplan\n      };\n      this.props.updateSettings(userData);\n    };\n\n    this.state = {\n      faculty: null,\n      major: this.props.userInfo.major,\n      specialisation: this.props.userInfo.specialisation,\n      residenceOptions: ['N/A', 'CAPT', 'RC4', 'RVRC', 'Tembusu', 'USP'],\n      residence: this.props.userInfo.residential,\n      matriculationYear: this.props.userInfo.matriculationYear,\n      targetGradYear: this.props.userInfo.targetGradYear,\n      // dummyfac: {faculty: [{ name: 'Business',\n      //                         major: [{name: }]\n      //                         specialisation: [{name: 'A'}, ]\n      // }] }\n      dummyfac: [{\n        'Business': [{\n          'Business Administration': ['A', 'B']\n        }, {\n          'Accountancy': ['C', 'D']\n        }]\n      }, {\n        'FASS': [{\n          'C': ['N/A']\n        }, {\n          'D': ['N/A']\n        }]\n      }, {\n        'Computing': [{\n          'Computer Science': ['N/A']\n        }, {\n          'Business Analytics': ['N/A']\n        }]\n      }]\n    };\n    this.changeFaculty = this.changeFaculty.bind(this);\n    this.changeMajor = this.changeMajor.bind(this);\n    this.changeSpecialisation = this.changeSpecialisation.bind(this);\n    this.changeResidence = this.changeResidence.bind(this);\n    this.changeMatriculationYear = this.changeMatriculationYear.bind(this);\n    this.changeTargetGradYear = this.changeTargetGradYear.bind(this);\n    this.generateOptions = this.generateOptions.bind(this);\n  }\n\n  componentWillMount() {\n    if (isEmpty(this.props.settings.matriculationOptions)) {\n      this.props.setMatriculationYearOptions(this.props.settings.currentAY, this.props.settings.currentSemester);\n      this.props.setTargetGradYearOptions(this.props.settings.currentAY, this.props.settings.currentSemester);\n    }\n  }\n\n  changeFaculty(value, index) {\n    this.setState({\n      faculty: value,\n      facIndex: index,\n      major: null\n    });\n  }\n\n  changeMajor(value, index) {\n    this.setState({\n      major: value,\n      majorIndex: index\n    });\n  }\n\n  changeSpecialisation(value) {\n    this.setState({\n      specialisation: value\n    });\n  }\n\n  changeResidence(value) {\n    this.setState({\n      residence: value\n    });\n  }\n\n  changeMatriculationYear(value) {\n    const year = value.substr(3, 9);\n    this.setState({\n      matriculationYear: year\n    });\n  }\n\n  changeTargetGradYear(value) {\n    const year = value.substr(6, 9);\n    this.setState({\n      targetGradYear: year\n    });\n  } //   //turn array of choices into options dropdown\n\n\n  generateOptions(choices) {\n    let facIndex = this.state.facIndex;\n\n    if (choices === 'faculty') {\n      return this.state.dummyfac.map(obj => {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          value: Object.keys(obj),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 7\n          }\n        }, Object.keys(obj));\n      });\n    } else if (choices === 'major') {\n      if (this.state.faculty) {\n        return this.state.dummyfac[facIndex][this.state.faculty].map(obj => {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            value: Object.keys(obj),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 21\n            }\n          }, Object.keys(obj));\n        });\n      }\n    } else if (choices === 'specialisation') {\n      if (this.state.major && this.state.faculty) {\n        return this.state.dummyfac[facIndex][this.state.faculty][this.state.majorIndex][this.state.major].map(item => {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 21\n            }\n          }, item);\n        });\n      }\n    } else if (choices === 'residence') {\n      return this.state.residenceOptions.map(obj => {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          value: obj,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 7\n          }\n        }, obj);\n      });\n    } else {\n      let options;\n\n      if (choices === 'matriculationYear') {\n        options = this.props.settings.matriculationOptions;\n      } else {\n        options = this.props.settings.targetGradOptions;\n      }\n\n      return options.map(option => {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          value: option,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 7\n          }\n        }, option);\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 15\n      }\n    }, \"Enter your particulars so that we can personalise your user experience!\"), /*#__PURE__*/React.createElement(Options, {\n      settings: this.props.settings.userInfo,\n      onFacultyChange: this.changeFaculty,\n      onMajorChange: this.changeMajor,\n      onSpecialisationChange: this.changeSpecialisation,\n      onResidenceChange: this.changeResidence,\n      onMatriculationChange: this.changeMatriculationYear,\n      onTargetGradChange: this.changeTargetGradYear,\n      facultyOptions: this.generateOptions('faculty'),\n      majorOptions: this.generateOptions('major'),\n      specialisationOptions: this.generateOptions('specialisation'),\n      residenceOptions: this.generateOptions('residence'),\n      matriculationYearOptions: this.generateOptions('matriculationYear'),\n      targetGradYearOptions: this.generateOptions('targetGradYear'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      class: \"button\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 15\n      }\n    }, \"Save Academic Settings\"));\n  }\n\n}\n\nAcadSettings.propTypes = {\n  updateSettings: PropTypes.func.isRequired,\n  setMatriculationYearOptions: PropTypes.func.isRequired,\n  modplan: PropTypes.object.isRequired,\n  settings: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  modplan: state.modplan.selectedModules,\n  settings: state.settings,\n  userInfo: state.settings.userInfo\n});\n\nexport default connect(mapStateToProps, {\n  updateSettings,\n  setMatriculationYearOptions,\n  setTargetGradYearOptions\n})(AcadSettings);","map":{"version":3,"sources":["/Users/frisciliasultan/Documents/Orbital/client/src/Settings/AcadSettings.jsx"],"names":["React","Options","Link","axios","Button","connect","PropTypes","updateSettings","setMatriculationYearOptions","setTargetGradYearOptions","isEmpty","AcadSettings","Component","constructor","props","handleSubmit","userData","major","state","specialisation","residential","residence","matriculationYear","targetGradYear","name","settings","userInfo","modPlan","modplan","faculty","residenceOptions","dummyfac","changeFaculty","bind","changeMajor","changeSpecialisation","changeResidence","changeMatriculationYear","changeTargetGradYear","generateOptions","componentWillMount","matriculationOptions","currentAY","currentSemester","value","index","setState","facIndex","majorIndex","year","substr","choices","map","obj","Object","keys","item","options","targetGradOptions","option","render","propTypes","func","isRequired","object","mapStateToProps","selectedModules"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Options } from '../Pages/Module Selection Page/ModuleList';\nimport { Link } from 'react-router-dom';\nimport axios from \"axios\";\nimport { Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport PropTypes from \"prop-types\";\nimport { updateSettings, setMatriculationYearOptions, setTargetGradYearOptions } from \"../actions/settingsActions\";\nimport isEmpty from \"is-empty\";\n\n\n\nclass AcadSettings extends React.Component {\nconstructor(props) {\n    super(props);\n\n    this.state = {\n        faculty: null,\n        major: this.props.userInfo.major,\n        specialisation: this.props.userInfo.specialisation,\n        residenceOptions: ['N/A','CAPT', 'RC4', 'RVRC','Tembusu', 'USP'],\n        residence: this.props.userInfo.residential,\n        matriculationYear: this.props.userInfo.matriculationYear,\n        targetGradYear: this.props.userInfo.targetGradYear,\n        // dummyfac: {faculty: [{ name: 'Business',\n        //                         major: [{name: }]\n        //                         specialisation: [{name: 'A'}, ]\n        // }] }\n        dummyfac: [{'Business': [{'Business Administration': ['A', 'B']},\n                                {'Accountancy': ['C', 'D']}]},\n                {'FASS': [{'C': ['N/A']},\n                            {'D': ['N/A']}]},\n                {\n                    'Computing': [\n                                    {'Computer Science': ['N/A']},\n                                    {'Business Analytics': ['N/A']}\n                    ]\n                }],\n        \n    };\n\n    this.changeFaculty = this.changeFaculty.bind(this);\n    this.changeMajor=this.changeMajor.bind(this);\n    this.changeSpecialisation= this.changeSpecialisation.bind(this);\n    this.changeResidence= this.changeResidence.bind(this);\n    this.changeMatriculationYear= this.changeMatriculationYear.bind(this);\n    this.changeTargetGradYear= this.changeTargetGradYear.bind(this);\n    this.generateOptions =this.generateOptions.bind(this);\n}\n\ncomponentWillMount () {\n  if(isEmpty(this.props.settings.matriculationOptions)) {\n    this.props.setMatriculationYearOptions(this.props.settings.currentAY, this.props.settings.currentSemester)\n    this.props.setTargetGradYearOptions(this.props.settings.currentAY, this.props.settings.currentSemester)\n  }\n}\n\nchangeFaculty(value, index) {\n    this.setState({\n      faculty: value,\n      facIndex: index,\n      major: null\n    });\n  }\n\n  changeMajor(value, index) {\n    this.setState({\n      major: value,\n      majorIndex: index\n    });\n  }\n\n  changeSpecialisation(value) {\n    this.setState({\n      specialisation: value,\n    });\n  }\n\n  changeResidence(value) {\n    this.setState({\n      residence: value,\n    });\n  }\n\n  changeMatriculationYear(value) {\n    const year = value.substr(3,9);\n    this.setState({\n      matriculationYear: year,\n    });\n  }\n\n  changeTargetGradYear(value) {\n    const year = value.substr(6,9);\n    this.setState({\n      targetGradYear: year,\n    });\n  }\n\n\n//   //turn array of choices into options dropdown\n  generateOptions(choices) {\n    let facIndex = this.state.facIndex;\n  if(choices === 'faculty'){\n    return this.state.dummyfac.map((obj) => {\n      return (\n      <option value={Object.keys(obj)}>\n        {Object.keys(obj)}\n      </option>\n      );\n    });\n  } else if(choices === 'major') {\n      if(this.state.faculty) {\n    return this.state.dummyfac\n           [facIndex]\n           [this.state.faculty].map((obj) => {\n                  return (\n                    <option value={Object.keys(obj)}>\n                      {Object.keys(obj)}\n                    </option>\n                  )\n              }\n    )}\n  } else if(choices === 'specialisation') {\n      if(this.state.major && this.state.faculty) {\n      return this.state.dummyfac\n             [facIndex]\n             [this.state.faculty][this.state.majorIndex][this.state.major].map((item) => {\n                  return (\n                    <option>\n                      {item}\n                    </option>\n                  )\n                }    \n      )}\n  } else if(choices === 'residence') {\n    return this.state.residenceOptions.map((obj) => {\n      return (\n      <option value={obj}>\n        {obj}\n      </option>\n      );\n    });\n  } else {\n      let options;\n\n      if(choices === 'matriculationYear') {\n        options = this.props.settings.matriculationOptions\n      } else {\n        options = this.props.settings.targetGradOptions\n      }\n\n    return options.map((option) => {\n      return (\n      <option value={option}>\n        {option}\n      </option>\n      );\n    });\n  }\n}\n\nhandleSubmit = () => {\n  const userData = {\n    major: this.state.major,\n    specialisation: this.state.specialisation,\n    residential: this.state.residence,\n    matriculationYear: this.state.matriculationYear,\n    targetGradYear: this.state.targetGradYear,\n    name: this.props.settings.userInfo.name,\n    modPlan: this.props.modplan\n  }\n\n  this.props.updateSettings(userData);\n}\n\n    render() {\n        return (\n            <div>\n              <h5>Enter your particulars so that we can personalise your user experience!</h5>\n\n              <Options \n                settings={this.props.settings.userInfo}\n                onFacultyChange={this.changeFaculty}\n                onMajorChange={this.changeMajor}\n                onSpecialisationChange={this.changeSpecialisation}\n                onResidenceChange={this.changeResidence}\n                onMatriculationChange={this.changeMatriculationYear}\n                onTargetGradChange={this.changeTargetGradYear}\n                facultyOptions={this.generateOptions('faculty')}\n                majorOptions={this.generateOptions('major')}\n                specialisationOptions={this.generateOptions('specialisation')}\n                residenceOptions={this.generateOptions('residence')}\n                matriculationYearOptions={this.generateOptions('matriculationYear')}\n                targetGradYearOptions={this.generateOptions('targetGradYear')}\n              />\n\n              <Button class='button' onClick={this.handleSubmit}>Save Academic Settings</Button>\n            </div>\n        );\n    }\n}\n\nAcadSettings.propTypes = {\n  updateSettings: PropTypes.func.isRequired,\n  setMatriculationYearOptions: PropTypes.func.isRequired,\n  modplan: PropTypes.object.isRequired,\n  settings: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  modplan: state.modplan.selectedModules,\n  settings: state.settings,\n  userInfo: state.settings.userInfo\n});\n\nexport default connect(mapStateToProps, \n  { updateSettings, setMatriculationYearOptions, setTargetGradYearOptions }) (AcadSettings);\n"]},"metadata":{},"sourceType":"module"}