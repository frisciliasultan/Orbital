{"ast":null,"code":"/*\nTakes in a moduleCode as a String and parses it to return a JS Object with\nkeys\n*/\nmodule.exports = function parseMod(moduleCode) {\n  const isLetter = char => c >= 'a' && c <= 'z' || c >= 'A' && c <= 'Z';\n\n  var prefix = '';\n  var number = '';\n  var suffix = '';\n  var c = moduleCode.charAt(0);\n\n  while (isLetter(c) && moduleCode.length !== 0) {\n    prefix += c;\n    moduleCode = moduleCode.substr(1);\n    c = moduleCode.charAt(0);\n  }\n\n  while (!isLetter(c) && moduleCode.length !== 0) {\n    number += c;\n    moduleCode = moduleCode.substr(1);\n    c = moduleCode.charAt(0);\n  }\n\n  while (isLetter(c) && moduleCode.length !== 0) {\n    suffix += c;\n    moduleCode = moduleCode.substr(1);\n    c = moduleCode.charAt(0);\n  }\n\n  return {\n    moduleCode: prefix + number + suffix,\n    prefix: prefix,\n    number: number,\n    suffix: suffix,\n    no_suffix: prefix + number,\n    level: number.charAt(0),\n    type: number.charAt(1)\n  };\n};","map":{"version":3,"sources":["/Users/frisciliasultan/Documents/Orbitalhosting/src/backend_utils/parseMod.js"],"names":["module","exports","parseMod","moduleCode","isLetter","char","c","prefix","number","suffix","charAt","length","substr","no_suffix","level","type"],"mappings":"AAAA;;;;AAKAA,MAAM,CAACC,OAAP,GAAiB,SAASC,QAAT,CAAmBC,UAAnB,EAA+B;AAC9C,QAAMC,QAAQ,GAAIC,IAAD,IAAWC,CAAC,IAAI,GAAL,IAAYA,CAAC,IAAI,GAAlB,IAA2BA,CAAC,IAAI,GAAL,IAAYA,CAAC,IAAI,GAAvE;;AACA,MAAIC,MAAM,GAAG,EAAb;AACA,MAAIC,MAAM,GAAG,EAAb;AACA,MAAIC,MAAM,GAAG,EAAb;AAEA,MAAIH,CAAC,GAAGH,UAAU,CAACO,MAAX,CAAkB,CAAlB,CAAR;;AACA,SAAMN,QAAQ,CAACE,CAAD,CAAR,IAAeH,UAAU,CAACQ,MAAX,KAAsB,CAA3C,EAA8C;AAC5CJ,IAAAA,MAAM,IAAID,CAAV;AACAH,IAAAA,UAAU,GAAGA,UAAU,CAACS,MAAX,CAAkB,CAAlB,CAAb;AACAN,IAAAA,CAAC,GAAGH,UAAU,CAACO,MAAX,CAAkB,CAAlB,CAAJ;AACD;;AACD,SAAM,CAACN,QAAQ,CAACE,CAAD,CAAT,IAAgBH,UAAU,CAACQ,MAAX,KAAsB,CAA5C,EAA+C;AAC7CH,IAAAA,MAAM,IAAIF,CAAV;AACAH,IAAAA,UAAU,GAAGA,UAAU,CAACS,MAAX,CAAkB,CAAlB,CAAb;AACAN,IAAAA,CAAC,GAAGH,UAAU,CAACO,MAAX,CAAkB,CAAlB,CAAJ;AACD;;AACD,SAAMN,QAAQ,CAACE,CAAD,CAAR,IAAeH,UAAU,CAACQ,MAAX,KAAsB,CAA3C,EAA8C;AAC5CF,IAAAA,MAAM,IAAIH,CAAV;AACAH,IAAAA,UAAU,GAAGA,UAAU,CAACS,MAAX,CAAkB,CAAlB,CAAb;AACAN,IAAAA,CAAC,GAAGH,UAAU,CAACO,MAAX,CAAkB,CAAlB,CAAJ;AACD;;AAED,SAAO;AACLP,IAAAA,UAAU,EAAEI,MAAM,GAAGC,MAAT,GAAkBC,MADzB;AAELF,IAAAA,MAAM,EAAEA,MAFH;AAGLC,IAAAA,MAAM,EAAEA,MAHH;AAILC,IAAAA,MAAM,EAAEA,MAJH;AAKLI,IAAAA,SAAS,EAAEN,MAAM,GAAGC,MALf;AAMLM,IAAAA,KAAK,EAAEN,MAAM,CAACE,MAAP,CAAc,CAAd,CANF;AAOLK,IAAAA,IAAI,EAAEP,MAAM,CAACE,MAAP,CAAc,CAAd;AAPD,GAAP;AASD,CAhCD","sourcesContent":["/*\nTakes in a moduleCode as a String and parses it to return a JS Object with\nkeys\n*/\n\nmodule.exports = function parseMod (moduleCode) {\n  const isLetter = (char) => (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z');\n  var prefix = '';\n  var number = '';\n  var suffix = '';\n\n  var c = moduleCode.charAt(0);\n  while(isLetter(c) && moduleCode.length !== 0) {\n    prefix += c;\n    moduleCode = moduleCode.substr(1);\n    c = moduleCode.charAt(0);\n  }\n  while(!isLetter(c) && moduleCode.length !== 0) {\n    number += c;\n    moduleCode = moduleCode.substr(1);\n    c = moduleCode.charAt(0);\n  }\n  while(isLetter(c) && moduleCode.length !== 0) {\n    suffix += c;\n    moduleCode = moduleCode.substr(1);\n    c = moduleCode.charAt(0);\n  }\n\n  return {\n    moduleCode: prefix + number + suffix,\n    prefix: prefix, \n    number: number, \n    suffix: suffix, \n    no_suffix: prefix + number,\n    level: number.charAt(0),\n    type: number.charAt(1)\n  };\n}"]},"metadata":{},"sourceType":"module"}