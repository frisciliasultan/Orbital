{"ast":null,"code":"import { SET_USER_SETTINGS, SET_CURRENT_SEMESTER, SET_MATRICULATION_OPTIONS, SET_TARGET_GRAD_OPTIONS, CLEAN_UP_SETTINGS } from \"./types\";\nimport axios from \"axios\";\nexport const setUserSettings = userData => {\n  return {\n    type: SET_USER_SETTINGS,\n    payload: userData\n  };\n};\nexport const initialSettings = () => dispatch => {\n  axios.defaults.timeout = 2000;\n  axios.get('http://172.19.162.53:3000/account').then(res => dispatch(setUserSettings(res.data))).catch(err => {\n    console.log(err); // window.location.replace(\"/500-error\")\n  });\n};\nexport const updateSettings = userData => dispatch => {\n  axios.defaults.timeout = 6000;\n  console.log('to send' + userData);\n  axios.put(\"http://172.19.162.53:3000/account\", userData).then(res => dispatch(setUserSettings(res.data.updated))).catch(err => {\n    console.log(err); // window.location.replace(\"/500-error\")\n  });\n};\nexport const setCurrentSemester = (currentAY, currentSemester) => {\n  return {\n    type: SET_CURRENT_SEMESTER,\n    currentAY,\n    currentSemester\n  };\n};\nexport const setMatriculationYearOptions = (currentAY, currentSemester) => {\n  return {\n    type: SET_MATRICULATION_OPTIONS,\n    currentAY,\n    currentSemester\n  };\n};\nexport const setTargetGradYearOptions = (AY, Semester) => {\n  return {\n    type: SET_TARGET_GRAD_OPTIONS,\n    AY,\n    Semester\n  };\n};\nexport const cleanUpSettings = () => {\n  return {\n    type: CLEAN_UP_SETTINGS\n  };\n}; //turn array of choices into options dropdown\n// export const generateOptions = (optionList, category,) {\n//     let facIndex = this.state.facIndex;\n//   if(choices === 'faculty'){\n//     return this.state.dummyfac.map((obj) => {\n//       return (\n//       <option value={Object.keys(obj)}>\n//         {Object.keys(obj)}\n//       </option>\n//       );\n//     });\n//   } else if(choices === 'major') {\n//       if(this.state.faculty) {\n//     return this.state.dummyfac\n//            [facIndex]\n//            [this.state.faculty].map((obj) => {\n//                   return (\n//                     <option value={Object.keys(obj)}>\n//                       {Object.keys(obj)}\n//                     </option>\n//                   )\n//               }\n//     )}\n//   } else if(choices === 'specialisation') {\n//       if(this.state.major && this.state.faculty) {\n//       return this.state.dummyfac\n//              [facIndex]\n//              [this.state.faculty][this.state.majorIndex][this.state.major].map((item) => {\n//                   return (\n//                     <option>\n//                       {item}\n//                     </option>\n//                   )\n//                 }    \n//       )}\n//   } else if(choices === 'residence') {\n//     return this.state.residenceOptions.map((obj) => {\n//       return (\n//       <option value={obj}>\n//         {obj}\n//       </option>\n//       );\n//     });\n//   } else {\n//       let options;\n//       if(choices === 'matriculationYear') {\n//         options = this.props.settings.matriculationOptions\n//       } else {\n//         options = this.props.settings.targetGradOptions\n//       }\n//     return options.map((option) => {\n//       return (\n//       <option value={option}>\n//         {option}\n//       </option>\n//       );\n//     });\n//   }\n// }","map":{"version":3,"sources":["/Users/frisciliasultan/Documents/Orbital/client/src/actions/settingsActions.js"],"names":["SET_USER_SETTINGS","SET_CURRENT_SEMESTER","SET_MATRICULATION_OPTIONS","SET_TARGET_GRAD_OPTIONS","CLEAN_UP_SETTINGS","axios","setUserSettings","userData","type","payload","initialSettings","dispatch","defaults","timeout","get","then","res","data","catch","err","console","log","updateSettings","put","updated","setCurrentSemester","currentAY","currentSemester","setMatriculationYearOptions","setTargetGradYearOptions","AY","Semester","cleanUpSettings"],"mappings":"AAAA,SACIA,iBADJ,EAEIC,oBAFJ,EAGIC,yBAHJ,EAIIC,uBAJJ,EAKIC,iBALJ,QAMO,SANP;AAQA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,eAAe,GAAIC,QAAD,IAAc;AACzC,SAAO;AACHC,IAAAA,IAAI,EAAER,iBADH;AAEHS,IAAAA,OAAO,EAAEF;AAFN,GAAP;AAIH,CALM;AAOP,OAAO,MAAMG,eAAe,GAAG,MAAMC,QAAQ,IAAI;AAC7CN,EAAAA,KAAK,CAACO,QAAN,CAAeC,OAAf,GAAyB,IAAzB;AACAR,EAAAA,KAAK,CACAS,GADL,CACS,mCADT,EAEKC,IAFL,CAEUC,GAAG,IAAIL,QAAQ,CAACL,eAAe,CAACU,GAAG,CAACC,IAAL,CAAhB,CAFzB,EAGKC,KAHL,CAGWC,GAAG,IAAI;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,EADU,CAEV;AACH,GANL;AAOH,CATM;AAWP,OAAO,MAAMG,cAAc,GAAIf,QAAD,IAAcI,QAAQ,IAAI;AACpDN,EAAAA,KAAK,CAACO,QAAN,CAAeC,OAAf,GAAyB,IAAzB;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAYd,QAAxB;AACAF,EAAAA,KAAK,CACAkB,GADL,CACS,mCADT,EAC8ChB,QAD9C,EAEKQ,IAFL,CAEUC,GAAG,IAAIL,QAAQ,CAACL,eAAe,CAACU,GAAG,CAACC,IAAJ,CAASO,OAAV,CAAhB,CAFzB,EAGKN,KAHL,CAGWC,GAAG,IAAI;AACNC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,EADM,CAEN;AACH,GANT;AAOH,CAVM;AAYP,OAAO,MAAMM,kBAAkB,GAAG,CAACC,SAAD,EAAYC,eAAZ,KAAgC;AAC9D,SAAO;AACHnB,IAAAA,IAAI,EAAEP,oBADH;AAEHyB,IAAAA,SAFG;AAGHC,IAAAA;AAHG,GAAP;AAKH,CANM;AAQP,OAAO,MAAMC,2BAA2B,GAAG,CAACF,SAAD,EAAYC,eAAZ,KAAgC;AACvE,SAAO;AACHnB,IAAAA,IAAI,EAAEN,yBADH;AAEHwB,IAAAA,SAFG;AAGHC,IAAAA;AAHG,GAAP;AAKH,CANM;AAQP,OAAO,MAAME,wBAAwB,GAAG,CAACC,EAAD,EAAKC,QAAL,KAAkB;AACtD,SAAO;AACHvB,IAAAA,IAAI,EAAEL,uBADH;AAEH2B,IAAAA,EAFG;AAGHC,IAAAA;AAHG,GAAP;AAKH,CANM;AAQP,OAAO,MAAMC,eAAe,GAAG,MAAM;AACjC,SAAO;AACHxB,IAAAA,IAAI,EAAEJ;AADH,GAAP;AAGH,CAJM,C,CAKP;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import {\n    SET_USER_SETTINGS,\n    SET_CURRENT_SEMESTER,\n    SET_MATRICULATION_OPTIONS,\n    SET_TARGET_GRAD_OPTIONS,\n    CLEAN_UP_SETTINGS\n} from \"./types\";\n\nimport axios from \"axios\";\n\nexport const setUserSettings = (userData) => {\n    return {\n        type: SET_USER_SETTINGS,\n        payload: userData\n    }\n}\n\nexport const initialSettings = () => dispatch => {\n    axios.defaults.timeout = 2000;\n    axios  \n        .get('http://172.19.162.53:3000/account')\n        .then(res => dispatch(setUserSettings(res.data)))\n        .catch(err => {\n            console.log(err);\n            // window.location.replace(\"/500-error\")\n        })\n}\n\nexport const updateSettings = (userData) => dispatch => {\n    axios.defaults.timeout = 6000;\n    console.log('to send' + userData)\n    axios\n        .put(\"http://172.19.162.53:3000/account\", userData)\n        .then(res => dispatch(setUserSettings(res.data.updated)))\n        .catch(err => {\n                console.log(err);\n                // window.location.replace(\"/500-error\")\n            })\n};\n\nexport const setCurrentSemester = (currentAY, currentSemester) => {\n    return {\n        type: SET_CURRENT_SEMESTER,\n        currentAY,\n        currentSemester\n    }\n}\n\nexport const setMatriculationYearOptions = (currentAY, currentSemester) => {\n    return {\n        type: SET_MATRICULATION_OPTIONS,\n        currentAY,\n        currentSemester\n    }\n}\n\nexport const setTargetGradYearOptions = (AY, Semester) => {\n    return {\n        type: SET_TARGET_GRAD_OPTIONS,\n        AY,\n        Semester\n    }\n}\n\nexport const cleanUpSettings = () => {\n    return { \n        type: CLEAN_UP_SETTINGS\n    }\n}\n//turn array of choices into options dropdown\n// export const generateOptions = (optionList, category,) {\n\n//     let facIndex = this.state.facIndex;\n//   if(choices === 'faculty'){\n//     return this.state.dummyfac.map((obj) => {\n//       return (\n//       <option value={Object.keys(obj)}>\n//         {Object.keys(obj)}\n//       </option>\n//       );\n//     });\n//   } else if(choices === 'major') {\n//       if(this.state.faculty) {\n//     return this.state.dummyfac\n//            [facIndex]\n//            [this.state.faculty].map((obj) => {\n//                   return (\n//                     <option value={Object.keys(obj)}>\n//                       {Object.keys(obj)}\n//                     </option>\n//                   )\n//               }\n//     )}\n//   } else if(choices === 'specialisation') {\n//       if(this.state.major && this.state.faculty) {\n//       return this.state.dummyfac\n//              [facIndex]\n//              [this.state.faculty][this.state.majorIndex][this.state.major].map((item) => {\n//                   return (\n//                     <option>\n//                       {item}\n//                     </option>\n//                   )\n//                 }    \n//       )}\n//   } else if(choices === 'residence') {\n//     return this.state.residenceOptions.map((obj) => {\n//       return (\n//       <option value={obj}>\n//         {obj}\n//       </option>\n//       );\n//     });\n//   } else {\n//       let options;\n\n//       if(choices === 'matriculationYear') {\n//         options = this.props.settings.matriculationOptions\n//       } else {\n//         options = this.props.settings.targetGradOptions\n//       }\n\n//     return options.map((option) => {\n//       return (\n//       <option value={option}>\n//         {option}\n//       </option>\n//       );\n//     });\n//   }\n// }\n\n\n"]},"metadata":{},"sourceType":"module"}