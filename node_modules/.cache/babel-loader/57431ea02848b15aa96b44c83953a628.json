{"ast":null,"code":"var _jsxFileName = \"/Users/frisciliasultan/Documents/Orbital/client/src/Settings/AcadSettings.jsx\";\nimport React from 'react';\nimport { Options } from '../Pages/Module Selection Page/ModuleList';\nimport { Link } from 'react-router-dom';\nimport axios from \"axios\";\nimport { Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport PropTypes from \"prop-types\";\nimport { updateSettings, setCurrentSemester } from \"../actions/settingsActions\";\n\nclass AcadSettings extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.callBackendAPI = () => {\n      const headers = {\n        headers: {\n          'accept': 'application/json'\n        }\n      };\n      axios.get('http://172.19.162.53:3000/account').then(res => {\n        console.log(res);\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.handleSubmit = () => {\n      const userData = {\n        faculty: this.state.faculty,\n        major: this.state.major,\n        specialisation: this.state.specialisation,\n        residential: this.state.residence,\n        matriculationYear: this.state.matriculationYear,\n        targetGraduationYear: this.state.targetGraduationYear,\n        name: this.props.name,\n        modPlan: this.props.modplan\n      };\n      this.props.updateSettings(userData);\n    };\n\n    this.state = {\n      faculty: null,\n      major: null,\n      specialisation: null,\n      residenceOptions: ['N/A', 'CAPT', 'RC4', 'RVRC', 'Tembusu', 'USP'],\n      residence: 'N/A',\n      matriculationYearOptions: ['AY 20/21 (Year 1)', 'AY 19/20 (Year 2) ', 'AY 18/19 (Year 3)', 'AY 17/18 (Year 4)', 'AY 16/17 (Year 5)', 'AY 15/16 (Year 6)'],\n      matriculationYear: null,\n      targetGraduationYear: null,\n      dummyfac: [{\n        'Business': [{\n          'Business Administration': ['A', 'B']\n        }, {\n          'Accountancy': ['C', 'D']\n        }]\n      }, {\n        'FASS': [{\n          'C': ['N/A']\n        }, {\n          'D': ['N/A']\n        }]\n      }, {\n        'Computing': [{\n          'Computer Science': ['N/A']\n        }, {\n          'Business Analytics': ['N/A']\n        }]\n      }]\n    };\n    this.changeFaculty = this.changeFaculty.bind(this);\n    this.changeMajor = this.changeMajor.bind(this);\n    this.changeSpecialisation = this.changeSpecialisation.bind(this);\n    this.changeResidence = this.changeResidence.bind(this);\n    this.generateOptions = this.generateOptions.bind(this);\n  }\n\n  componentDidMount() {\n    if (!this.props.settings.currentAY) {\n      const time = new Date();\n      const month = time.getMonth() + 1;\n      const year = time.getFullYear();\n      const isSem2 = month <= 7;\n      let currentSemester;\n      let currentAY;\n\n      if (isSem2) {\n        currentAY = `${year - 1}/${year}`;\n        currentSemester = \"Semester 2\";\n      } else {\n        currentAY = `${year}/${year + 1}`;\n        currentSemester = \"Semester 1\";\n      }\n\n      this.props.setCurrentSemester(currentAY, currentSemester);\n      this.callBackendAPI();\n    }\n  }\n\n  changeFaculty(value, index) {\n    this.setState({\n      faculty: value,\n      facIndex: index,\n      major: null\n    });\n  }\n\n  changeMajor(value, index) {\n    this.setState({\n      major: value,\n      majorIndex: index\n    });\n  }\n\n  changeSpecialisation(value) {\n    this.setState({\n      specialisation: value\n    });\n  }\n\n  changeResidence(value) {\n    this.setState({\n      residence: value\n    });\n  } //turn array of choices into options dropdown\n\n\n  generateOptions(choices) {\n    let facIndex = this.state.facIndex;\n\n    if (choices === 'faculty') {\n      return this.state.dummyfac.map(obj => {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          value: Object.keys(obj),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 7\n          }\n        }, Object.keys(obj));\n      });\n    } else if (choices === 'major') {\n      if (this.state.faculty) {\n        return this.state.dummyfac[facIndex][this.state.faculty].map(obj => {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            value: Object.keys(obj),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 21\n            }\n          }, Object.keys(obj));\n        });\n      }\n    } else if (choices === 'specialisation') {\n      if (this.state.major && this.state.faculty) {\n        return this.state.dummyfac[facIndex][this.state.faculty][this.state.majorIndex][this.state.major].map(item => {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 21\n            }\n          }, item);\n        });\n      }\n    } else if (choices === 'residence') {\n      return this.state.residenceOptions.map(obj => {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          value: obj,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 7\n          }\n        }, obj);\n      });\n    } else if (choices === 'matriculationYear') {\n      return this.state.matriculationYearOptions.map(obj => {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          value: obj,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 7\n          }\n        }, obj);\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 15\n      }\n    }, \"Enter your particulars so that we can personalise your user experience!\"), /*#__PURE__*/React.createElement(Options, {\n      onFacultyChange: this.changeFaculty,\n      onMajorChange: this.changeMajor,\n      onSpecialisationChange: this.changeSpecialisation,\n      onResidenceChange: this.changeResidence,\n      facultyOptions: this.generateOptions('faculty'),\n      majorOptions: this.generateOptions('major'),\n      specialisationOptions: this.generateOptions('specialisation'),\n      residenceOptions: this.generateOptions('residence'),\n      matriculationYearOptions: this.generateOptions('matriculationYear'),\n      username: \"abc\" //need to change\n      ,\n      major: this.state.major,\n      specialisation: this.state.specialisation,\n      residence: this.state.residence,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      class: \"button\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 15\n      }\n    }, \"Save Academic Settings\"));\n  }\n\n}\n\nAcadSettings.propTypes = {\n  name: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n  name: state.auth.user.name,\n  modplan: state.modplan.selectedModules,\n  settings: state.settings\n});\n\nexport default connect(mapStateToProps, {\n  updateSettings,\n  setCurrentSemester\n})(AcadSettings);","map":{"version":3,"sources":["/Users/frisciliasultan/Documents/Orbital/client/src/Settings/AcadSettings.jsx"],"names":["React","Options","Link","axios","Button","connect","PropTypes","updateSettings","setCurrentSemester","AcadSettings","Component","constructor","props","callBackendAPI","headers","get","then","res","console","log","catch","err","handleSubmit","userData","faculty","state","major","specialisation","residential","residence","matriculationYear","targetGraduationYear","name","modPlan","modplan","residenceOptions","matriculationYearOptions","dummyfac","changeFaculty","bind","changeMajor","changeSpecialisation","changeResidence","generateOptions","componentDidMount","settings","currentAY","time","Date","month","getMonth","year","getFullYear","isSem2","currentSemester","value","index","setState","facIndex","majorIndex","choices","map","obj","Object","keys","item","render","propTypes","string","isRequired","mapStateToProps","auth","user","selectedModules"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Options } from '../Pages/Module Selection Page/ModuleList';\nimport { Link } from 'react-router-dom';\nimport axios from \"axios\";\nimport { Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport PropTypes from \"prop-types\";\nimport { updateSettings, setCurrentSemester } from \"../actions/settingsActions\";\n\nclass AcadSettings extends React.Component {\nconstructor(props) {\n    super(props);\n\n    this.state = {\n        faculty: null,\n        major: null,\n        specialisation: null,\n        residenceOptions: ['N/A','CAPT', 'RC4', 'RVRC','Tembusu', 'USP'],\n        residence: 'N/A',\n        matriculationYearOptions: ['AY 20/21 (Year 1)','AY 19/20 (Year 2) ', 'AY 18/19 (Year 3)', 'AY 17/18 (Year 4)','AY 16/17 (Year 5)', 'AY 15/16 (Year 6)'],\n        matriculationYear: null,\n        targetGraduationYear: null,\n        dummyfac: [{'Business': [{'Business Administration': ['A', 'B']},\n                                {'Accountancy': ['C', 'D']}]},\n                {'FASS': [{'C': ['N/A']},\n                            {'D': ['N/A']}]},\n                {\n                    'Computing': [\n                                    {'Computer Science': ['N/A']},\n                                    {'Business Analytics': ['N/A']}\n                    ]\n                }],\n        \n    };\n\n    this.changeFaculty = this.changeFaculty.bind(this);\n    this.changeMajor=this.changeMajor.bind(this);\n    this.changeSpecialisation= this.changeSpecialisation.bind(this);\n    this.changeResidence= this.changeResidence.bind(this);\n    this.generateOptions =this.generateOptions.bind(this);\n}\n\ncallBackendAPI = () => {\n  const headers = { headers: {'accept': 'application/json'}}\n      axios.get('http://172.19.162.53:3000/account')\n  .then(res => {\n      console.log(res)\n  }) \n  .catch(err => {\n      console.log(err)\n  });\n}\n\ncomponentDidMount () {\n  if(!this.props.settings.currentAY) {\n    const time = new Date();\n    const month = time.getMonth() + 1;\n    const year = time.getFullYear();\n    const isSem2 = (month <= 7);\n    let currentSemester;\n    let currentAY;\n\n    if(isSem2) {\n        currentAY = `${year - 1}/${year}`\n        currentSemester = \"Semester 2\"\n    } else {\n        currentAY = `${year}/${year + 1}`\n        currentSemester = \"Semester 1\"\n    }\n\n    this.props.setCurrentSemester(currentAY, currentSemester);\n    this.callBackendAPI();\n  }\n}\n\nchangeFaculty(value, index) {\n    this.setState({\n      faculty: value,\n      facIndex: index,\n      major: null\n    });\n  }\n\n  changeMajor(value, index) {\n    this.setState({\n      major: value,\n      majorIndex: index\n    });\n  }\n\n  changeSpecialisation(value) {\n    this.setState({\n      specialisation: value,\n    });\n  }\n  changeResidence(value) {\n    this.setState({\n      residence: value,\n    });\n  }\n\n  //turn array of choices into options dropdown\n  generateOptions(choices) {\n    let facIndex = this.state.facIndex;\n  if(choices === 'faculty'){\n    return this.state.dummyfac.map((obj) => {\n      return (\n      <option value={Object.keys(obj)}>\n        {Object.keys(obj)}\n      </option>\n      );\n    });\n  } else if(choices === 'major') {\n      if(this.state.faculty) {\n    return this.state.dummyfac\n           [facIndex]\n           [this.state.faculty].map((obj) => {\n                  return (\n                    <option value={Object.keys(obj)}>\n                      {Object.keys(obj)}\n                    </option>\n                  )\n              }\n    )}\n  } else if(choices === 'specialisation') {\n      if(this.state.major && this.state.faculty) {\n      return this.state.dummyfac\n             [facIndex]\n             [this.state.faculty][this.state.majorIndex][this.state.major].map((item) => {\n                  return (\n                    <option>\n                      {item}\n                    </option>\n                  )\n                }    \n      )}\n  } else if(choices === 'residence') {\n    return this.state.residenceOptions.map((obj) => {\n      return (\n      <option value={obj}>\n        {obj}\n      </option>\n      );\n    });\n  } else if(choices === 'matriculationYear') {\n    return this.state.matriculationYearOptions.map((obj) => {\n      return (\n      <option value={obj}>\n        {obj}\n      </option>\n      );\n    });\n  }\n}\n\nhandleSubmit = () => {\n  const userData = {\n    faculty: this.state.faculty,\n    major: this.state.major,\n    specialisation: this.state.specialisation,\n    residential: this.state.residence,\n    matriculationYear: this.state.matriculationYear,\n    targetGraduationYear: this.state.targetGraduationYear,\n    name: this.props.name,\n    modPlan: this.props.modplan\n  }\n\n  this.props.updateSettings(userData);\n}\n\n    render() {\n        return (\n            <div>\n              <h5>Enter your particulars so that we can personalise your user experience!</h5>\n\n              <Options \n                onFacultyChange={this.changeFaculty}\n                onMajorChange={this.changeMajor}\n                onSpecialisationChange={this.changeSpecialisation}\n                onResidenceChange={this.changeResidence}\n                facultyOptions={this.generateOptions('faculty')}\n                majorOptions={this.generateOptions('major')}\n                specialisationOptions={this.generateOptions('specialisation')}\n                residenceOptions={this.generateOptions('residence')}\n                matriculationYearOptions={this.generateOptions('matriculationYear')}\n                username=\"abc\" //need to change\n                major={this.state.major}\n                specialisation={this.state.specialisation}\n                residence={this.state.residence}\n              />\n\n              <Button class='button' onClick={this.handleSubmit}>Save Academic Settings</Button>\n            </div>\n        );\n    }\n}\n\nAcadSettings.propTypes = {\n  name: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n  name: state.auth.user.name,\n  modplan: state.modplan.selectedModules,\n  settings: state.settings\n});\n\nexport default connect(mapStateToProps, { updateSettings, setCurrentSemester }) (AcadSettings);\n"]},"metadata":{},"sourceType":"module"}