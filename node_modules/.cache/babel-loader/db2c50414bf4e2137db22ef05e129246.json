{"ast":null,"code":"var _jsxFileName = \"/Users/frisciliasultan/Documents/Orbital/client/src/Pages/Module Planner Page/Board.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport AutoCompleteText from './AutocompleteText';\nimport { Card, Button } from 'react-bootstrap';\nimport ModuleCard from './Card';\nimport { ItemTypes } from './itemType';\nimport { useDrop } from 'react-dnd';\n\nfunction Board(props) {\n  const [isTextBoxOpen, setIsTextBoxOpen] = useState(false); //const [moduleCodeTitle, setModuleCodeTitle] = useState([]);\n\n  const [displayCard, setDisplayCard] = useState(); // const length = props.selectedModules.length;\n\n  const generateCards = () => props.selectedModules.filter((object, i) => object.location === props.id).map((object, i) => console.log('called')( /*#__PURE__*/React.createElement(ModuleCard, {\n    id: object.moduleCode,\n    location: props.year + ' ' + props.semester,\n    className: \"card\",\n    title: `${object.moduleCode}: ${object.title}`,\n    MCs: object.moduleCredit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 18\n    }\n  })));\n\n  const [{\n    isOver\n  }, drop] = useDrop({\n    accept: ItemTypes.CARD,\n    drop: (item, monitor) => console.log(item),\n    collect: monitor => ({\n      isOver: !!monitor.isOver()\n    })\n  });\n\n  function handleButtonClick() {\n    setIsTextBoxOpen(!isTextBoxOpen);\n    console.log(props.selectedModules);\n  } // function updateModuleCards(object) {\n  //    object.location = props.year + ' ' + props.semester;\n  //     let newModuleCodeTitle = moduleCodeTitle;\n  //     if (!newModuleCodeTitle.includes(object)) {\n  //         newModuleCodeTitle.push(object);\n  //         setModuleCodeTitle(newModuleCodeTitle);\n  //         setDisplayCard(generateCards);\n  //     }\n  // }\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, props.semester), /*#__PURE__*/React.createElement(\"div\", {\n    ref: drop,\n    id: props.id,\n    style: {\n      width: '20rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '165px',\n      height: props.selectedModules[0] === 0 && '59px',\n      outline: props.selectedModules[0] > 0 ? 'none' : '1px dotted'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, props.selectedModules[0] > 0 ? 'Hey' : 'Drop module here'), isTextBoxOpen && /*#__PURE__*/React.createElement(AutoCompleteText, {\n    location: props.id,\n    updateSelectedModules: props.updateSelectedModules,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleButtonClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, \"Add Module\")));\n}\n\nexport default Board;","map":{"version":3,"sources":["/Users/frisciliasultan/Documents/Orbital/client/src/Pages/Module Planner Page/Board.jsx"],"names":["React","useState","useEffect","AutoCompleteText","Card","Button","ModuleCard","ItemTypes","useDrop","Board","props","isTextBoxOpen","setIsTextBoxOpen","displayCard","setDisplayCard","generateCards","selectedModules","filter","object","i","location","id","map","console","log","moduleCode","year","semester","title","moduleCredit","isOver","drop","accept","CARD","item","monitor","collect","handleButtonClick","width","height","outline","updateSelectedModules"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport AutoCompleteText from './AutocompleteText';\nimport { Card, Button } from 'react-bootstrap';\nimport ModuleCard from './Card';\nimport { ItemTypes } from './itemType';\nimport { useDrop } from 'react-dnd';\n\n\n\n\n\nfunction Board (props) {\n    const [isTextBoxOpen, setIsTextBoxOpen] = useState(false);\n    //const [moduleCodeTitle, setModuleCodeTitle] = useState([]);\n    const [displayCard, setDisplayCard] = useState();\n    // const length = props.selectedModules.length;\n    const generateCards = () => props.selectedModules\n        .filter((object, i) => object.location === props.id)\n        .map((object, i) => console.log('called')\n                (<ModuleCard\n                    id={object.moduleCode}\n                    location={props.year + ' ' + props.semester}\n                    className=\"card\"\n                    title={`${object.moduleCode}: ${object.title}`}\n                    MCs={object.moduleCredit}/>));\n\n    const [{ isOver }, drop] = useDrop({\n            accept: ItemTypes.CARD,\n            drop: (item, monitor) => console.log(item),\n            collect: monitor => ({\n                isOver: !!monitor.isOver(),\n            }),\n    })\n\n    function handleButtonClick() {\n        setIsTextBoxOpen(!isTextBoxOpen);\n        console.log(props.selectedModules);\n     }\n\n    // function updateModuleCards(object) {\n    //    object.location = props.year + ' ' + props.semester;\n    //     let newModuleCodeTitle = moduleCodeTitle;\n    //     if (!newModuleCodeTitle.includes(object)) {\n    //         newModuleCodeTitle.push(object);\n    //         setModuleCodeTitle(newModuleCodeTitle);\n    //         setDisplayCard(generateCards);\n    //     }\n\n    // }\n\n        return (\n            <div>\n                <h3>{props.semester}</h3>\n            <div   \n                ref={drop}\n                id={props.id}\n                style={{width: '20rem'}}\n            >\n\n            <div style={{width: '165px', height: (props.selectedModules[0] === 0) && '59px', outline: props.selectedModules[0] > 0 ? 'none' : '1px dotted'}}>{props.selectedModules[0] > 0 ? 'Hey' : 'Drop module here'}</div>\n            {isTextBoxOpen && <AutoCompleteText \n                                            location={props.id}\n                                            updateSelectedModules={props.updateSelectedModules}/>}\n                <Button onClick={handleButtonClick}>Add Module</Button>\n                \n                </div>\n            </div>\n        )\n   \n}\n\nexport default Board;"]},"metadata":{},"sourceType":"module"}