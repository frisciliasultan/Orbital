{"ast":null,"code":"var _jsxFileName = \"/Users/frisciliasultan/Documents/Orbitalhosting/src/Pages/Module Planner Page/TrashBox.jsx\";\nimport React from 'react';\nimport { Card } from 'react-bootstrap';\nimport { useDrop } from 'react-dnd';\nimport { ItemTypes } from './itemType';\nimport { setModuleLocation } from '../../actions/modplanActions';\nimport { connect } from \"react-redux\";\nimport PropTypes from 'prop-types';\n\nfunction TrashBox(props) {\n  const [{\n    isOver\n  }, drop] = useDrop({\n    accept: ItemTypes.CARD,\n    drop: item => props.setModuleLocation(item, null, null, props.modplan.selectedModules),\n    collect: monitor => ({\n      isOver: !!monitor.isOver()\n    })\n  });\n  return /*#__PURE__*/React.createElement(Card, {\n    className: \"trashbox\",\n    ref: drop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, \"Trash\"), /*#__PURE__*/React.createElement(Card.Subtitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, \"Drop Modules here to delete\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"far fa-trash-alt\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  })));\n}\n\nTrashBox.propType = {\n  setModuleLocation: PropTypes.func.isRequired,\n  modplan: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  modplan: state.modplan\n});\n\nexport default connect(mapStateToProps, {\n  setModuleLocation\n})(TrashBox);","map":{"version":3,"sources":["/Users/frisciliasultan/Documents/Orbitalhosting/src/Pages/Module Planner Page/TrashBox.jsx"],"names":["React","Card","useDrop","ItemTypes","setModuleLocation","connect","PropTypes","TrashBox","props","isOver","drop","accept","CARD","item","modplan","selectedModules","collect","monitor","propType","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,SAASC,iBAAT,QAAkC,8BAAlC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,SAASC,QAAT,CAAmBC,KAAnB,EAA0B;AAEtB,QAAM,CAAC;AAAEC,IAAAA;AAAF,GAAD,EAAaC,IAAb,IAAqBR,OAAO,CAAC;AAC/BS,IAAAA,MAAM,EAAER,SAAS,CAACS,IADa;AAE/BF,IAAAA,IAAI,EAAGG,IAAD,IAAUL,KAAK,CAACJ,iBAAN,CAAwBS,IAAxB,EAA8B,IAA9B,EAAoC,IAApC,EAA0CL,KAAK,CAACM,OAAN,CAAcC,eAAxD,CAFe;AAG/BC,IAAAA,OAAO,EAAEC,OAAO,KAAK;AACjBR,MAAAA,MAAM,EAAE,CAAC,CAACQ,OAAO,CAACR,MAAR;AADO,KAAL;AAHe,GAAD,CAAlC;AAQA,sBACI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,UAAhB;AACI,IAAA,GAAG,EAAEC,IADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFJ,eAGI,oBAAC,IAAD,CAAM,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AACI,IAAA,SAAS,EAAC,kBADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CAJJ,CADJ;AAWH;;AAEDH,QAAQ,CAACW,QAAT,GAAoB;AAChBd,EAAAA,iBAAiB,EAAEE,SAAS,CAACa,IAAV,CAAeC,UADlB;AAEhBN,EAAAA,OAAO,EAAER,SAAS,CAACe,MAAV,CAAiBD;AAFV,CAApB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAC9BT,EAAAA,OAAO,EAAES,KAAK,CAACT;AADe,CAAL,CAA7B;;AAIA,eAAeT,OAAO,CAACiB,eAAD,EAAkB;AAAElB,EAAAA;AAAF,CAAlB,CAAP,CAAiDG,QAAjD,CAAf","sourcesContent":["import React from 'react';\nimport { Card } from 'react-bootstrap';\nimport { useDrop } from 'react-dnd';\nimport { ItemTypes } from './itemType';\nimport { setModuleLocation } from '../../actions/modplanActions';\nimport { connect } from \"react-redux\";\nimport PropTypes from 'prop-types';\n\nfunction TrashBox (props) {\n\n    const [{ isOver }, drop] = useDrop({\n        accept: ItemTypes.CARD,\n        drop: (item) => props.setModuleLocation(item, null, null, props.modplan.selectedModules),\n        collect: monitor => ({\n            isOver: !!monitor.isOver(),\n        }),\n    })\n\n    return (\n        <Card className=\"trashbox\"\n            ref={drop}>\n            <Card.Title>Trash</Card.Title>\n            <Card.Subtitle>Drop Modules here to delete</Card.Subtitle>\n            <div>\n            <i\n                className=\"far fa-trash-alt\"/>\n            </div>\n        </Card>\n    )\n}\n\nTrashBox.propType = {\n    setModuleLocation: PropTypes.func.isRequired,\n    modplan: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    modplan: state.modplan\n});\n\nexport default connect(mapStateToProps, { setModuleLocation }) (TrashBox);"]},"metadata":{},"sourceType":"module"}