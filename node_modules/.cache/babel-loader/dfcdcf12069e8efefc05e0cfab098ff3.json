{"ast":null,"code":"var _jsxFileName = \"/Users/frisciliasultan/Documents/Orbital/client/src/Pages/Module Planner Page/Rules.jsx\";\nimport React from 'react';\nimport { Card, Spinner, Button } from 'react-bootstrap';\nimport Subrule from './SubruleLoading';\n\nclass Rules extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false\n    };\n    this.generateRules = this.generateRules.bind(this);\n  } // componentDidMount() {\n  //     // Call our fetch function below once the component mounts\n  //   this.callBackendAPI()\n  //     .then(res => this.setState({ rules: res }))\n  //     .then(this.setState({isLoading: false}))\n  //     .catch(err => console.log(err));\n  // }\n  //   // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n  // callBackendAPI = async () => {\n  //   this.setState({isLoading: true})\n  //   const response = await fetch('https://api.nusmods.com/v2/2019-2020/moduleInfo.json', {'accept': 'application/json'});\n  //   const body = await response.json();\n  //   if (response.status !== 200) {\n  //     throw Error(body.message) \n  //   }\n  //   console.log(body);\n  //   return body;\n  // };\n  // cons t request = {\n  //     method: 'POST',\n  //     mode: 'no-cors',\n  //     headers: {\n  //       'Accept': 'application/json',\n  //       'Content-type': 'application/json'\n  //       },\n  //     body: JSON.stringify ({\n  //       username: this.props.username,\n  //       userCourse: { major: [{name: this.props.major,\n  //                               spec: this.props.speialisation}],\n  //                     minor: [],\n  //                     residence: [this.props.residence]\n  //                   }\n  //       })\n  //   };\n  //   const response = await fetch('http://172.31.21.121:5000/', request)\n  //       .then(async response => {\n  //         const data = await response.json();\n  //          // check for error response\n  //          if (!response.ok) {\n  //           // get error message from body or default to response status\n  //           throw new Error(data.message)\n  //         }\n  //         return data;\n  //       })\n  //       .then(data => console.log(data))\n  //     .catch(error => {\n  //       alert('nooope');\n  //       console.error('There was an error!', error);\n  //   });\n\n\n  generateRules() {\n    let rule = this.props.rules;\n\n    if (!Array.isArray(rule)) {\n      rule = [rule];\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, rule.map(rule => /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Subrule, {\n      ruleName: rule.name,\n      ruleTag: rule.tag,\n      callBackendNow: this.props.callBackendNow,\n      callBackendFunc: this.props.callBackendFunc,\n      isLoading: this.props.isLoading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 45\n      }\n    }), rule.sub && /*#__PURE__*/React.createElement(Rules, {\n      rules: rule.sub,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 49\n      }\n    }))));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }), this.generateRules());\n  }\n\n}\n\nexport default Rules;","map":{"version":3,"sources":["/Users/frisciliasultan/Documents/Orbital/client/src/Pages/Module Planner Page/Rules.jsx"],"names":["React","Card","Spinner","Button","Subrule","Rules","Component","constructor","props","state","isLoading","generateRules","bind","rule","rules","Array","isArray","map","name","tag","callBackendNow","callBackendFunc","sub","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,OAAf,EAAwBC,MAAxB,QAAsC,iBAAtC;AACA,OAAOC,OAAP,MAAoB,kBAApB;;AAEA,MAAMC,KAAN,SAAoBL,KAAK,CAACM,SAA1B,CAAoC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACGC,MAAAA,SAAS,EAAE;AADd,KAAb;AAIA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACH,GAR+B,CAUhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAEAD,EAAAA,aAAa,GAAG;AACZ,QAAIE,IAAI,GAAG,KAAKL,KAAL,CAAWM,KAAtB;;AAEA,QAAG,CAACC,KAAK,CAACC,OAAN,CAAcH,IAAd,CAAJ,EAAyB;AACrBA,MAAAA,IAAI,GAAG,CAACA,IAAD,CAAP;AACH;;AAED,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQA,IAAI,CAACI,GAAL,CAASJ,IAAI,iBACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,OAAD;AACI,MAAA,QAAQ,EAAEA,IAAI,CAACK,IADnB;AAEI,MAAA,OAAO,EAAEL,IAAI,CAACM,GAFlB;AAGI,MAAA,cAAc,EAAE,KAAKX,KAAL,CAAWY,cAH/B;AAII,MAAA,eAAe,EAAE,KAAKZ,KAAL,CAAWa,eAJhC;AAKI,MAAA,SAAS,EAAE,KAAKb,KAAL,CAAWE,SAL1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAQMG,IAAI,CAACS,GAAL,iBACE,oBAAC,KAAD;AACI,MAAA,KAAK,EAAET,IAAI,CAACS,GADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATR,CADpB,CAFR,CADJ;AAqBH;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAEC,KAAKZ,aAAL,EAFD,CADJ;AAMH;;AAtG+B;;AAyGpC,eAAeN,KAAf","sourcesContent":["import React from 'react';\nimport { Card, Spinner, Button } from 'react-bootstrap';\nimport Subrule from './SubruleLoading';\n\nclass Rules extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n                        isLoading: false,\n                        \n                     }\n        this.generateRules = this.generateRules.bind(this);\n    }\n\n    // componentDidMount() {\n    //     // Call our fetch function below once the component mounts\n    //   this.callBackendAPI()\n    //     .then(res => this.setState({ rules: res }))\n    //     .then(this.setState({isLoading: false}))\n    //     .catch(err => console.log(err));\n    // }\n    //   // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n    // callBackendAPI = async () => {\n    //   this.setState({isLoading: true})\n    //   const response = await fetch('https://api.nusmods.com/v2/2019-2020/moduleInfo.json', {'accept': 'application/json'});\n    //   const body = await response.json();\n    \n    //   if (response.status !== 200) {\n    //     throw Error(body.message) \n    //   }\n    //   console.log(body);\n    //   return body;\n    // };\n    \n    // cons t request = {\n    //     method: 'POST',\n    //     mode: 'no-cors',\n    //     headers: {\n    //       'Accept': 'application/json',\n    //       'Content-type': 'application/json'\n    //       },\n    //     body: JSON.stringify ({\n    //       username: this.props.username,\n    //       userCourse: { major: [{name: this.props.major,\n    //                               spec: this.props.speialisation}],\n    //                     minor: [],\n    //                     residence: [this.props.residence]\n    //                   }\n    //       })\n    //   };\n      \n    //   const response = await fetch('http://172.31.21.121:5000/', request)\n    //       .then(async response => {\n    //         const data = await response.json();\n    //          // check for error response\n    //          if (!response.ok) {\n    //           // get error message from body or default to response status\n    //           throw new Error(data.message)\n    //         }\n  \n    //         return data;\n    //       })\n    //       .then(data => console.log(data))\n  \n    //     .catch(error => {\n    //       alert('nooope');\n    //       console.error('There was an error!', error);\n    //   });\n\n    generateRules() {\n        let rule = this.props.rules;\n\n        if(!Array.isArray(rule)) {\n            rule = [rule];   \n        } \n\n        return (\n            <div>\n                {   \n                    rule.map(rule => (\n                                        <ul>\n                                            <Subrule\n                                                ruleName={rule.name}\n                                                ruleTag={rule.tag}\n                                                callBackendNow={this.props.callBackendNow}\n                                                callBackendFunc={this.props.callBackendFunc}\n                                                isLoading={this.props.isLoading} />\n                                            \n                                            {(rule.sub && \n                                                <Rules\n                                                    rules={rule.sub}/>)}\n                                        </ul>\n                                    )\n                            )\n                }\n            </div>\n        )\n    }\n\n    render() {\n        return (\n            <div>\n            <br/>\n            {this.generateRules()}\n            </div>\n        )\n    }\n}\n\nexport default Rules;\n"]},"metadata":{},"sourceType":"module"}