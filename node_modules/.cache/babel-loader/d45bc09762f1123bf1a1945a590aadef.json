{"ast":null,"code":"import { SET_SEMESTER_OPTIONS, CALCULATE_CAP, CLEAN_UP_CAP, SET_CAP } from \"../actions/types\";\nconst initialState = {\n  cap: 5,\n  targetCap: 5,\n  semesterOptions: []\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_SEMESTER_OPTIONS:\n      let sem1;\n      let sem2;\n      let semesterOptions = [];\n\n      for (let i = 1; i < action.payload * 2; i += 2) {\n        const year = Math.ceil(i / 2);\n        sem1 = `Year ${year} Semester 1`;\n        sem2 = `Year ${year} Semester 2`;\n        semesterOptions[i - 1] = sem1;\n        semesterOptions[i] = sem2;\n      }\n\n      return { ...state,\n        semesterOptions: semesterOptions\n      };\n\n    case CALCULATE_CAP:\n      let totalMC = 0;\n      let totalGradePoint = 0;\n      let totalTargetMC = 0;\n      let totalTargetGradePoint = 0;\n\n      for (let i = 0; i < action.payload.length; i++) {\n        const module = action.payload[i];\n        const MC = Number(module.moduleCredit);\n\n        if (module.grade && !module.SU) {\n          totalGradePoint += module.gradePoint * MC;\n          totalMC += MC;\n          totalTargetGradePoint += module.gradePoint * MC;\n          totalTargetMC += MC;\n        } else if (module.targetGrade) {\n          totalTargetGradePoint += module.gradePoint * MC;\n          totalTargetMC += MC;\n        }\n      }\n\n      const cap = totalMC === 0 ? 5 : totalGradePoint / totalMC;\n      const targetCAP = totalTargetMC === 0 ? 5 : totalTargetGradePoint / totalTargetMC;\n      return { ...state,\n        cap: cap,\n        targetCap: targetCAP\n      };\n\n    case SET_CAP:\n      const cat = action.category === \"target\" ? \"targetCAP\" : \"cap\";\n      return { ...state,\n        [cat]: action.payload\n      };\n\n    case CLEAN_UP_CAP:\n      return initialState;\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/frisciliasultan/Documents/Orbital/client/src/reducers/capReducer.js"],"names":["SET_SEMESTER_OPTIONS","CALCULATE_CAP","CLEAN_UP_CAP","SET_CAP","initialState","cap","targetCap","semesterOptions","state","action","type","sem1","sem2","i","payload","year","Math","ceil","totalMC","totalGradePoint","totalTargetMC","totalTargetGradePoint","length","module","MC","Number","moduleCredit","grade","SU","gradePoint","targetGrade","targetCAP","cat","category"],"mappings":"AAAA,SACIA,oBADJ,EAEIC,aAFJ,EAGIC,YAHJ,EAIIC,OAJJ,QAKO,kBALP;AAOA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,GAAG,EAAE,CADY;AAEjBC,EAAAA,SAAS,EAAE,CAFM;AAGjBC,EAAAA,eAAe,EAAE;AAHA,CAArB;AAMA,eAAe,UAASC,KAAK,GAAGJ,YAAjB,EAA+BK,MAA/B,EAAuC;AAClD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKV,oBAAL;AACI,UAAIW,IAAJ;AACA,UAAIC,IAAJ;AACA,UAAIL,eAAe,GAAG,EAAtB;;AAEA,WAAI,IAAIM,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAIJ,MAAM,CAACK,OAAP,GAAiB,CAArC,EAAyCD,CAAC,IAAI,CAA9C,EAAiD;AAC7C,cAAME,IAAI,GAAGC,IAAI,CAACC,IAAL,CAAUJ,CAAC,GAAG,CAAd,CAAb;AACAF,QAAAA,IAAI,GAAI,QAAOI,IAAK,aAApB;AACAH,QAAAA,IAAI,GAAI,QAAOG,IAAK,aAApB;AACAR,QAAAA,eAAe,CAACM,CAAC,GAAG,CAAL,CAAf,GAAyBF,IAAzB;AACAJ,QAAAA,eAAe,CAACM,CAAD,CAAf,GAAqBD,IAArB;AACH;;AAED,aAAO,EACH,GAAGJ,KADA;AAEHD,QAAAA,eAAe,EAAEA;AAFd,OAAP;;AAKJ,SAAKN,aAAL;AACI,UAAIiB,OAAO,GAAG,CAAd;AACA,UAAIC,eAAe,GAAG,CAAtB;AACA,UAAIC,aAAa,GAAG,CAApB;AACA,UAAIC,qBAAqB,GAAG,CAA5B;;AAEA,WAAI,IAAIR,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGJ,MAAM,CAACK,OAAP,CAAeQ,MAAlC,EAA0CT,CAAC,EAA3C,EAAgD;AAC5C,cAAMU,MAAM,GAAGd,MAAM,CAACK,OAAP,CAAeD,CAAf,CAAf;AACA,cAAMW,EAAE,GAAGC,MAAM,CAACF,MAAM,CAACG,YAAR,CAAjB;;AACA,YAAGH,MAAM,CAACI,KAAP,IAAgB,CAACJ,MAAM,CAACK,EAA3B,EAA+B;AAC3BT,UAAAA,eAAe,IAAKI,MAAM,CAACM,UAAP,GAAoBL,EAAxC;AACAN,UAAAA,OAAO,IAAIM,EAAX;AACAH,UAAAA,qBAAqB,IAAKE,MAAM,CAACM,UAAP,GAAoBL,EAA9C;AACAJ,UAAAA,aAAa,IAAII,EAAjB;AACH,SALD,MAKO,IAAID,MAAM,CAACO,WAAX,EAAwB;AAC3BT,UAAAA,qBAAqB,IAAKE,MAAM,CAACM,UAAP,GAAoBL,EAA9C;AACAJ,UAAAA,aAAa,IAAII,EAAjB;AAEH;AACJ;;AAED,YAAMnB,GAAG,GAAGa,OAAO,KAAK,CAAZ,GAAgB,CAAhB,GAAoBC,eAAe,GAAGD,OAAlD;AACA,YAAMa,SAAS,GAAGX,aAAa,KAAK,CAAlB,GAAsB,CAAtB,GAA0BC,qBAAqB,GAAGD,aAApE;AAEA,aAAO,EACH,GAAGZ,KADA;AAEHH,QAAAA,GAAG,EAAEA,GAFF;AAGHC,QAAAA,SAAS,EAAEyB;AAHR,OAAP;;AAMJ,SAAK5B,OAAL;AACI,YAAM6B,GAAG,GAAGvB,MAAM,CAACwB,QAAP,KAAoB,QAApB,GAA+B,WAA/B,GAA6C,KAAzD;AACA,aAAO,EACH,GAAGzB,KADA;AAEH,SAACwB,GAAD,GAAOvB,MAAM,CAACK;AAFX,OAAP;;AAKJ,SAAKZ,YAAL;AACI,aAAOE,YAAP;;AAEJ;AACI,aAAOI,KAAP;AA5DR;AA8DH","sourcesContent":["import {\n    SET_SEMESTER_OPTIONS,\n    CALCULATE_CAP,\n    CLEAN_UP_CAP,\n    SET_CAP\n} from \"../actions/types\";\n\nconst initialState = {\n    cap: 5,\n    targetCap: 5,\n    semesterOptions: []\n};\n\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case SET_SEMESTER_OPTIONS: \n            let sem1;\n            let sem2;\n            let semesterOptions = [];\n\n            for(let i = 1; i < (action.payload * 2); i += 2) {\n                const year = Math.ceil(i / 2);\n                sem1 = `Year ${year} Semester 1`;\n                sem2 = `Year ${year} Semester 2`;\n                semesterOptions[i - 1] = sem1;\n                semesterOptions[i] = sem2;\n            }\n\n            return {\n                ...state,\n                semesterOptions: semesterOptions\n            }\n        \n        case CALCULATE_CAP:\n            let totalMC = 0;\n            let totalGradePoint = 0;\n            let totalTargetMC = 0;\n            let totalTargetGradePoint = 0;\n\n            for(let i = 0; i < action.payload.length; i ++) {\n                const module = action.payload[i];\n                const MC = Number(module.moduleCredit);\n                if(module.grade && !module.SU) {\n                    totalGradePoint += (module.gradePoint * MC);\n                    totalMC += MC;\n                    totalTargetGradePoint += (module.gradePoint * MC);\n                    totalTargetMC += MC;\n                } else if (module.targetGrade) {\n                    totalTargetGradePoint += (module.gradePoint * MC);\n                    totalTargetMC += MC;\n                   \n                }\n            }\n          \n            const cap = totalMC === 0 ? 5 : totalGradePoint / totalMC;\n            const targetCAP = totalTargetMC === 0 ? 5 : totalTargetGradePoint / totalTargetMC;\n\n            return {\n                ...state,\n                cap: cap,\n                targetCap: targetCAP\n            }\n    \n        case SET_CAP:\n            const cat = action.category === \"target\" ? \"targetCAP\" : \"cap\" \n            return {\n                ...state,\n                [cat]: action.payload,\n            }\n\n        case CLEAN_UP_CAP:\n            return initialState;\n\n        default: \n            return state;\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}