{"ast":null,"code":"var _jsxFileName = \"/Users/frisciliasultan/Documents/Orbital/client/src/Pages/Module Planner Page/ModulePlannerPage.jsx\";\nimport React, { useEffect } from 'react';\nimport Board from './Board';\nimport Rules from './Rules';\nimport TrashBox from './TrashBox';\nimport YearDisplay from './YearDisplay';\nimport './plannertemp.css';\nimport { Button, Card } from 'react-bootstrap';\nimport { HTML5Backend as Backend } from 'react-dnd-html5-backend';\nimport { DndProvider } from 'react-dnd';\nimport { connect } from 'react-redux';\nimport { callBackendAPI, setCallBackendNow, setSelectedModules } from '../../actions/modplanActions';\nimport { updateSettings } from \"../../actions/settingsActions\";\nimport { handleSaveClick } from \"../../utils/commonFunctions\";\nimport PropTypes from 'prop-types';\nimport isEmpty from 'is-empty';\n\nconst ModulePlannerPageTemp = props => {\n  const module = props.modplan.modules;\n  useEffect(() => {\n    if (isEmpty(props.modplan.rules)) {\n      props.callBackendAPI('Rules');\n    }\n\n    if (isEmpty(props.modplan.modules)) {\n      props.callBackendAPI('NUSMods');\n    }\n  }, []);\n  useEffect(() => {\n    if (!isEmpty(props.settings.userInfo.modPlan)) {\n      props.setSelectedModules(null, props.settings.userInfo.modPlan);\n    }\n  }, [props.settings.userInfo]);\n  useEffect(() => {\n    const start = props.settings.userInfo.matriculationYear.substr(0, 4);\n    const end = props.settings.userInfo.targetGradYear.substr(5, 4);\n    const diff = end - start;\n  }, [props.settings.userInfo.matriculationYear, props.settings.userInfo.targetGradYear]);\n\n  const handleEvalButtonClick = () => {\n    const modules = props.modplan.selectedModules;\n\n    if (isEmpty(modules)) {\n      alert('Please add modules before evaluating');\n    } else {\n      props.setCallBackendNow(true);\n    }\n  }; // const generateDisplay = ()\n\n\n  return /*#__PURE__*/React.createElement(DndProvider, {\n    backend: Backend,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-module-planner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(YearDisplay, {\n    year: \"Year 1\",\n    AY: \"2018/2019\",\n    module: module,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(YearDisplay, {\n    year: \"Year 2\",\n    AY: \"2019/2020\",\n    module: module,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(YearDisplay, {\n    year: \"Year 3\",\n    AY: \"2020/2021\",\n    module: module,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(YearDisplay, {\n    year: \"Year 4\",\n    AY: \"2022/2023\",\n    module: module,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(TrashBox, {\n    module: props.modplan.selectedModules,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button\",\n    id: \"eval-button\",\n    onClick: () => handleEvalButtonClick(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, \"Evaluate\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button\",\n    onClick: () => handleSaveClick(props),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, \"Save\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Rules, {\n    rules: props.modplan.rules,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  })));\n};\n\nModulePlannerPageTemp.propTypes = {\n  callBackendAPI: PropTypes.func.isRequired,\n  setCallBackendNow: PropTypes.func.isRequired,\n  updateSettings: PropTypes.func.isRequired,\n  modplan: PropTypes.object.isRequired,\n  settings: PropTypes.object.isRequired,\n  cap: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  settings: state.settings,\n  cap: state.cap,\n  modplan: state.modplan\n});\n\nexport default connect(mapStateToProps, {\n  callBackendAPI,\n  setCallBackendNow,\n  updateSettings,\n  setSelectedModules\n})(ModulePlannerPageTemp);","map":{"version":3,"sources":["/Users/frisciliasultan/Documents/Orbital/client/src/Pages/Module Planner Page/ModulePlannerPage.jsx"],"names":["React","useEffect","Board","Rules","TrashBox","YearDisplay","Button","Card","HTML5Backend","Backend","DndProvider","connect","callBackendAPI","setCallBackendNow","setSelectedModules","updateSettings","handleSaveClick","PropTypes","isEmpty","ModulePlannerPageTemp","props","module","modplan","modules","rules","settings","userInfo","modPlan","start","matriculationYear","substr","end","targetGradYear","diff","handleEvalButtonClick","selectedModules","alert","propTypes","func","isRequired","object","cap","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport Board from './Board';\nimport Rules from './Rules';\nimport TrashBox from './TrashBox';\nimport YearDisplay from './YearDisplay';\nimport './plannertemp.css';\nimport { Button, Card } from 'react-bootstrap';\nimport { HTML5Backend as Backend } from 'react-dnd-html5-backend';\nimport { DndProvider } from 'react-dnd';\nimport { connect } from 'react-redux';\nimport { callBackendAPI, setCallBackendNow, setSelectedModules } from '../../actions/modplanActions';\nimport { updateSettings } from \"../../actions/settingsActions\";\nimport { handleSaveClick } from \"../../utils/commonFunctions\";\nimport PropTypes from 'prop-types';\nimport isEmpty from 'is-empty'\n\n\nconst ModulePlannerPageTemp = (props) => {\n\n    const module = props.modplan.modules;\n\n    useEffect(() => {\n        if(isEmpty(props.modplan.rules)) {\n            props.callBackendAPI('Rules');\n        }\n        \n        if(isEmpty(props.modplan.modules)){\n            props.callBackendAPI('NUSMods');\n        }\n    }, [])\n\n    useEffect(() => {\n            if(!isEmpty(props.settings.userInfo.modPlan)) {\n                props.setSelectedModules(null, props.settings.userInfo.modPlan)\n            }\n    }, [props.settings.userInfo])\n\n    useEffect(() => {\n        const start = props.settings.userInfo.matriculationYear.substr(0, 4);\n        const end = props.settings.userInfo.targetGradYear.substr(5, 4);\n        const diff = end - start;\n    }, [props.settings.userInfo.matriculationYear, props.settings.userInfo.targetGradYear])\n\n    const handleEvalButtonClick = () => {\n        const modules = props.modplan.selectedModules;\n        if (isEmpty(modules)) {\n            alert('Please add modules before evaluating');\n        } else {\n            props.setCallBackendNow(true);\n        }\n    }\n\n    // const generateDisplay = ()\n\n    return (\n        <DndProvider backend={Backend} >\n            <div className=\"container-module-planner\">\n                <YearDisplay\n                        year=\"Year 1\"\n                        AY=\"2018/2019\"\n                        module={module} />\n\n                <YearDisplay\n                        year=\"Year 2\"\n                        AY=\"2019/2020\"\n                        module={module}/> \n\n                <YearDisplay\n                        year=\"Year 3\"\n                        AY=\"2020/2021\"\n                        module={module} />\n\n                <YearDisplay\n                        year=\"Year 4\"\n                        AY=\"2022/2023\"\n                        module={module} /> \n                \n                <TrashBox\n                        module={props.modplan.selectedModules}/>\n\n\n                <br/>\n\n                <button className=\"button\" id=\"eval-button\" onClick={() => handleEvalButtonClick()}>Evaluate</button>\n                <button className=\"button\" onClick={() => handleSaveClick(props)} >Save</button>\n                <br/>\n                <br/>\n                <Card>\n                    <Rules\n                        rules={props.modplan.rules}/>\n                </Card>\n                <br/>\n            </div>\n        </DndProvider>\n    )\n}\n\nModulePlannerPageTemp.propTypes = {\n    callBackendAPI: PropTypes.func.isRequired,\n    setCallBackendNow: PropTypes.func.isRequired,\n    updateSettings: PropTypes.func.isRequired,\n    modplan: PropTypes.object.isRequired,\n    settings: PropTypes.object.isRequired,\n    cap: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    settings: state.settings,\n    cap: state.cap,\n    modplan: state.modplan\n});\n\nexport default connect(mapStateToProps, \n                    { callBackendAPI, setCallBackendNow, updateSettings, setSelectedModules }) \n                    (ModulePlannerPageTemp);\n"]},"metadata":{},"sourceType":"module"}