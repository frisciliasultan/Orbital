{"ast":null,"code":"var _jsxFileName = \"/Users/frisciliasultan/Documents/Orbital/client/src/Pages/Module Planner Page/ModulePlannerPage.jsx\";\nimport React from 'react';\nimport Board from './Board';\nimport Rules from './Rules';\nimport TrashBox from './TrashBox';\nimport YearDisplay from './YearDisplay';\nimport './plannertemp.css';\nimport { Button, Card } from 'react-bootstrap';\nimport { HTML5Backend as Backend } from 'react-dnd-html5-backend';\nimport { DndProvider } from 'react-dnd';\nimport { connect } from 'react-redux';\nimport { callBackendAPI, setCallBackendNow, setSelectedModules } from '../../actions/modplanActions';\nimport { updateSettings } from \"../../actions/settingsActions\";\nimport PropTypes from 'prop-types';\nimport isEmpty from 'is-empty';\n\nclass ModulePlannerPageTemp extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSaveClick = () => {\n      const userData = {\n        modPlan: this.props.modplan.selectedModules,\n        name: this.props.settings.userInfo.name,\n        residential: this.props.settings.userInfo.residential,\n        major: this.props.settings.userInfo.major,\n        matriculationYear: this.props.settings.userInfo.matriculationYear,\n        targetGradYear: this.props.settings.userInfo.targetGradYear,\n        transcript: {}\n      };\n      this.props.updateSettings(userData);\n    };\n  }\n\n  componentWillMount() {\n    if (isEmpty(this.props.modplan.rules)) {\n      this.props.callBackendAPI('Rules');\n    }\n\n    if (isEmpty(this.props.modplan.modules)) {\n      this.props.callBackendAPI('NUSMods');\n    }\n\n    if (!isEmpty(this.props.settings.userInfo.modplan)) {\n      console.log('called');\n      this.props.setSelectedModules(this.props.settings.userInfo.modplan);\n    }\n  }\n\n  handleEvalButtonClick() {\n    const modules = this.props.modplan.selectedModules;\n\n    if (isEmpty(modules)) {\n      alert('Please add modules before evaluating');\n    } else {\n      this.props.setCallBackendNow(true);\n    }\n  }\n\n  render() {\n    const module = this.props.modplan.modules;\n    return /*#__PURE__*/React.createElement(DndProvider, {\n      backend: Backend,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-module-planner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(YearDisplay, {\n      year: \"Year 1\",\n      AY: \"2018/2019\",\n      module: this.props.modplan.modules,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(YearDisplay, {\n      year: \"Year 2\",\n      AY: \"2019/2020\",\n      module: this.props.modplan.modules,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(YearDisplay, {\n      year: \"Year 3\",\n      AY: \"2020/2021\",\n      module: this.props.modplan.modules,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(YearDisplay, {\n      year: \"Year 4\",\n      AY: \"2022/2023\",\n      module: this.props.modplan.modules,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(TrashBox, {\n      module: this.props.modplan.selectedModules,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      className: \"button\",\n      id: \"eval-button\",\n      onClick: () => this.handleEvalButtonClick(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }\n    }, \"Evaluate\"), /*#__PURE__*/React.createElement(Button, {\n      className: \"button\",\n      onClick: this.handleSaveClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }\n    }, \"Save\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Rules, {\n      rules: this.props.modplan.rules,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nModulePlannerPageTemp.propTypes = {\n  callBackendAPI: PropTypes.func.isRequired,\n  setCallBackendNow: PropTypes.func.isRequired,\n  updateSettings: PropTypes.func.isRequired,\n  modplan: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  modplan: state.modplan,\n  settings: state.settings\n});\n\nexport default connect(mapStateToProps, {\n  callBackendAPI,\n  setCallBackendNow,\n  updateSettings,\n  setSelectedModules\n})(ModulePlannerPageTemp);","map":{"version":3,"sources":["/Users/frisciliasultan/Documents/Orbital/client/src/Pages/Module Planner Page/ModulePlannerPage.jsx"],"names":["React","Board","Rules","TrashBox","YearDisplay","Button","Card","HTML5Backend","Backend","DndProvider","connect","callBackendAPI","setCallBackendNow","setSelectedModules","updateSettings","PropTypes","isEmpty","ModulePlannerPageTemp","Component","handleSaveClick","userData","modPlan","props","modplan","selectedModules","name","settings","userInfo","residential","major","matriculationYear","targetGradYear","transcript","componentWillMount","rules","modules","console","log","handleEvalButtonClick","alert","render","module","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Board from './Board';\nimport Rules from './Rules';\nimport TrashBox from './TrashBox';\nimport YearDisplay from './YearDisplay';\nimport './plannertemp.css';\nimport { Button, Card } from 'react-bootstrap';\nimport { HTML5Backend as Backend } from 'react-dnd-html5-backend';\nimport { DndProvider } from 'react-dnd';\nimport { connect } from 'react-redux';\nimport { callBackendAPI, setCallBackendNow, setSelectedModules } from '../../actions/modplanActions';\nimport { updateSettings } from \"../../actions/settingsActions\";\nimport PropTypes from 'prop-types';\nimport isEmpty from 'is-empty'\n\n\nclass ModulePlannerPageTemp extends React.Component {\n\n    componentWillMount() {\n        if(isEmpty(this.props.modplan.rules)) {\n            this.props.callBackendAPI('Rules');\n        }\n        \n        if(isEmpty(this.props.modplan.modules)){\n            this.props.callBackendAPI('NUSMods');\n        }\n\n        if(!isEmpty(this.props.settings.userInfo.modplan)) {\n            console.log('called');\n            this.props.setSelectedModules(this.props.settings.userInfo.modplan)\n        }\n    }\n    \n    handleEvalButtonClick() {\n        const modules = this.props.modplan.selectedModules;\n        if (isEmpty(modules)) {\n            alert('Please add modules before evaluating');\n        } else {\n            this.props.setCallBackendNow(true);\n        }\n    }\n\n    handleSaveClick = () => {\n        const userData = {\n            modPlan: this.props.modplan.selectedModules,\n            name: this.props.settings.userInfo.name,\n            residential: this.props.settings.userInfo.residential,\n            major: this.props.settings.userInfo.major,\n            matriculationYear: this.props.settings.userInfo.matriculationYear,\n            targetGradYear: this.props.settings.userInfo.targetGradYear,\n            transcript: {}\n        }\n\n        this.props.updateSettings(userData);\n    }\n    \n    render () {\n        const module = this.props.modplan.modules\n        return (\n            <DndProvider backend={Backend} >\n                <div className=\"container-module-planner\">\n                    <YearDisplay\n                            year=\"Year 1\"\n                            AY=\"2018/2019\"\n                            module={this.props.modplan.modules} />\n\n                    <YearDisplay\n                            year=\"Year 2\"\n                            AY=\"2019/2020\"\n                            module={this.props.modplan.modules}/> \n\n                    <YearDisplay\n                            year=\"Year 3\"\n                            AY=\"2020/2021\"\n                            module={this.props.modplan.modules} />\n\n                    <YearDisplay\n                            year=\"Year 4\"\n                            AY=\"2022/2023\"\n                            module={this.props.modplan.modules} /> \n                    \n                    <TrashBox\n                            module={this.props.modplan.selectedModules}/>\n\n\n                    <br/>\n\n                    <Button className=\"button\" id=\"eval-button\" onClick={() => this.handleEvalButtonClick()}>Evaluate</Button>\n                    <Button className=\"button\" onClick={this.handleSaveClick} >Save</Button>\n                    <br/>\n                    <br/>\n                    <Card>\n                        <Rules\n                            rules={this.props.modplan.rules}/>\n                    </Card>\n                    <br/>\n                </div>\n           </DndProvider>\n        )\n    }\n}\n\nModulePlannerPageTemp.propTypes = {\n    callBackendAPI: PropTypes.func.isRequired,\n    setCallBackendNow: PropTypes.func.isRequired,\n    updateSettings: PropTypes.func.isRequired,\n    modplan: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    modplan: state.modplan,\n    settings: state.settings\n});\n\nexport default connect(mapStateToProps, \n                    { callBackendAPI, setCallBackendNow, updateSettings, setSelectedModules }) \n                    (ModulePlannerPageTemp);\n"]},"metadata":{},"sourceType":"module"}