{"ast":null,"code":"var _jsxFileName = \"/Users/frisciliasultan/Documents/Orbital/client/src/Pages/Module Planner Page/Rules.jsx\";\nimport React from 'react';\nimport { Card, Spinner, Button } from 'react-bootstrap';\n\nclass Rules extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.callBackendAPI = async () => {\n      this.setState({\n        isLoading: true\n      });\n      const response = await fetch('');\n      const body = await response.json();\n\n      if (response.status !== 200) {\n        throw Error(body.message);\n      }\n\n      return body;\n    };\n\n    this.state = {\n      isLoading: false,\n      rules: null\n    };\n    this.generateRules = this.generateRules.bind(this);\n  }\n\n  componentDidMount() {\n    // Call our fetch function below once the component mounts\n    this.callBackendAPI().then(res => this.setState({\n      rules: res\n    })).catch(err => console.log(err));\n  } // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n\n\n  // cons t request = {\n  //     method: 'POST',\n  //     mode: 'no-cors',\n  //     headers: {\n  //       'Accept': 'application/json',\n  //       'Content-type': 'application/json'\n  //       },\n  //     body: JSON.stringify ({\n  //       username: this.props.username,\n  //       userCourse: { major: [{name: this.props.major,\n  //                               spec: this.props.speialisation}],\n  //                     minor: [],\n  //                     residence: [this.props.residence]\n  //                   }\n  //       })\n  //   };\n  //   const response = await fetch('http://172.31.21.121:5000/', request)\n  //       .then(async response => {\n  //         const data = await response.json();\n  //          // check for error response\n  //          if (!response.ok) {\n  //           // get error message from body or default to response status\n  //           throw new Error(data.message)\n  //         }\n  //         return data;\n  //       })\n  //       .then(data => console.log(data))\n  //     .catch(error => {\n  //       alert('nooope');\n  //       console.error('There was an error!', error);\n  //   });\n  generateRules() {}\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: this.handleonClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, \"Evaluate\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }, \"Degree Requirements\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }\n    }, isLoading && /*#__PURE__*/React.createElement(Spinner, {\n      animation: \"border\",\n      variant: \"success\",\n      role: \"status\",\n      as: \"span\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"sr-only\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 25\n      }\n    }, \"Loading...\")), \"University Level Requirement\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }\n    }, isLoading && /*#__PURE__*/React.createElement(Spinner, {\n      animation: \"border\",\n      variant: \"success\",\n      role: \"status\",\n      as: \"span\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"sr-only\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 25\n      }\n    }, \"Loading...\")), \"University Level Requirement\")));\n  }\n\n}\n\nexport default Rules;","map":{"version":3,"sources":["/Users/frisciliasultan/Documents/Orbital/client/src/Pages/Module Planner Page/Rules.jsx"],"names":["React","Card","Spinner","Button","Rules","Component","constructor","props","callBackendAPI","setState","isLoading","response","fetch","body","json","status","Error","message","state","rules","generateRules","bind","componentDidMount","then","res","catch","err","console","log","render","handleonClick"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,OAAf,EAAwBC,MAAxB,QAAsC,iBAAtC;;AAEA,MAAMC,KAAN,SAAoBJ,KAAK,CAACK,SAA1B,CAAoC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAgBnBC,cAhBmB,GAgBF,YAAY;AACzB,WAAKC,QAAL,CAAc;AAACC,QAAAA,SAAS,EAAE;AAAZ,OAAd;AACF,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,EAAD,CAA5B;AACA,YAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;;AAEA,UAAIH,QAAQ,CAACI,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,cAAMC,KAAK,CAACH,IAAI,CAACI,OAAN,CAAX;AACD;;AAED,aAAOJ,IAAP;AACD,KA1BkB;;AAEf,SAAKK,KAAL,GAAa;AACGR,MAAAA,SAAS,EAAE,KADd;AAEGS,MAAAA,KAAK,EAAE;AAFV,KAAb;AAIA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB;AACF,SAAKd,cAAL,GACGe,IADH,CACQC,GAAG,IAAI,KAAKf,QAAL,CAAc;AAAEU,MAAAA,KAAK,EAAEK;AAAT,KAAd,CADf,EAEGC,KAFH,CAESC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFhB;AAGD,GAf+B,CAgB9B;;;AAaF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEAN,EAAAA,aAAa,GAAG,CAEf;;AAEDS,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKC,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,eAIA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,eAEQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCpB,SAAS,iBAAI,oBAAC,OAAD;AAAS,MAAA,SAAS,EAAC,QAAnB;AAA4B,MAAA,OAAO,EAAC,SAApC;AAA8C,MAAA,IAAI,EAAC,QAAnD;AAA4D,MAAA,EAAE,EAAC,MAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACV;AAAM,MAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADU,CADd,iCAFR,eASQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCA,SAAS,iBAAI,oBAAC,OAAD;AAAS,MAAA,SAAS,EAAC,QAAnB;AAA4B,MAAA,OAAO,EAAC,SAApC;AAA8C,MAAA,IAAI,EAAC,QAAnD;AAA4D,MAAA,EAAE,EAAC,MAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACV;AAAM,MAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADU,CADd,iCATR,CAJA,CADJ;AAuBH;;AA5F+B;;AA+FpC,eAAeN,KAAf","sourcesContent":["import React from 'react';\nimport { Card, Spinner, Button } from 'react-bootstrap';\n\nclass Rules extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n                        isLoading: false,\n                        rules: null,\n                     }\n        this.generateRules = this.generateRules.bind(this);\n    }\n\n    componentDidMount() {\n        // Call our fetch function below once the component mounts\n      this.callBackendAPI()\n        .then(res => this.setState({ rules: res }))\n        .catch(err => console.log(err));\n    }\n      // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n    callBackendAPI = async () => {\n        this.setState({isLoading: true})\n      const response = await fetch('');\n      const body = await response.json();\n    \n      if (response.status !== 200) {\n        throw Error(body.message) \n      }\n\n      return body;\n    };\n    \n    // cons t request = {\n    //     method: 'POST',\n    //     mode: 'no-cors',\n    //     headers: {\n    //       'Accept': 'application/json',\n    //       'Content-type': 'application/json'\n    //       },\n    //     body: JSON.stringify ({\n    //       username: this.props.username,\n    //       userCourse: { major: [{name: this.props.major,\n    //                               spec: this.props.speialisation}],\n    //                     minor: [],\n    //                     residence: [this.props.residence]\n    //                   }\n    //       })\n    //   };\n      \n    //   const response = await fetch('http://172.31.21.121:5000/', request)\n    //       .then(async response => {\n    //         const data = await response.json();\n    //          // check for error response\n    //          if (!response.ok) {\n    //           // get error message from body or default to response status\n    //           throw new Error(data.message)\n    //         }\n  \n    //         return data;\n    //       })\n    //       .then(data => console.log(data))\n  \n    //     .catch(error => {\n    //       alert('nooope');\n    //       console.error('There was an error!', error);\n    //   });\n\n    generateRules() {\n\n    }\n\n    render() {\n        return (\n            <div>\n            <Button onClick={this.handleonClick}>Evaluate</Button>\n            <br/>\n\n            <Card>\n                <Card.Title>Degree Requirements</Card.Title>\n                    <div>\n                    {isLoading && <Spinner animation=\"border\" variant=\"success\" role=\"status\" as=\"span\">\n                        <span className=\"sr-only\">Loading...</span>\n                    </Spinner>}\n                    University Level Requirement\n                    </div>\n\n                    <div>\n                    {isLoading && <Spinner animation=\"border\" variant=\"success\" role=\"status\" as=\"span\">\n                        <span className=\"sr-only\">Loading...</span>\n                    </Spinner>}\n                    University Level Requirement\n                    </div>\n            </Card>\n            </div>\n        )\n    }\n}\n\nexport default Rules;\n"]},"metadata":{},"sourceType":"module"}