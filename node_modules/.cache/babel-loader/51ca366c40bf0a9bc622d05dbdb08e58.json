{"ast":null,"code":"import { SET_BOARD_FILLED, SET_MODULES, SET_RULES, SET_CALL_BACKEND_NOW } from './types';\nimport axios from 'axios';\nexport const setIsBoardFilled = () => {\n  return {\n    type: SET_BOARD_FILLED\n  };\n};\nexport const fetchBackend = async backend => {\n  let link = backend === 'NUSMods' ? 'https://api.nusmods.com/v2/2018-2019/moduleInfo.json' : 'http://172.19.162.53:3000/rules/r_cs_degree';\n  const response = await fetch(link, {\n    'accept': 'application/json',\n    'content-type': 'application/json'\n  });\n  const body = await response.json();\n\n  if (response.status !== 200) {\n    throw Error(body.message);\n  }\n\n  console.log(body);\n  return body;\n};\nexport const callBackendAPI = backend => {\n  fetchBackend(backend);\n  let func = backend === 'NUSMods' ? setModules : setRules.then(res => func(res)).catch(err => {\n    console.log(err);\n  });\n};\nexport const setModules = modules => {\n  return {\n    type: SET_MODULES,\n    payload: modules\n  };\n};\nexport const setRules = rules => {\n  return {\n    type: SET_RULES,\n    payload: rules\n  };\n};\nexport const setCallBackendNow = status => {\n  return {\n    type: SET_CALL_BACKEND_NOW,\n    payload: status\n  };\n};","map":{"version":3,"sources":["/Users/frisciliasultan/Documents/Orbital/client/src/actions/modplanActions.js"],"names":["SET_BOARD_FILLED","SET_MODULES","SET_RULES","SET_CALL_BACKEND_NOW","axios","setIsBoardFilled","type","fetchBackend","backend","link","response","fetch","body","json","status","Error","message","console","log","callBackendAPI","func","setModules","setRules","then","res","catch","err","modules","payload","rules","setCallBackendNow"],"mappings":"AAAA,SACIA,gBADJ,EAEIC,WAFJ,EAGIC,SAHJ,EAIIC,oBAJJ,QAKO,SALP;AAMA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,OAAO,MAAMC,gBAAgB,GAAG,MAAM;AAElC,SAAO;AACHC,IAAAA,IAAI,EAAEN;AADH,GAAP;AAGH,CALM;AAOP,OAAO,MAAMO,YAAY,GAAG,MAAOC,OAAP,IAAmB;AACvC,MAAIC,IAAI,GAAGD,OAAO,KAAK,SAAZ,GAAwB,sDAAxB,GACO,6CADlB;AAEA,QAAME,QAAQ,GAAG,MAAMC,KAAK,CAACF,IAAD,EAAO;AAAC,cAAU,kBAAX;AACE,oBAAgB;AADlB,GAAP,CAA5B;AAEA,QAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;;AAEF,MAAIH,QAAQ,CAACI,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,UAAMC,KAAK,CAACH,IAAI,CAACI,OAAN,CAAX;AACD;;AACDC,EAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AACA,SAAOA,IAAP;AACD,CAZE;AAcP,OAAO,MAAMO,cAAc,GAAIX,OAAD,IAAa;AACvCD,EAAAA,YAAY,CAACC,OAAD,CAAZ;AACA,MAAIY,IAAI,GAAIZ,OAAO,KAAK,SAAb,GAA0Ba,UAA1B,GAAuCC,QAAQ,CACzDC,IADiD,CAC5CC,GAAG,IAAKJ,IAAI,CAACI,GAAD,CADgC,EAEjDC,KAFiD,CAE3CC,GAAG,IAAI;AACVT,IAAAA,OAAO,CAACC,GAAR,CAAYQ,GAAZ;AACH,GAJiD,CAAlD;AAKH,CAPM;AASP,OAAO,MAAML,UAAU,GAAIM,OAAD,IAAa;AACnC,SAAO;AACHrB,IAAAA,IAAI,EAAEL,WADH;AAEH2B,IAAAA,OAAO,EAAED;AAFN,GAAP;AAIH,CALM;AAOP,OAAO,MAAML,QAAQ,GAAIO,KAAD,IAAW;AAC/B,SAAO;AACHvB,IAAAA,IAAI,EAAEJ,SADH;AAEH0B,IAAAA,OAAO,EAAEC;AAFN,GAAP;AAIH,CALM;AAOP,OAAO,MAAMC,iBAAiB,GAAIhB,MAAD,IAAY;AACzC,SAAO;AACHR,IAAAA,IAAI,EAAEH,oBADH;AAEHyB,IAAAA,OAAO,EAAEd;AAFN,GAAP;AAIH,CALM","sourcesContent":["import {\n    SET_BOARD_FILLED,\n    SET_MODULES,\n    SET_RULES,\n    SET_CALL_BACKEND_NOW\n} from './types';\nimport axios from 'axios';\n\n\nexport const setIsBoardFilled = () => {\n\n    return {\n        type: SET_BOARD_FILLED,\n    }\n}\n\nexport const fetchBackend = async (backend) => {\n        let link = backend === 'NUSMods' ? 'https://api.nusmods.com/v2/2018-2019/moduleInfo.json' \n                        : 'http://172.19.162.53:3000/rules/r_cs_degree';\n        const response = await fetch(link, {'accept': 'application/json',\n                                             'content-type': 'application/json'});\n        const body = await response.json();\n    \n      if (response.status !== 200) {\n        throw Error(body.message) \n      }\n      console.log(body);\n      return body;\n    }\n\nexport const callBackendAPI = (backend) => {\n    fetchBackend(backend)\n    let func = (backend === 'NUSMods') ? setModules : setRules\n    .then(res => (func(res))) \n    .catch(err => {\n        console.log(err)\n    });\n}\n\nexport const setModules = (modules) => {\n    return {\n        type: SET_MODULES,\n        payload: modules\n    }\n}\n\nexport const setRules = (rules) => {\n    return {\n        type: SET_RULES,\n        payload: rules\n    }\n}\n\nexport const setCallBackendNow = (status) => {\n    return {\n        type: SET_CALL_BACKEND_NOW,\n        payload: status\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}