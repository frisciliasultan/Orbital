{"ast":null,"code":"var _jsxFileName = \"/Users/frisciliasultan/Documents/Orbital/client/src/Settings/AcadSettings.jsx\";\nimport React from 'react';\nimport { Options } from '../Pages/Module Selection Page/ModuleList';\nimport { Link } from 'react-router-dom';\nimport axios from \"axios\";\nimport { Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport PropTypes from \"prop-types\";\nimport { updateSettings, initialSettings, setCurrentSemester, setMatriculationYearOptions, setTargetGradYearOptions } from \"../actions/settingsActions\";\nimport isEmpty from \"is-empty\";\n\nclass AcadSettings extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = () => {\n      const userData = {\n        major: this.state.major,\n        specialisation: this.state.specialisation,\n        residential: this.state.residence,\n        matriculationYear: this.state.matriculationYear,\n        targetGradYear: this.state.targetGradYear,\n        name: this.props.settings.userInfo.name,\n        modPlan: this.props.modplan\n      };\n      this.props.updateSettings(userData);\n    };\n\n    this.state = {\n      faculty: null,\n      major: this.props.settings.userInfo.major,\n      specialisation: this.props.settings.userInfo.specialisation,\n      residenceOptions: ['N/A', 'CAPT', 'RC4', 'RVRC', 'Tembusu', 'USP'],\n      residence: this.props.settings.userInfo.residential,\n      matriculationYear: null,\n      targetGradYear: null,\n      // dummyfac: {faculty: [{ name: 'Business',\n      //                         major: [{name: }]\n      //                         specialisation: [{name: 'A'}, ]\n      // }] }\n      dummyfac: [{\n        'Business': [{\n          'Business Administration': ['A', 'B']\n        }, {\n          'Accountancy': ['C', 'D']\n        }]\n      }, {\n        'FASS': [{\n          'C': ['N/A']\n        }, {\n          'D': ['N/A']\n        }]\n      }, {\n        'Computing': [{\n          'Computer Science': ['N/A']\n        }, {\n          'Business Analytics': ['N/A']\n        }]\n      }]\n    };\n    this.changeFaculty = this.changeFaculty.bind(this);\n    this.changeMajor = this.changeMajor.bind(this);\n    this.changeSpecialisation = this.changeSpecialisation.bind(this);\n    this.changeResidence = this.changeResidence.bind(this);\n    this.changeMatriculationYear = this.changeMatriculationYear.bind(this);\n    this.changeTargetGradYear = this.changeTargetGradYear.bind(this);\n    this.generateOptions = this.generateOptions.bind(this);\n  }\n\n  componentWillMount() {\n    const time = new Date();\n    const month = time.getMonth() + 1;\n    const year = time.getFullYear();\n    const isSem2 = month <= 7;\n    let currentSemester;\n    let currentAY;\n\n    if (isSem2) {\n      currentAY = `${year - 1}/${year}`;\n      currentSemester = \"Semester 2\";\n    } else {\n      currentAY = `${year}/${year + 1}`;\n      currentSemester = \"Semester 1\";\n    }\n\n    if (!this.props.settings.currentAY) {\n      this.props.setCurrentSemester(currentAY, currentSemester);\n    }\n\n    if (!this.props.settings.userInfo) {\n      this.props.initialSettings();\n    }\n\n    if (isEmpty(this.props.settings.matriculationOptions)) {\n      this.props.setMatriculationYearOptions(currentAY, currentSemester);\n      this.props.setTargetGradYearOptions(currentAY, currentSemester);\n    }\n  }\n\n  changeFaculty(value, index) {\n    this.setState({\n      faculty: value,\n      facIndex: index,\n      major: null\n    });\n  }\n\n  changeMajor(value, index) {\n    this.setState({\n      major: value,\n      majorIndex: index\n    });\n  }\n\n  changeSpecialisation(value) {\n    this.setState({\n      specialisation: value\n    });\n  }\n\n  changeResidence(value) {\n    this.setState({\n      residence: value\n    });\n  }\n\n  changeMatriculationYear(value) {\n    const year = value.substr(3, 9);\n    this.setState({\n      matriculationYear: year\n    });\n  }\n\n  changeTargetGradYear(value) {\n    const year = value.substr(6, 9);\n    console.log(year);\n    this.setState({\n      targetGradYear: year\n    });\n  } //   //turn array of choices into options dropdown\n\n\n  generateOptions(choices) {\n    let facIndex = this.state.facIndex;\n\n    if (choices === 'faculty') {\n      return this.state.dummyfac.map(obj => {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          value: Object.keys(obj),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 7\n          }\n        }, Object.keys(obj));\n      });\n    } else if (choices === 'major') {\n      if (this.state.faculty) {\n        return this.state.dummyfac[facIndex][this.state.faculty].map(obj => {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            value: Object.keys(obj),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 21\n            }\n          }, Object.keys(obj));\n        });\n      }\n    } else if (choices === 'specialisation') {\n      if (this.state.major && this.state.faculty) {\n        return this.state.dummyfac[facIndex][this.state.faculty][this.state.majorIndex][this.state.major].map(item => {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 21\n            }\n          }, item);\n        });\n      }\n    } else if (choices === 'residence') {\n      return this.state.residenceOptions.map(obj => {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          value: obj,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 7\n          }\n        }, obj);\n      });\n    } else {\n      let options;\n\n      if (choices === 'matriculationYear') {\n        options = this.props.settings.matriculationOptions;\n      } else {\n        options = this.props.settings.targetGradOptions;\n      }\n\n      return options.map(option => {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          value: option,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 7\n          }\n        }, option);\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 15\n      }\n    }, \"Enter your particulars so that we can personalise your user experience!\"), /*#__PURE__*/React.createElement(Options, {\n      onFacultyChange: this.changeFaculty,\n      onMajorChange: this.changeMajor,\n      onSpecialisationChange: this.changeSpecialisation,\n      onResidenceChange: this.changeResidence,\n      onMatriculationChange: this.changeMatriculationYear,\n      onTargetGradChange: this.changeTargetGradYear,\n      facultyOptions: this.generateOptions('faculty'),\n      majorOptions: this.generateOptions('major'),\n      specialisationOptions: this.generateOptions('specialisation'),\n      residenceOptions: this.generateOptions('residence'),\n      matriculationYearOptions: this.generateOptions('matriculationYear'),\n      targetGradYearOptions: this.generateOptions('targetGradYear'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      class: \"button\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 15\n      }\n    }, \"Save Academic Settings\"));\n  }\n\n}\n\nAcadSettings.propTypes = {\n  setUserSettings: PropTypes.func.isRequired,\n  initialSettings: PropTypes.func.isRequired,\n  updateSettings: PropTypes.func.isRequired,\n  setMatriculationYearOptions: PropTypes.func.isRequired,\n  modplan: PropTypes.object.isRequired,\n  settings: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  modplan: state.modplan.selectedModules,\n  settings: state.settings\n});\n\nexport default connect(mapStateToProps, {\n  initialSettings,\n  updateSettings,\n  setCurrentSemester,\n  setMatriculationYearOptions,\n  setTargetGradYearOptions\n})(AcadSettings);","map":{"version":3,"sources":["/Users/frisciliasultan/Documents/Orbital/client/src/Settings/AcadSettings.jsx"],"names":["React","Options","Link","axios","Button","connect","PropTypes","updateSettings","initialSettings","setCurrentSemester","setMatriculationYearOptions","setTargetGradYearOptions","isEmpty","AcadSettings","Component","constructor","props","handleSubmit","userData","major","state","specialisation","residential","residence","matriculationYear","targetGradYear","name","settings","userInfo","modPlan","modplan","faculty","residenceOptions","dummyfac","changeFaculty","bind","changeMajor","changeSpecialisation","changeResidence","changeMatriculationYear","changeTargetGradYear","generateOptions","componentWillMount","time","Date","month","getMonth","year","getFullYear","isSem2","currentSemester","currentAY","matriculationOptions","value","index","setState","facIndex","majorIndex","substr","console","log","choices","map","obj","Object","keys","item","options","targetGradOptions","option","render","propTypes","setUserSettings","func","isRequired","object","mapStateToProps","selectedModules"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Options } from '../Pages/Module Selection Page/ModuleList';\nimport { Link } from 'react-router-dom';\nimport axios from \"axios\";\nimport { Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport PropTypes from \"prop-types\";\nimport { updateSettings, initialSettings, setCurrentSemester, \n          setMatriculationYearOptions, setTargetGradYearOptions } from \"../actions/settingsActions\";\nimport isEmpty from \"is-empty\";\n\n\n\nclass AcadSettings extends React.Component {\nconstructor(props) {\n    super(props);\n\n    this.state = {\n        faculty: null,\n        major: this.props.settings.userInfo.major,\n        specialisation: this.props.settings.userInfo.specialisation,\n        residenceOptions: ['N/A','CAPT', 'RC4', 'RVRC','Tembusu', 'USP'],\n        residence: this.props.settings.userInfo.residential,\n        matriculationYear: null,\n        targetGradYear: null,\n        // dummyfac: {faculty: [{ name: 'Business',\n        //                         major: [{name: }]\n        //                         specialisation: [{name: 'A'}, ]\n        // }] }\n        dummyfac: [{'Business': [{'Business Administration': ['A', 'B']},\n                                {'Accountancy': ['C', 'D']}]},\n                {'FASS': [{'C': ['N/A']},\n                            {'D': ['N/A']}]},\n                {\n                    'Computing': [\n                                    {'Computer Science': ['N/A']},\n                                    {'Business Analytics': ['N/A']}\n                    ]\n                }],\n        \n    };\n\n    this.changeFaculty = this.changeFaculty.bind(this);\n    this.changeMajor=this.changeMajor.bind(this);\n    this.changeSpecialisation= this.changeSpecialisation.bind(this);\n    this.changeResidence= this.changeResidence.bind(this);\n    this.changeMatriculationYear= this.changeMatriculationYear.bind(this);\n    this.changeTargetGradYear= this.changeTargetGradYear.bind(this);\n    this.generateOptions =this.generateOptions.bind(this);\n}\n\ncomponentWillMount () {\n  const time = new Date();\n  const month = time.getMonth() + 1;\n  const year = time.getFullYear();\n  const isSem2 = (month <= 7);\n  let currentSemester;\n  let currentAY;\n\n  if(isSem2) {\n    currentAY = `${year - 1}/${year}`\n    currentSemester = \"Semester 2\"\n  } else {\n      currentAY = `${year}/${year + 1}`\n      currentSemester = \"Semester 1\"\n  }\n    \n  if(!this.props.settings.currentAY) {\n    this.props.setCurrentSemester(currentAY, currentSemester);\n  }\n\n  if(!this.props.settings.userInfo) {\n    this.props.initialSettings();\n  }\n\n  if(isEmpty(this.props.settings.matriculationOptions)) {\n    this.props.setMatriculationYearOptions(currentAY, currentSemester)\n    this.props.setTargetGradYearOptions(currentAY, currentSemester)\n  }\n}\n\nchangeFaculty(value, index) {\n    this.setState({\n      faculty: value,\n      facIndex: index,\n      major: null\n    });\n  }\n\n  changeMajor(value, index) {\n    this.setState({\n      major: value,\n      majorIndex: index\n    });\n  }\n\n  changeSpecialisation(value) {\n    this.setState({\n      specialisation: value,\n    });\n  }\n\n  changeResidence(value) {\n    this.setState({\n      residence: value,\n    });\n  }\n\n  changeMatriculationYear(value) {\n    const year = value.substr(3,9);\n    this.setState({\n      matriculationYear: year,\n    });\n  }\n\n  changeTargetGradYear(value) {\n    const year = value.substr(6,9);\n    console.log(year);\n    this.setState({\n      targetGradYear: year,\n    });\n  }\n\n\n//   //turn array of choices into options dropdown\n  generateOptions(choices) {\n    let facIndex = this.state.facIndex;\n  if(choices === 'faculty'){\n    return this.state.dummyfac.map((obj) => {\n      return (\n      <option value={Object.keys(obj)}>\n        {Object.keys(obj)}\n      </option>\n      );\n    });\n  } else if(choices === 'major') {\n      if(this.state.faculty) {\n    return this.state.dummyfac\n           [facIndex]\n           [this.state.faculty].map((obj) => {\n                  return (\n                    <option value={Object.keys(obj)}>\n                      {Object.keys(obj)}\n                    </option>\n                  )\n              }\n    )}\n  } else if(choices === 'specialisation') {\n      if(this.state.major && this.state.faculty) {\n      return this.state.dummyfac\n             [facIndex]\n             [this.state.faculty][this.state.majorIndex][this.state.major].map((item) => {\n                  return (\n                    <option>\n                      {item}\n                    </option>\n                  )\n                }    \n      )}\n  } else if(choices === 'residence') {\n    return this.state.residenceOptions.map((obj) => {\n      return (\n      <option value={obj}>\n        {obj}\n      </option>\n      );\n    });\n  } else {\n      let options;\n\n      if(choices === 'matriculationYear') {\n        options = this.props.settings.matriculationOptions\n      } else {\n        options = this.props.settings.targetGradOptions\n      }\n\n    return options.map((option) => {\n      return (\n      <option value={option}>\n        {option}\n      </option>\n      );\n    });\n  }\n}\n\nhandleSubmit = () => {\n  const userData = {\n    major: this.state.major,\n    specialisation: this.state.specialisation,\n    residential: this.state.residence,\n    matriculationYear: this.state.matriculationYear,\n    targetGradYear: this.state.targetGradYear,\n    name: this.props.settings.userInfo.name,\n    modPlan: this.props.modplan\n  }\n\n  this.props.updateSettings(userData);\n}\n\n    render() {\n        return (\n            <div>\n              <h5>Enter your particulars so that we can personalise your user experience!</h5>\n\n              <Options \n                onFacultyChange={this.changeFaculty}\n                onMajorChange={this.changeMajor}\n                onSpecialisationChange={this.changeSpecialisation}\n                onResidenceChange={this.changeResidence}\n                onMatriculationChange={this.changeMatriculationYear}\n                onTargetGradChange={this.changeTargetGradYear}\n                facultyOptions={this.generateOptions('faculty')}\n                majorOptions={this.generateOptions('major')}\n                specialisationOptions={this.generateOptions('specialisation')}\n                residenceOptions={this.generateOptions('residence')}\n                matriculationYearOptions={this.generateOptions('matriculationYear')}\n                targetGradYearOptions={this.generateOptions('targetGradYear')}\n              />\n\n              <Button class='button' onClick={this.handleSubmit}>Save Academic Settings</Button>\n            </div>\n        );\n    }\n}\n\nAcadSettings.propTypes = {\n  setUserSettings: PropTypes.func.isRequired,\n  initialSettings: PropTypes.func.isRequired,\n  updateSettings: PropTypes.func.isRequired,\n  setMatriculationYearOptions: PropTypes.func.isRequired,\n  modplan: PropTypes.object.isRequired,\n  settings: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  modplan: state.modplan.selectedModules,\n  settings: state.settings\n});\n\nexport default connect(mapStateToProps, \n  { initialSettings, updateSettings, setCurrentSemester, setMatriculationYearOptions, setTargetGradYearOptions }) (AcadSettings);\n"]},"metadata":{},"sourceType":"module"}