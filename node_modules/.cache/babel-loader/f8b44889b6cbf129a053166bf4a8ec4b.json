{"ast":null,"code":"var _jsxFileName = \"/Users/frisciliasultan/Documents/Orbitalhosting/src/Pages/Module Selection Page/ModuleSelectionPage.jsx\";\nimport React from \"react\";\nimport { Dropdown } from './Dropdown';\nimport { Table } from './Module Table';\nlet totalGEMMCs = 0;\nexport class ModuleSelectionPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.callBackendAPI = async () => {\n      const response = await fetch('http://localhost:5001/');\n      const body = await response.json();\n\n      if (response.status !== 200) {\n        throw Error(body.message);\n      }\n\n      return body;\n    };\n\n    this.state = {\n      // data: null,\n      // faculty: null,\n      // major: null,\n      // specialisation: null,\n      // residenceOptions: ['N/A','CAPT', 'RC4', 'RVRC','Tembusu', 'USP'],\n      // residence: 'N/A',\n      // dummyfac: [{'Business': [{'Business Administration': ['A', 'B']},\n      //                           {'Accountancy': ['C', 'D']}]},\n      //           {'FASS': [{'C': ['N/A']},\n      //                     {'D': ['N/A']}]},\n      //           {\n      //             'Computing': [\n      //                             {'Computer Science': ['N/A']},\n      //                             {'Business Analytics': ['N/A']}\n      //             ]\n      //           }],\n      // dummymodules: [{GEMs:[\n      //   {\"GEH: Human Culture\": [{code: 'GEH1001', \n      //                           name: 'Globalisation and New Media', \n      //                           MCs: 4, \n      //                           link: \"https://nusmods.com/modules/MA1521/calculus-for-computing\"},\n      //                           {code: 'GEH1002', \n      //                           name: \"Economic Issues in Dev World\", \n      //                           MCs:2, \n      //                           link: \"https://nusmods.com/modules/MA1521/calculus-for-computing\"},\n      //                           {code: 'GEH23420', \n      //                           name: 'lafjkljwe', \n      //                           MCs: 4, \n      //                           link: \"https://nusmods.com/modules/MA1521/calculus-for-computing\"}]}, //end of first object member\n      //   {\"GES: Singapore Studies\": [{code: 'GES324230', \n      //                               name: 'adkfjkjfklasj', \n      //                               MCs: 4, \n      //                               link: 'asdfew'}]} //end of object 2\n      //   ]},\n      //   {coreModules: [\n      //     {code: \"CS1231\",\n      //      name: \"Discrete Structures\",\n      //      MCs: 4,\n      //      link: \"https://nusmods.com/modules/MA1521/calculus-for-computing\"},\n      //      {code: \"MA1101\",\n      //      name: \"Linear Algebra I\",\n      //      MCs: 4,\n      //      link: \"https://nusmods.com/modules/MA1521/calculus-for-computing\"},\n      //      {code: \"MA1521\",\n      //      name: \"Calculus for Computing\",\n      //      MCs: 4,\n      //      link: \"https://nusmods.com/modules/MA1521/calculus-for-computing\"},\n      //      {\n      //        code: \"GER1000\",\n      //        name: \"Quantitative Reasoning\",\n      //        MCs: 4\n      //      },\n      //      {\n      //       code: \"CS1101S\",\n      //       name: \"Programming Methodology\",\n      //       MCs: 4\n      //     }\n      //     ]},\n      //   {specialisationModules: [\n      //     {code: \"MA1531\",\n      //      name: \"Calculus not Computing\",\n      //      MCs: 4,\n      //      link: \"https://nusmods.com/modules/MA1521/calculus-for-computing\"},\n      //      {code: \"MA1531\",\n      //      name: \"Calculus not Computing\",\n      //      MCs: 4,\n      //      link: \"https://nusmods.com/modules/MA1521/calculus-for-computing\"}\n      //   ]},\n      //   {unrestrictedModules: [{code: \"MA1521\",\n      // name: \"Calculus for Computing\",\n      // MCs: 4,\n      // link: \"https://nusmods.com/modules/MA1521/calculus-for-computing\"},\n      // ]},\n      // //y1s2 4\n      // {coreModules: [\n      //   {\n      //     code: \"CS2030\",\n      //     name: \"Programming Methodology II\",\n      //     MCs: 4\n      //   },\n      //   {\n      //     code: \"CS2040\",\n      //     name: \"Data Structures and Algorithms\",\n      //     MCs: 4\n      //   },\n      //   {\n      //     code: \"IS1103\",\n      //     name: \"IS Innovations in Organisations and Society\",\n      //     MCs: 4\n      //   },\n      //   {\n      //     code: \"GEH1000\",\n      //     name: \"Cultural Diversity in ASEAN\",\n      //     MCs: 4\n      //   },\n      //   {\n      //     code: \"GEQ1000\",\n      //     name: \"Asking Questions\",\n      //     MCs: 4\n      //   },\n      //   ]},\n      //   //y2s1 5\n      //   {coreModules: [\n      //     {\n      //       code: \"GET1000\",\n      //       name: \"Ethics at Work: Rhyme, Reason and Reality\",\n      //       MCs: 4\n      //     },\n      //     {\n      //       code: \"GES1000\",\n      //       name: \"Labour Law in Singapore\",\n      //       MCs: 4\n      //     },\n      //     ]},\n      //     //y2s2 6\n      //     {coreModules: [\n      //       {\n      //         code: \"CS2100\",\n      //         name: \"Computer Organisation\",\n      //         MCs: 4\n      //       },\n      //       {\n      //         code: \"CS2103T\",\n      //         name: \"Software Engineering\",\n      //         MCs: 4\n      //       },\n      //       {\n      //         code: \"CS2106\",\n      //         name: \"Introduction to Operating Systems\",\n      //         MCs: 4\n      //       },\n      //       {\n      //         code: \"CS3230\",\n      //         name: \"Design and Analysis of Algorithms\",\n      //         MCs: 4\n      //       },\n      //       ]},\n      //       // y3s1 7\n      //       {coreModules: [\n      //         {\n      //           code: \"CP4101\",\n      //           name: \"B.Comp. Dissertation\",\n      //           MCs: 12\n      //         },\n      //         {\n      //           code: \"CS3236\",\n      //           name: \"Introduction to Information Theory\",\n      //           MCs: 4\n      //         },\n      //         {\n      //           code: \"CS4231\",\n      //           name: \"Parallel and Distributed Algorithms\",\n      //           MCs: 4\n      //         },\n      //         {\n      //           code: \"CS4234\",\n      //           name: \"Optimisatin Algorithms\",\n      //           MCs: 4\n      //         },\n      //         {\n      //           code: \"CS3203\",\n      //           name: \"Software Engineering Project\",\n      //           MCs: 8\n      //         },\n      //         ]},\n      //         // y3s2 8\n      //         {coreModules: [\n      //           {\n      //             code: \"CP3880\",\n      //             name: \"Advanced Technology Attachment Programme\",\n      //             MCs: 12\n      //           },\n      //           ]},\n      //           // y4s1 9\n      //           {coreModules: [\n      //             {\n      //               code: \"ST2334\",\n      //               name: \"Probability and Statistics\",\n      //               MCs: 4\n      //             },\n      //             ]},\n      //             // y4s2 10\n      //             {coreModules: [\n      //               {\n      //                 code: \"ES2660\",\n      //                 name: \"Communicating in The Information Age\",\n      //                 MCs: 4\n      //               },\n      //               {\n      //                 code: \"CS2101\",\n      //                 name: \"Effective Communication for Computing\",\n      //                 MCs: 4\n      //               },\n      //               {\n      //                 code: \"CM1121\",\n      //                 name: \"Organic Chemistry 1\",\n      //                 MCs: 4\n      //               },\n      //               ]},\n      // ],\n      // dummyrules: [{name: \"ULR\",\n      //               tag: \"ULR_2018\",\n      //               requirements: {\"and\": [{name: \"Complete Quantitative Reasoning\",\n      //                                     tag: \"GER\",\n      //                                     requirements: {\"and\": [\n      //                                                           {name: \"Complete GER1000\",\n      //                                                            tag: \"GER1000\",\n      //                                                            module: {code: \"GER1000\",\n      //                                                                     name: \"Quantitative Reasoning\",\n      //                                                                     MCs: 4}\n      //                                                           }\n      //                                                         ]\n      //                                                   }\n      //                                       },\n      //                                       {name: \"Complete Human Culture\",\n      //                                        tag: \"GEH\",\n      //                                        requirements: {\"or\": [{name: \"Complete Globalisation and New Media\",\n      //                                                               tag: \"GEH1001\",\n      //                                                             module: {code: \"GEH1001\",\n      //                                                                      name: \"Globalisation and New Media\",\n      //                                                                      MCs: 4}\n      //                                                               },\n      //                                                               {name: \"Complete Economic Issues in Dev World\",\n      //                                                                tag: \"GEH1001\",\n      //                                                                module: {code: \"GEH1001\",\n      //                                                                         name: \"Globalisation and New Media\",\n      //                                                                         MCs: 4}\n      //                                                                        }\n      //                                                               ]\n      //                                                       },\n      //                                       }\n      //                                     ]\n      //                               }\n      //               },\n      //              {name: \"Core Modules\",\n      //               tag: \"Core Modules 2018\",\n      //               requirement: {\"and\": [\n      //                                     {name: \"Computer Science Foundation\",\n      //                                      tag: \"cs_foundation_2018\",\n      //                                      requirement: {\"and\": [\n      //                                                             {name: \"Complete GER1000\",\n      //                                                             tag: \"GER1000\",\n      //                                                             module: {code: \"GER1000\",\n      //                                                                      name: \"Quantitative Reasoning\",\n      //                                                                      MCs: 4}\n      //                                                             },\n      //                                                             {name: \"Complete GER1000\",\n      //                                                              tag: \"GER1000\",\n      //                                                              module: {code: \"GER1000\",\n      //                                                                       name: \"Quantitative Reasoning\",\n      //                                                                       MCs: 4}\n      //                                                             },\n      //                                                             {name: \"Complete GER1000\",\n      //                                                            tag: \"GER1000\",\n      //                                                            module: {code: \"GER1000\",\n      //                                                                     name: \"Quantitative Reasoning\",\n      //                                                                     MCs: 4}\n      //                                                           },\n      //                                                           {name: \"Complete GER1000\",\n      //                                                            tag: \"GER1000\",\n      //                                                            module: {code: \"GER1000\",\n      //                                                                     name: \"Quantitative Reasoning\",\n      //                                                                     MCs: 4}\n      //                                                           }\n      //                                                           ]\n      //                                                   }\n      //                                       },\n      //                                      {name: \"Computer Science Breadth and Depth\",\n      //                                      tag: \"cs_foundation_2018\",\n      //                                      requirement: {\"condition\": {\"at least\": [{rule: \"CS Focus Area\"}, {MCs: 12, minLevel: 4000}]},\n      //                                       \"or\": [ {name: \"CS Focus Area\",\n      //                                                              tag: \"GER1000\",\n      //                                                              requirement: { \n      //                                                                             \"or\" : [\n      //                                                                                       {\n      //                                                                                         name: \"Algorithms and Theory\",\n      //                                                                                         tag: \"algorithms\",\n      //                                                                                         requirement: { \"condition\": {\"at least\": [{number: 3,\n      //                                                                                                                                   level: \"any\"},\n      //                                                                                                                                   {number: 1,\n      //                                                                                                                                   level: 4000}\n      //                                                                                                                                  ] \n      //                                                                                                                     },\n      //                                                                                                         \"or\": [{name: \"Ger1000\",\n      //                                                                                                               tag: \"GER1000\",\n      //                                                                                                               module: {code: \"GER1000\",\n      //                                                                                                                        name: \"Quantitative Reasoning\",\n      //                                                                                                                        MCs: 4}\n      //                                                                                                                },\n      //                                                                                                                {name: \"Complete GER1000\",\n      //                                                                                                                 tag: \"GER1000\",\n      //                                                                                                                 module: {code: \"GER1000\",\n      //                                                                                                                         name: \"Quantitative Reasoning\",\n      //                                                                                                                         MCs: 4}\n      //                                                                                                                },\n      //                                                                                                                {name: \"Complete GER1000\",\n      //                                                                                                               tag: \"GER1000\",\n      //                                                                                                               module: {code: \"GER1000\",\n      //                                                                                                                        name: \"Quantitative Reasoning\",\n      //                                                                                                                        MCs: 4}\n      //                                                                                                                },\n      //                                                                                                                {name: \"Complete GER1000\",\n      //                                                                                                               tag: \"GER1000\",\n      //                                                                                                               module: {code: \"GER1000\",\n      //                                                                                                                        name: \"Quantitative Reasoning\",\n      //                                                                                                                        MCs: 4}\n      //                                                                                                                },\n      //                                                                                                                {name: \"Complete GER1000\",\n      //                                                                                                                 tag: \"GER1000\",\n      //                                                                                                                 module: {code: \"GER1000\",\n      //                                                                                                                        name: \"Quantitative Reasoning\",\n      //                                                                                                                        MCs: 4}\n      //                                                                                                                },\n      //                                                                                                               ]\n      //                                                                                                       }\n      //                                                                                       }\n      //                                                                                     ]\n      //                                                                                   }\n      //                                                                                 },\n      //                                                                 {name: \"CP-coded\",\n      //                                                                  tag: \"CP-coded\",\n      //                                                                  requirement: {\"condition\": {\n      //                                                                                               \"at most\": {MCs: 12, \n      //                                                                                                           minLevel: 4000}\n      //                                                                                             },\n      //                                                                                 \"or\": [\n      //                                                                                         {\n      //                                                                                           name: \"Complete GER1000\",\n      //                                                                                                               tag: \"GER1000\",\n      //                                                                                                               module: {code: \"GER1000\",\n      //                                                                                                                        name: \"Quantitative Reasoning\",\n      //                                                                                                                        MCs: 4}\n      //                                                                                         },\n      //                                                                                         {\n      //                                                                                           name: \"Complete GER1000\",\n      //                                                                                                               tag: \"GER1000\",\n      //                                                                                                               module: {code: \"GER1000\",\n      //                                                                                                                        name: \"Quantitative Reasoning\",\n      //                                                                                                                        MCs: 4}\n      //                                                                                         }\n      //                                                                                 ] \n      //                                                                               }                        \n      //                                                                 }\n      //                                                     ]}\n      //                                               },\n      //                                      {name: \"Industrial Experience Requirement\",\n      //                                      tag: \"cs_foundation_2018\",\n      //                                      requirement: {}},\n      //                                      {name: \"IT Professionalism\",\n      //                                      tag: \"cs_foundation_2018\",\n      //                                      requirement: {}}\n      //               ]}},\n      //              {unrestrictedModules: {} }\n      //             ],\n      summary: [{\n        cat: \"General Elective Module\",\n        MCs: 0\n      }, {\n        cat: \"Core Module\",\n        MCs: 0\n      }, {\n        cat: \"Specialisation Module\",\n        MCs: 0\n      }, {\n        cat: \"Unrestricted Module\",\n        MCs: 0\n      }],\n      grandTotal: 0\n    }; // this.changeFaculty = this.changeFaculty.bind(this);\n    // this.changeMajor=this.changeMajor.bind(this);\n    // this.changeSpecialisation= this.changeSpecialisation.bind(this);\n    // this.changeResidence= this.changeResidence.bind(this);\n    // this.generateOptions =this.generateOptions.bind(this);\n\n    this.makeTable = this.makeTable.bind(this);\n    this.generateDropDown = this.generateDropDown.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.countModule = this.countModule.bind(this);\n    this.getDropdownMCs = this.getDropdownMCs.bind(this);\n    this.receiveModuleRules = this.receiveModuleRules.bind(this);\n  }\n\n  componentDidMount() {\n    // Call our fetch function below once the component mounts\n    this.callBackendAPI().then(res => this.setState({\n      data: res.express\n    })).catch(err => console.log(err));\n  } // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n\n\n  //receive the choice of faculty from module.js and change state of faculty\n  //   changeFaculty(value, index) {\n  //     this.setState({\n  //       faculty: value,\n  //       facIndex: index,\n  //       major: null\n  //     });\n  //   }\n  //   changeMajor(value, index) {\n  //     this.setState({\n  //       major: value,\n  //       majorIndex: index\n  //     });\n  //   }\n  //   changeSpecialisation(value) {\n  //     this.setState({\n  //       specialisation: value,\n  //     });\n  //   }\n  //   changeResidence(value) {\n  //     this.setState({\n  //       residence: value,\n  //     });\n  //   }\n  //   //turn array of choices into options dropdown\n  //   generateOptions(choices) {\n  //     let facIndex = this.state.facIndex;\n  //   if(choices === 'faculty'){\n  //     return this.state.dummyfac.map((obj) => {\n  //       return (\n  //       <option value={Object.keys(obj)}>\n  //         {Object.keys(obj)}\n  //       </option>\n  //       );\n  //     });\n  //   } else if(choices === 'major') {\n  //       if(this.state.faculty) {\n  //     return this.state.dummyfac\n  //            [facIndex]\n  //            [this.state.faculty].map((obj) => {\n  //                   return (\n  //                     <option value={Object.keys(obj)}>\n  //                       {Object.keys(obj)}\n  //                     </option>\n  //                   )\n  //               }\n  //     )}\n  //   } else if(choices === 'specialisation') {\n  //       if(this.state.major && this.state.faculty) {\n  //       return this.state.dummyfac\n  //              [facIndex]\n  //              [this.state.faculty][this.state.majorIndex][this.state.major].map((item) => {\n  //                   return (\n  //                     <option>\n  //                       {item}\n  //                     </option>\n  //                   )\n  //                 }    \n  //       )}\n  //   } else {\n  //     return this.state.residenceOptions.map((obj) => {\n  //       return (\n  //       <option value={obj}>\n  //         {obj}\n  //       </option>\n  //       );\n  //     });\n  //   }\n  // }\n  //takes in array of objects for modules and return a table\n  //   makeTable(item, moduleCat, index) {\n  //     if(item === 'summary') {\n  //       return this.state.summary.map((module) => {\n  //       const { cat, MCs } = module;\n  //       return(\n  //         <div>\n  //           <tr key={cat}>\n  //             <td>{cat}</td>\n  //             <td>{MCs + 'MCs'}</td>\n  //           </tr>\n  //         </div>\n  //       )\n  //       }\n  //     )}\n  //     else{\n  //     let propfunction;\n  //       if (item === 'coreModule'){\n  //         propfunction = this.state.dummymodules[1].coreModules;\n  //       }\n  //       else if(item === 'specialisation') {\n  //         propfunction = this.state.dummymodules[2].specialisationModules;\n  //       } \n  //       else if(item === 'unrestricted') {\n  //         propfunction = this.state.dummymodules[3].unrestrictedModules;\n  //       } \n  //       else {\n  //         propfunction = this.state.dummymodules[0].GEMs[index][moduleCat]\n  //       }\n  //    return propfunction.map((module) => {\n  //         const { code, name, MCs} = module\n  //         const desc = name.replace(/ /g, '-');\n  //         const link = `https://nusmods.com/modules/${code}/${desc}`\n  //         if(item === 'GEM') {\n  //           return (\n  //             <div>\n  //                 <tr key={code} data-toggle=\"tooltip\" \n  //                     title=\"Click row to select module, click on the module code for more information\"\n  //                     onClick={() => this.handleClick(code, name, MCs, moduleCat)}\n  //                     >\n  //                     <a href={link}\n  //                       target=\"_blank\"\n  //                       rel=\"noopener noreferrer\"\n  //                       className=\"text-decoration-none\">\n  //                     <td>{code}</td>\n  //                     </a>\n  //                     <td>{name}</td>\n  //                     <td>{MCs + 'MCs'}</td>\n  //                 </tr>\n  //             </div>\n  //         )\n  //         } else{\n  //         return (\n  //             <div>\n  //                 <tr key={code} >\n  //                 <a href={link} \n  //                            target=\"_blank\" \n  //                            rel=\"noopener noreferrer\"\n  //                            className=\"text-white text-decoration-none\">\n  //                     <td>{code}</td>\n  //                     <td>{name}</td>\n  //                     <td>{MCs + 'MCs'}</td>\n  //                     </a>\n  //                 </tr>\n  //             </div>\n  //         )}\n  //    })\n  //   }\n  // }\n  generateDropDown() {\n    let title;\n\n    if (this.state.residence === 'N/A') {\n      title = /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 615,\n          columnNumber: 19\n        }\n      }, \"General Elective Modules\");\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 618,\n        columnNumber: 19\n      }\n    }, title, this.state.dummymodules[0].GEMs.map((module, i) => {\n      const GEMCat = Object.keys(module)[0];\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 623,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Dropdown, {\n        cat: GEMCat,\n        title: this.state.GEMTitle,\n        moduleCat: this.state.moduleCat,\n        MCTemp: this.state.MCTemp,\n        sendData: this.getDropdownMCs,\n        id: \"GEM_\" + i,\n        target: \"GEM_\" + i,\n        module: this.makeTable('GEM', GEMCat, i),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 624,\n          columnNumber: 13\n        }\n      }));\n    }));\n  }\n\n  handleClick(code, name, MCs, moduleCat) {\n    const title = code + ': ' + name;\n    this.setState({\n      GEMTitle: title,\n      MCTemp: MCs,\n      moduleCat: moduleCat\n    });\n  }\n\n  countModule() {\n    const GEMs = this.state.totalGEMMCs;\n    const coreModules = this.state.dummymodules[1].coreModules.reduce((currentTotal, next) => {\n      return currentTotal + next.MCs;\n    }, 0);\n    const specialisationModules = this.state.dummymodules[2].specialisationModules.reduce((currentTotal, next) => {\n      return currentTotal + next.MCs;\n    }, 0);\n    const unrestrictedModules = this.state.dummymodules[3].unrestrictedModules.reduce((currentTotal, next) => {\n      return currentTotal + next.MCs;\n    }, 0);\n    const grandTotal = GEMs + coreModules + specialisationModules + unrestrictedModules;\n    this.setState({\n      summary: [{\n        cat: \"General Elective Module\",\n        MCs: GEMs\n      }, {\n        cat: \"Core Module\",\n        MCs: coreModules\n      }, {\n        cat: \"Specialisation Module\",\n        MCs: specialisationModules\n      }, {\n        cat: \"Unrestricted Module\",\n        MCs: unrestrictedModules\n      }],\n      grandTotal: grandTotal\n    });\n  }\n\n  getDropdownMCs(MCs) {\n    totalGEMMCs += MCs;\n    this.setState({\n      totalGEMMCs: totalGEMMCs\n    }, () => this.countModule());\n  }\n\n  receiveModuleRules(rules) {\n    this.setState({\n      rules: rules\n    });\n  } //receive the choice of faculty from module.js and change state of faculty\n\n\n  changeFaculty(value, index) {\n    this.setState({\n      faculty: value,\n      facIndex: index,\n      major: null\n    });\n  }\n\n  changeMajor(value, index) {\n    this.setState({\n      major: value,\n      majorIndex: index\n    });\n  }\n\n  changeSpecialisation(value) {\n    this.setState({\n      specialisation: value\n    });\n  }\n\n  changeResidence(value) {\n    this.setState({\n      residence: value\n    });\n  } //turn array of choices into options dropdown\n\n\n  generateOptions(choices) {\n    let facIndex = this.state.facIndex;\n\n    if (choices === 'faculty') {\n      return this.state.dummyfac.map(obj => {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          value: Object.keys(obj),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 714,\n            columnNumber: 11\n          }\n        }, Object.keys(obj));\n      });\n    } else if (choices === 'major') {\n      if (this.state.faculty) {\n        return this.state.dummyfac[facIndex][this.state.faculty].map(obj => {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            value: Object.keys(obj),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 725,\n              columnNumber: 25\n            }\n          }, Object.keys(obj));\n        });\n      }\n    } else if (choices === 'specialisation') {\n      if (this.state.major && this.state.faculty) {\n        return this.state.dummyfac[facIndex][this.state.faculty][this.state.majorIndex][this.state.major].map(item => {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 737,\n              columnNumber: 25\n            }\n          }, item);\n        });\n      }\n    } else {\n      return this.state.residenceOptions.map(obj => {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          value: obj,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 746,\n            columnNumber: 11\n          }\n        }, obj);\n      });\n    }\n  } // takes in array of objects for modules and return a table\n\n\n  makeTable(item, moduleCat, index) {\n    if (item === 'summary') {\n      return this.state.summary.map(module => {\n        const {\n          cat,\n          MCs\n        } = module;\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 760,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"tr\", {\n          key: cat,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 761,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 762,\n            columnNumber: 17\n          }\n        }, cat), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 763,\n            columnNumber: 17\n          }\n        }, MCs + 'MCs')));\n      });\n    } else {\n      let propfunction;\n\n      if (item === 'coreModule') {\n        propfunction = this.state.dummymodules[1].coreModules;\n      } else if (item === 'specialisation') {\n        propfunction = this.state.dummymodules[2].specialisationModules;\n      } else if (item === 'unrestricted') {\n        propfunction = this.state.dummymodules[3].unrestrictedModules;\n      } else if (item === 'y1s1') {\n        propfunction = this.state.dummymodules[1].coreModules;\n      } else if (item === 'y1s2') {\n        propfunction = this.state.dummymodules[4].coreModules;\n      } else if (item === 'y2s1') {\n        propfunction = this.state.dummymodules[5].coreModules;\n      } else if (item === 'y2s2') {\n        propfunction = this.state.dummymodules[6].coreModules;\n      } else if (item === 'y3s1') {\n        propfunction = this.state.dummymodules[7].coreModules;\n      } else if (item === 'y3s2') {\n        propfunction = this.state.dummymodules[8].coreModules;\n      } else if (item === 'y4s1') {\n        propfunction = this.state.dummymodules[9].coreModules;\n      } else if (item === 'y4s2') {\n        propfunction = this.state.dummymodules[10].coreModules;\n      } else {\n        propfunction = this.state.dummymodules[0].GEMs[index][moduleCat];\n      }\n\n      return propfunction.map(module => {\n        const {\n          code,\n          name,\n          MCs\n        } = module;\n        const desc = name.replace(/ /g, '-');\n        const link = `https://nusmods.com/modules/${code}/${desc}`;\n\n        if (item === 'GEM') {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 807,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(\"tr\", {\n            key: code,\n            \"data-toggle\": \"tooltip\",\n            title: \"Click row to select module, click on the module code for more information\",\n            onClick: () => this.handleClick(code, name, MCs, moduleCat),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 808,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(\"a\", {\n            href: link,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            className: \"text-decoration-none\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 812,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 816,\n              columnNumber: 25\n            }\n          }, code)), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 818,\n              columnNumber: 25\n            }\n          }, name), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 819,\n              columnNumber: 25\n            }\n          }, MCs + 'MCs')));\n        } else {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 825,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(\"tr\", {\n            key: code,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 826,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(\"a\", {\n            href: link,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            className: \"text-white text-decoration-none\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 827,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 831,\n              columnNumber: 25\n            }\n          }, code), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 832,\n              columnNumber: 25\n            }\n          }, name), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 833,\n              columnNumber: 25\n            }\n          }, MCs + 'MCs'))));\n        }\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      class: \"full-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 844,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 845,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"display-3 ml-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 846,\n        columnNumber: 2\n      }\n    }, \"Module Information\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 868,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg col-md-4 col-sm-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 870,\n        columnNumber: 2\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      title: \"Year 1 Semester 1\",\n      module: this.makeTable('y1s1'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 871,\n        columnNumber: 2\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg col-md-4 col-sm-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 876,\n        columnNumber: 2\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      title: \"Year 1 Semester 2\",\n      module: this.makeTable('y1s2'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 877,\n        columnNumber: 2\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg col-md-4 col-sm-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 882,\n        columnNumber: 2\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      title: \"Year 2 Semester 1\",\n      module: this.makeTable('y2s1'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 883,\n        columnNumber: 2\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg col-md-4 col-sm-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 888,\n        columnNumber: 2\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      title: \"Year 2 Semester 2\",\n      module: this.makeTable('y2s2'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 889,\n        columnNumber: 2\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 897,\n        columnNumber: 2\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg col-md-4 col-sm-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 898,\n        columnNumber: 2\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      title: \"Year 3 Semester 1\",\n      module: this.makeTable('y3s1'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 899,\n        columnNumber: 2\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg col-md-4 col-sm-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 904,\n        columnNumber: 2\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      title: \"Year 3 Semester 2\",\n      module: this.makeTable('y3s2'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 905,\n        columnNumber: 2\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg col-md-4 col-sm-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 912,\n        columnNumber: 2\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      title: \"Year 4 Semester 1\",\n      module: this.makeTable('y4s1'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 913,\n        columnNumber: 2\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg col-md-4 col-sm-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 918,\n        columnNumber: 2\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      title: \"Year 4 Semester 2\",\n      module: this.makeTable('y4s2'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 919,\n        columnNumber: 2\n      }\n    }))))\n    /* <div className=\"col-lg col-md-4 col-sm-6\">\n        <Table\n          title=\"Core Modules\"\n          module={this.makeTable('coreModule')} />\n    </div>\n     <div className=\"col-lg col-md-4 col-sm-6\">\n      <Table \n        title=\"Specialisation Modules\"\n        module={this.makeTable('specialisation')} />\n    </div>\n     <div className=\"col-lg col-md-6 col-sm-6\">\n      <Table\n          title=\"Unrestricted Electives\"\n           module={this.makeTable('unrestricted')} />\n    </div>\n    \n    <div className=\"col-lg col-md-6\">\n      <Table\n        title=\"Total Modular Credits\"\n        module={this.makeTable('summary')}\n        total={this.state.grandTotal}/>\n    </div>\n    </div> */\n    // </div>\n\n    /* <div className=\"row\"> \n    \n     <div className=\"col-lg col-md-4 col-sm-6\">\n         {this.generateDropDown()}\n     </div>\n    \n     <div className=\"col-lg col-md-4 col-sm-6\">\n         <Table\n           title=\"Core Modules\"\n           module={this.makeTable('coreModule')} />\n     </div>\n    \n     <div className=\"col-lg col-md-4 col-sm-6\">\n       <Table \n         title=\"Specialisation Modules\"\n         module={this.makeTable('specialisation')} />\n     </div>\n    \n     <div className=\"col-lg col-md-6 col-sm-6\">\n       <Table\n           title=\"Unrestricted Electives\"\n            module={this.makeTable('unrestricted')} />\n     </div>\n    \n    \n     <div className=\"col-lg col-md-6\">\n       <Table\n         title=\"Total Modular Credits\"\n         module={this.makeTable('summary')}\n         total={this.state.grandTotal}/>\n     </div>\n    \n    </div>\n    \n    </div> */\n    ;\n  }\n\n}","map":{"version":3,"sources":["/Users/frisciliasultan/Documents/Orbitalhosting/src/Pages/Module Selection Page/ModuleSelectionPage.jsx"],"names":["React","Dropdown","Table","totalGEMMCs","ModuleSelectionPage","Component","constructor","props","callBackendAPI","response","fetch","body","json","status","Error","message","state","summary","cat","MCs","grandTotal","makeTable","bind","generateDropDown","handleClick","countModule","getDropdownMCs","receiveModuleRules","componentDidMount","then","res","setState","data","express","catch","err","console","log","title","residence","dummymodules","GEMs","map","module","i","GEMCat","Object","keys","GEMTitle","moduleCat","MCTemp","code","name","coreModules","reduce","currentTotal","next","specialisationModules","unrestrictedModules","rules","changeFaculty","value","index","faculty","facIndex","major","changeMajor","majorIndex","changeSpecialisation","specialisation","changeResidence","generateOptions","choices","dummyfac","obj","item","residenceOptions","propfunction","desc","replace","link","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,IAAIC,WAAW,GAAG,CAAlB;AAEA,OAAO,MAAMC,mBAAN,SAAkCJ,KAAK,CAACK,SAAxC,CAAkD;AACrDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAicnBC,cAjcmB,GAicF,YAAY;AAC3B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,wBAAD,CAA5B;AACA,YAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;;AAEA,UAAIH,QAAQ,CAACI,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,cAAMC,KAAK,CAACH,IAAI,CAACI,OAAN,CAAX;AACD;;AACD,aAAOJ,IAAP;AACD,KAzckB;;AAEf,SAAKK,KAAL,GAAakyBAAN;AACCC,QAAAA,GAAG,EAAE;AADN,OAAD,EAEE;AAACD,QAAAA,GAAG,EAAE,aAAN;AACAC,QAAAA,GAAG,EAAE;AADL,OAFF,EAIE;AAACD,QAAAA,GAAG,EAAE,uBAAN;AACAC,QAAAA,GAAG,EAAE;AADL,OAJF,EAME;AAACD,QAAAA,GAAG,EAAE,qBAAN;AACAC,QAAAA,GAAG,EAAE;AADL,OANF,CA/ZG;AAuabC,MAAAA,UAAU,EAAE;AAvaC,KAAb,CAFe,CA6af;AACA;AACA;AACA;AACA;;AACA,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBD,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKE,WAAL,GAAmB,KAAKA,WAAL,CAAiBF,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKG,WAAL,GAAmB,KAAKA,WAAL,CAAiBH,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKI,cAAL,GAAsB,KAAKA,cAAL,CAAoBJ,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKK,kBAAL,GAAwB,KAAKA,kBAAL,CAAwBL,IAAxB,CAA6B,IAA7B,CAAxB;AACD;;AAEDM,EAAAA,iBAAiB,GAAG;AAClB;AACF,SAAKpB,cAAL,GACGqB,IADH,CACQC,GAAG,IAAI,KAAKC,QAAL,CAAc;AAAEC,MAAAA,IAAI,EAAEF,GAAG,CAACG;AAAZ,KAAd,CADf,EAEGC,KAFH,CAESC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFhB;AAGD,GAhcoD,CAicnD;;;AAWA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEEZ,EAAAA,gBAAgB,GAAG;AACjB,QAAIe,KAAJ;;AACA,QAAG,KAAKtB,KAAL,CAAWuB,SAAX,KAAyB,KAA5B,EAAmC;AACjCD,MAAAA,KAAK,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAAR;AACD;;AAEC,wBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACPA,KADO,EAEP,KAAKtB,KAAL,CAAWwB,YAAX,CAAwB,CAAxB,EAA2BC,IAA3B,CAAgCC,GAAhC,CAAoC,CAACC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","sourcesContent":["import React from \"react\";\nimport { Dropdown } from './Dropdown';\nimport { Table } from './Module Table';\n\nlet totalGEMMCs = 0;\n\nexport class ModuleSelectionPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          // data: null,\n          // faculty: null,\n          \n          // major: null,\n          // specialisation: null,\n          // residenceOptions: ['N/A','CAPT', 'RC4', 'RVRC','Tembusu', 'USP'],\n          // residence: 'N/A',\n          // dummyfac: [{'Business': [{'Business Administration': ['A', 'B']},\n          //                           {'Accountancy': ['C', 'D']}]},\n          //           {'FASS': [{'C': ['N/A']},\n          //                     {'D': ['N/A']}]},\n          //           {\n          //             'Computing': [\n          //                             {'Computer Science': ['N/A']},\n          //                             {'Business Analytics': ['N/A']}\n          //             ]\n          //           }],\n          // dummymodules: [{GEMs:[\n          //   {\"GEH: Human Culture\": [{code: 'GEH1001', \n          //                           name: 'Globalisation and New Media', \n          //                           MCs: 4, \n          //                           link: \"https://nusmods.com/modules/MA1521/calculus-for-computing\"},\n          //                           {code: 'GEH1002', \n          //                           name: \"Economic Issues in Dev World\", \n          //                           MCs:2, \n          //                           link: \"https://nusmods.com/modules/MA1521/calculus-for-computing\"},\n          //                           {code: 'GEH23420', \n          //                           name: 'lafjkljwe', \n          //                           MCs: 4, \n          //                           link: \"https://nusmods.com/modules/MA1521/calculus-for-computing\"}]}, //end of first object member\n            \n          //   {\"GES: Singapore Studies\": [{code: 'GES324230', \n          //                               name: 'adkfjkjfklasj', \n          //                               MCs: 4, \n          //                               link: 'asdfew'}]} //end of object 2\n          //   ]},\n          //   {coreModules: [\n          //     {code: \"CS1231\",\n          //      name: \"Discrete Structures\",\n          //      MCs: 4,\n          //      link: \"https://nusmods.com/modules/MA1521/calculus-for-computing\"},\n          //      {code: \"MA1101\",\n          //      name: \"Linear Algebra I\",\n          //      MCs: 4,\n          //      link: \"https://nusmods.com/modules/MA1521/calculus-for-computing\"},\n          //      {code: \"MA1521\",\n          //      name: \"Calculus for Computing\",\n          //      MCs: 4,\n          //      link: \"https://nusmods.com/modules/MA1521/calculus-for-computing\"},\n          //      {\n          //        code: \"GER1000\",\n          //        name: \"Quantitative Reasoning\",\n          //        MCs: 4\n          //      },\n          //      {\n          //       code: \"CS1101S\",\n          //       name: \"Programming Methodology\",\n          //       MCs: 4\n          //     }\n          //     ]},\n          //   {specialisationModules: [\n          //     {code: \"MA1531\",\n          //      name: \"Calculus not Computing\",\n          //      MCs: 4,\n          //      link: \"https://nusmods.com/modules/MA1521/calculus-for-computing\"},\n          //      {code: \"MA1531\",\n          //      name: \"Calculus not Computing\",\n          //      MCs: 4,\n          //      link: \"https://nusmods.com/modules/MA1521/calculus-for-computing\"}\n          //   ]},\n          //   {unrestrictedModules: [{code: \"MA1521\",\n          // name: \"Calculus for Computing\",\n          // MCs: 4,\n          // link: \"https://nusmods.com/modules/MA1521/calculus-for-computing\"},\n          // ]},\n\n          // //y1s2 4\n          // {coreModules: [\n          //   {\n          //     code: \"CS2030\",\n          //     name: \"Programming Methodology II\",\n          //     MCs: 4\n          //   },\n          //   {\n          //     code: \"CS2040\",\n          //     name: \"Data Structures and Algorithms\",\n          //     MCs: 4\n          //   },\n          //   {\n          //     code: \"IS1103\",\n          //     name: \"IS Innovations in Organisations and Society\",\n          //     MCs: 4\n          //   },\n          //   {\n          //     code: \"GEH1000\",\n          //     name: \"Cultural Diversity in ASEAN\",\n          //     MCs: 4\n          //   },\n          //   {\n          //     code: \"GEQ1000\",\n          //     name: \"Asking Questions\",\n          //     MCs: 4\n          //   },\n          //   ]},\n          //   //y2s1 5\n          //   {coreModules: [\n          //     {\n          //       code: \"GET1000\",\n          //       name: \"Ethics at Work: Rhyme, Reason and Reality\",\n          //       MCs: 4\n          //     },\n          //     {\n          //       code: \"GES1000\",\n          //       name: \"Labour Law in Singapore\",\n          //       MCs: 4\n          //     },\n          //     ]},\n\n          //     //y2s2 6\n          //     {coreModules: [\n          //       {\n          //         code: \"CS2100\",\n          //         name: \"Computer Organisation\",\n          //         MCs: 4\n          //       },\n          //       {\n          //         code: \"CS2103T\",\n          //         name: \"Software Engineering\",\n          //         MCs: 4\n          //       },\n          //       {\n          //         code: \"CS2106\",\n          //         name: \"Introduction to Operating Systems\",\n          //         MCs: 4\n          //       },\n          //       {\n          //         code: \"CS3230\",\n          //         name: \"Design and Analysis of Algorithms\",\n          //         MCs: 4\n          //       },\n          //       ]},\n\n          //       // y3s1 7\n          //       {coreModules: [\n          //         {\n          //           code: \"CP4101\",\n          //           name: \"B.Comp. Dissertation\",\n          //           MCs: 12\n          //         },\n          //         {\n          //           code: \"CS3236\",\n          //           name: \"Introduction to Information Theory\",\n          //           MCs: 4\n          //         },\n          //         {\n          //           code: \"CS4231\",\n          //           name: \"Parallel and Distributed Algorithms\",\n          //           MCs: 4\n          //         },\n          //         {\n          //           code: \"CS4234\",\n          //           name: \"Optimisatin Algorithms\",\n          //           MCs: 4\n          //         },\n          //         {\n          //           code: \"CS3203\",\n          //           name: \"Software Engineering Project\",\n          //           MCs: 8\n          //         },\n\n          //         ]},\n\n          //         // y3s2 8\n          //         {coreModules: [\n          //           {\n          //             code: \"CP3880\",\n          //             name: \"Advanced Technology Attachment Programme\",\n          //             MCs: 12\n          //           },\n          //           ]},\n\n          //           // y4s1 9\n          //           {coreModules: [\n          //             {\n          //               code: \"ST2334\",\n          //               name: \"Probability and Statistics\",\n          //               MCs: 4\n          //             },\n          //             ]},\n\n          //             // y4s2 10\n          //             {coreModules: [\n          //               {\n          //                 code: \"ES2660\",\n          //                 name: \"Communicating in The Information Age\",\n          //                 MCs: 4\n          //               },\n          //               {\n          //                 code: \"CS2101\",\n          //                 name: \"Effective Communication for Computing\",\n          //                 MCs: 4\n          //               },\n          //               {\n          //                 code: \"CM1121\",\n          //                 name: \"Organic Chemistry 1\",\n          //                 MCs: 4\n          //               },\n          //               ]},\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n          // ],\n          // dummyrules: [{name: \"ULR\",\n          //               tag: \"ULR_2018\",\n          //               requirements: {\"and\": [{name: \"Complete Quantitative Reasoning\",\n          //                                     tag: \"GER\",\n          //                                     requirements: {\"and\": [\n          //                                                           {name: \"Complete GER1000\",\n          //                                                            tag: \"GER1000\",\n          //                                                            module: {code: \"GER1000\",\n          //                                                                     name: \"Quantitative Reasoning\",\n          //                                                                     MCs: 4}\n          //                                                           }\n          //                                                         ]\n          //                                                   }\n          //                                       },\n    \n          //                                       {name: \"Complete Human Culture\",\n          //                                        tag: \"GEH\",\n          //                                        requirements: {\"or\": [{name: \"Complete Globalisation and New Media\",\n          //                                                               tag: \"GEH1001\",\n          //                                                             module: {code: \"GEH1001\",\n          //                                                                      name: \"Globalisation and New Media\",\n          //                                                                      MCs: 4}\n          //                                                               },\n                                     \n          //                                                               {name: \"Complete Economic Issues in Dev World\",\n          //                                                                tag: \"GEH1001\",\n          //                                                                module: {code: \"GEH1001\",\n          //                                                                         name: \"Globalisation and New Media\",\n          //                                                                         MCs: 4}\n          //                                                                        }\n          //                                                               ]\n          //                                                       },\n          //                                       }\n          //                                     ]\n          //                               }\n          //               },\n    \n          //              {name: \"Core Modules\",\n          //               tag: \"Core Modules 2018\",\n          //               requirement: {\"and\": [\n          //                                     {name: \"Computer Science Foundation\",\n          //                                      tag: \"cs_foundation_2018\",\n          //                                      requirement: {\"and\": [\n          //                                                             {name: \"Complete GER1000\",\n          //                                                             tag: \"GER1000\",\n          //                                                             module: {code: \"GER1000\",\n          //                                                                      name: \"Quantitative Reasoning\",\n          //                                                                      MCs: 4}\n          //                                                             },\n    \n          //                                                             {name: \"Complete GER1000\",\n          //                                                              tag: \"GER1000\",\n          //                                                              module: {code: \"GER1000\",\n          //                                                                       name: \"Quantitative Reasoning\",\n          //                                                                       MCs: 4}\n          //                                                             },\n    \n          //                                                             {name: \"Complete GER1000\",\n          //                                                            tag: \"GER1000\",\n          //                                                            module: {code: \"GER1000\",\n          //                                                                     name: \"Quantitative Reasoning\",\n          //                                                                     MCs: 4}\n          //                                                           },\n    \n          //                                                           {name: \"Complete GER1000\",\n          //                                                            tag: \"GER1000\",\n          //                                                            module: {code: \"GER1000\",\n          //                                                                     name: \"Quantitative Reasoning\",\n          //                                                                     MCs: 4}\n          //                                                           }\n          //                                                           ]\n          //                                                   }\n          //                                       },\n    \n          //                                      {name: \"Computer Science Breadth and Depth\",\n          //                                      tag: \"cs_foundation_2018\",\n          //                                      requirement: {\"condition\": {\"at least\": [{rule: \"CS Focus Area\"}, {MCs: 12, minLevel: 4000}]},\n                                                 \n          //                                       \"or\": [ {name: \"CS Focus Area\",\n          //                                                              tag: \"GER1000\",\n          //                                                              requirement: { \n          //                                                                             \"or\" : [\n          //                                                                                       {\n          //                                                                                         name: \"Algorithms and Theory\",\n          //                                                                                         tag: \"algorithms\",\n          //                                                                                         requirement: { \"condition\": {\"at least\": [{number: 3,\n          //                                                                                                                                   level: \"any\"},\n          //                                                                                                                                   {number: 1,\n          //                                                                                                                                   level: 4000}\n          //                                                                                                                                  ] \n          //                                                                                                                     },\n          //                                                                                                         \"or\": [{name: \"Ger1000\",\n          //                                                                                                               tag: \"GER1000\",\n          //                                                                                                               module: {code: \"GER1000\",\n          //                                                                                                                        name: \"Quantitative Reasoning\",\n          //                                                                                                                        MCs: 4}\n                                                                                                                                \n          //                                                                                                                },\n          //                                                                                                                {name: \"Complete GER1000\",\n          //                                                                                                                 tag: \"GER1000\",\n          //                                                                                                                 module: {code: \"GER1000\",\n          //                                                                                                                         name: \"Quantitative Reasoning\",\n          //                                                                                                                         MCs: 4}\n                                                                                                                                \n          //                                                                                                                },\n          //                                                                                                                {name: \"Complete GER1000\",\n          //                                                                                                               tag: \"GER1000\",\n          //                                                                                                               module: {code: \"GER1000\",\n          //                                                                                                                        name: \"Quantitative Reasoning\",\n          //                                                                                                                        MCs: 4}\n                                                                                                                                \n          //                                                                                                                },\n          //                                                                                                                {name: \"Complete GER1000\",\n          //                                                                                                               tag: \"GER1000\",\n          //                                                                                                               module: {code: \"GER1000\",\n          //                                                                                                                        name: \"Quantitative Reasoning\",\n          //                                                                                                                        MCs: 4}\n                                                                                                                                \n          //                                                                                                                },\n          //                                                                                                                {name: \"Complete GER1000\",\n          //                                                                                                                 tag: \"GER1000\",\n          //                                                                                                                 module: {code: \"GER1000\",\n          //                                                                                                                        name: \"Quantitative Reasoning\",\n          //                                                                                                                        MCs: 4}\n                                                                                                                                  \n          //                                                                                                                },\n          //                                                                                                               ]\n          //                                                                                                       }\n          //                                                                                       }\n          //                                                                                     ]\n          //                                                                                   }\n          //                                                                                 },\n                                                                                          \n          //                                                                 {name: \"CP-coded\",\n          //                                                                  tag: \"CP-coded\",\n          //                                                                  requirement: {\"condition\": {\n          //                                                                                               \"at most\": {MCs: 12, \n          //                                                                                                           minLevel: 4000}\n          //                                                                                             },\n          //                                                                                 \"or\": [\n          //                                                                                         {\n          //                                                                                           name: \"Complete GER1000\",\n          //                                                                                                               tag: \"GER1000\",\n          //                                                                                                               module: {code: \"GER1000\",\n          //                                                                                                                        name: \"Quantitative Reasoning\",\n          //                                                                                                                        MCs: 4}\n          //                                                                                         },\n    \n          //                                                                                         {\n          //                                                                                           name: \"Complete GER1000\",\n          //                                                                                                               tag: \"GER1000\",\n          //                                                                                                               module: {code: \"GER1000\",\n          //                                                                                                                        name: \"Quantitative Reasoning\",\n          //                                                                                                                        MCs: 4}\n          //                                                                                         }\n          //                                                                                 ] \n          //                                                                               }                        \n          //                                                                 }\n          //                                                     ]}\n          //                                               },\n    \n          //                                      {name: \"Industrial Experience Requirement\",\n          //                                      tag: \"cs_foundation_2018\",\n          //                                      requirement: {}},\n    \n          //                                      {name: \"IT Professionalism\",\n          //                                      tag: \"cs_foundation_2018\",\n          //                                      requirement: {}}\n          //               ]}},\n          //              {unrestrictedModules: {} }\n          //             ],\n          \n         summary: [{cat: \"General Elective Module\",\n                    MCs: 0},\n                    {cat: \"Core Module\",\n                    MCs: 0},\n                    {cat: \"Specialisation Module\",\n                    MCs: 0},\n                    {cat: \"Unrestricted Module\",\n                    MCs: 0}],\n        grandTotal: 0,\n    \n    \n        }\n        // this.changeFaculty = this.changeFaculty.bind(this);\n        // this.changeMajor=this.changeMajor.bind(this);\n        // this.changeSpecialisation= this.changeSpecialisation.bind(this);\n        // this.changeResidence= this.changeResidence.bind(this);\n        // this.generateOptions =this.generateOptions.bind(this);\n        this.makeTable = this.makeTable.bind(this);\n        this.generateDropDown = this.generateDropDown.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n        this.countModule = this.countModule.bind(this);\n        this.getDropdownMCs = this.getDropdownMCs.bind(this);\n        this.receiveModuleRules=this.receiveModuleRules.bind(this);\n      }\n      \n      componentDidMount() {\n        // Call our fetch function below once the component mounts\n      this.callBackendAPI()\n        .then(res => this.setState({ data: res.express }))\n        .catch(err => console.log(err));\n    }\n      // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n    callBackendAPI = async () => {\n      const response = await fetch('http://localhost:5001/');\n      const body = await response.json();\n    \n      if (response.status !== 200) {\n        throw Error(body.message) \n      }\n      return body;\n    };\n    \n      //receive the choice of faculty from module.js and change state of faculty\n    //   changeFaculty(value, index) {\n    //     this.setState({\n    //       faculty: value,\n    //       facIndex: index,\n    //       major: null\n    //     });\n    //   }\n    \n    //   changeMajor(value, index) {\n    //     this.setState({\n    //       major: value,\n    //       majorIndex: index\n    //     });\n    //   }\n    \n    //   changeSpecialisation(value) {\n    //     this.setState({\n    //       specialisation: value,\n    //     });\n    //   }\n    //   changeResidence(value) {\n    //     this.setState({\n    //       residence: value,\n    //     });\n    //   }\n    \n    //   //turn array of choices into options dropdown\n    //   generateOptions(choices) {\n    //     let facIndex = this.state.facIndex;\n    //   if(choices === 'faculty'){\n    //     return this.state.dummyfac.map((obj) => {\n    //       return (\n    //       <option value={Object.keys(obj)}>\n    //         {Object.keys(obj)}\n    //       </option>\n    //       );\n    //     });\n    //   } else if(choices === 'major') {\n    //       if(this.state.faculty) {\n    //     return this.state.dummyfac\n    //            [facIndex]\n    //            [this.state.faculty].map((obj) => {\n    //                   return (\n    //                     <option value={Object.keys(obj)}>\n    //                       {Object.keys(obj)}\n    //                     </option>\n    //                   )\n    //               }\n    //     )}\n    //   } else if(choices === 'specialisation') {\n    //       if(this.state.major && this.state.faculty) {\n    //       return this.state.dummyfac\n    //              [facIndex]\n    //              [this.state.faculty][this.state.majorIndex][this.state.major].map((item) => {\n    //                   return (\n    //                     <option>\n    //                       {item}\n    //                     </option>\n    //                   )\n    //                 }    \n    //       )}\n    //   } else {\n    //     return this.state.residenceOptions.map((obj) => {\n    //       return (\n    //       <option value={obj}>\n    //         {obj}\n    //       </option>\n    //       );\n    //     });\n    //   }\n    // }\n    \n      //takes in array of objects for modules and return a table\n    //   makeTable(item, moduleCat, index) {\n    //     if(item === 'summary') {\n    //       return this.state.summary.map((module) => {\n    //       const { cat, MCs } = module;\n    //       return(\n    //         <div>\n    //           <tr key={cat}>\n    //             <td>{cat}</td>\n    //             <td>{MCs + 'MCs'}</td>\n    //           </tr>\n    //         </div>\n    //       )\n    //       }\n    //     )}\n    \n    //     else{\n    //     let propfunction;\n    //       if (item === 'coreModule'){\n    //         propfunction = this.state.dummymodules[1].coreModules;\n    //       }\n    //       else if(item === 'specialisation') {\n    //         propfunction = this.state.dummymodules[2].specialisationModules;\n    //       } \n    //       else if(item === 'unrestricted') {\n    //         propfunction = this.state.dummymodules[3].unrestrictedModules;\n    //       } \n    //       else {\n    //         propfunction = this.state.dummymodules[0].GEMs[index][moduleCat]\n    //       }\n    \n    //    return propfunction.map((module) => {\n    //         const { code, name, MCs} = module\n    //         const desc = name.replace(/ /g, '-');\n    //         const link = `https://nusmods.com/modules/${code}/${desc}`\n    //         if(item === 'GEM') {\n    //           return (\n    //             <div>\n    //                 <tr key={code} data-toggle=\"tooltip\" \n    //                     title=\"Click row to select module, click on the module code for more information\"\n    //                     onClick={() => this.handleClick(code, name, MCs, moduleCat)}\n    //                     >\n    //                     <a href={link}\n    //                       target=\"_blank\"\n    //                       rel=\"noopener noreferrer\"\n    //                       className=\"text-decoration-none\">\n    //                     <td>{code}</td>\n    //                     </a>\n    //                     <td>{name}</td>\n    //                     <td>{MCs + 'MCs'}</td>\n    //                 </tr>\n    //             </div>\n    //         )\n    //         } else{\n    //         return (\n    //             <div>\n    //                 <tr key={code} >\n    //                 <a href={link} \n    //                            target=\"_blank\" \n    //                            rel=\"noopener noreferrer\"\n    //                            className=\"text-white text-decoration-none\">\n    //                     <td>{code}</td>\n    //                     <td>{name}</td>\n    //                     <td>{MCs + 'MCs'}</td>\n    //                     </a>\n    //                 </tr>\n    //             </div>\n    //         )}\n    //    })\n    //   }\n    // }\n    \n      generateDropDown() {\n        let title;\n        if(this.state.residence === 'N/A') {\n          title = <h3>General Elective Modules</h3>;\n        }  \n          \n          return (<div>\n          {title}\n          {this.state.dummymodules[0].GEMs.map((module, i) => {\n            const GEMCat = Object.keys(module)[0]\n            return (\n            <div>\n            <Dropdown cat={GEMCat}\n              title={this.state.GEMTitle}\n              moduleCat={this.state.moduleCat}\n              MCTemp={this.state.MCTemp}\n              sendData={this.getDropdownMCs}\n              id={\"GEM_\" + i}\n              target={\"GEM_\" + i}\n            module={this.makeTable('GEM', GEMCat, i)} />\n            </div>\n            )\n          })}\n            </div>);\n    \n        \n      \n      }\n    \n      handleClick(code, name, MCs, moduleCat) {\n        const title = code + ': ' + name;\n        this.setState({GEMTitle: title,\n                       MCTemp: MCs,\n                        moduleCat: moduleCat});\n      }\n    \n      countModule() {\n        const GEMs = this.state.totalGEMMCs;\n        const coreModules = this.state.dummymodules[1].coreModules.reduce((currentTotal, next) => {\n          return currentTotal + next.MCs} , 0);\n        const specialisationModules = this.state.dummymodules[2].specialisationModules.reduce((currentTotal, next) => {\n          return currentTotal + next.MCs} , 0);\n        const unrestrictedModules = this.state.dummymodules[3].unrestrictedModules.reduce((currentTotal, next) => {\n          return currentTotal + next.MCs} , 0);\n        const grandTotal = GEMs + coreModules + specialisationModules + unrestrictedModules;\n          this.setState({summary: [{cat: \"General Elective Module\",\n                                   MCs: GEMs},\n                                  {cat: \"Core Module\",\n                                   MCs: coreModules},\n                                  {cat: \"Specialisation Module\",\n                                   MCs: specialisationModules},\n                                  {cat: \"Unrestricted Module\",\n                                   MCs: unrestrictedModules}],\n                        grandTotal: grandTotal\n                                  });\n          \n        }\n      \n        getDropdownMCs(MCs) {\n          totalGEMMCs += MCs\n          this.setState({totalGEMMCs: totalGEMMCs}, () => this.countModule());\n        }\n      \n        receiveModuleRules(rules) {\n          this.setState({rules: rules});\n        }\n\n\n\n           //receive the choice of faculty from module.js and change state of faculty\n      changeFaculty(value, index) {\n        this.setState({\n          faculty: value,\n          facIndex: index,\n          major: null\n        });\n      }\n    \n      changeMajor(value, index) {\n        this.setState({\n          major: value,\n          majorIndex: index\n        });\n      }\n    \n      changeSpecialisation(value) {\n        this.setState({\n          specialisation: value,\n        });\n      }\n      changeResidence(value) {\n        this.setState({\n          residence: value,\n        });\n      }\n    \n      //turn array of choices into options dropdown\n      generateOptions(choices) {\n        let facIndex = this.state.facIndex;\n      if(choices === 'faculty'){\n        return this.state.dummyfac.map((obj) => {\n          return (\n          <option value={Object.keys(obj)}>\n            {Object.keys(obj)}\n          </option>\n          );\n        });\n      } else if(choices === 'major') {\n          if(this.state.faculty) {\n        return this.state.dummyfac\n               [facIndex]\n               [this.state.faculty].map((obj) => {\n                      return (\n                        <option value={Object.keys(obj)}>\n                          {Object.keys(obj)}\n                        </option>\n                      )\n                  }\n        )}\n      } else if(choices === 'specialisation') {\n          if(this.state.major && this.state.faculty) {\n          return this.state.dummyfac\n                 [facIndex]\n                 [this.state.faculty][this.state.majorIndex][this.state.major].map((item) => {\n                      return (\n                        <option>\n                          {item}\n                        </option>\n                      )\n                    }    \n          )}\n      } else {\n        return this.state.residenceOptions.map((obj) => {\n          return (\n          <option value={obj}>\n            {obj}\n          </option>\n          );\n        });\n      }\n    }\n    \n      // takes in array of objects for modules and return a table\n      makeTable(item, moduleCat, index) {\n        if(item === 'summary') {\n          return this.state.summary.map((module) => {\n          const { cat, MCs } = module;\n          return(\n            <div>\n              <tr key={cat}>\n                <td>{cat}</td>\n                <td>{MCs + 'MCs'}</td>\n              </tr>\n            </div>\n          )\n          }\n        )}\n    \n        else{\n        let propfunction;\n          if (item === 'coreModule'){\n            propfunction = this.state.dummymodules[1].coreModules;\n          }\n          else if(item === 'specialisation') {\n            propfunction = this.state.dummymodules[2].specialisationModules;\n          } \n          else if(item === 'unrestricted') {\n            propfunction = this.state.dummymodules[3].unrestrictedModules;\n          } else if(item === 'y1s1') {\n            propfunction = this.state.dummymodules[1].coreModules;\n          } else if(item === 'y1s2') {\n            propfunction = this.state.dummymodules[4].coreModules;\n          } else if(item === 'y2s1') {\n            propfunction = this.state.dummymodules[5].coreModules;\n          } else if(item === 'y2s2') {\n            propfunction = this.state.dummymodules[6].coreModules;\n          } else if(item === 'y3s1') {\n            propfunction = this.state.dummymodules[7].coreModules;\n          } else if(item === 'y3s2') {\n            propfunction = this.state.dummymodules[8].coreModules;\n          } else if(item === 'y4s1') {\n            propfunction = this.state.dummymodules[9].coreModules;\n          } else if(item === 'y4s2') {\n            propfunction = this.state.dummymodules[10].coreModules;\n          }\n          else {\n            propfunction = this.state.dummymodules[0].GEMs[index][moduleCat]\n          }\n    \n       return propfunction.map((module) => {\n            const { code, name, MCs} = module\n            const desc = name.replace(/ /g, '-');\n            const link = `https://nusmods.com/modules/${code}/${desc}`\n            if(item === 'GEM') {\n              return (\n                <div>\n                    <tr key={code} data-toggle=\"tooltip\" \n                        title=\"Click row to select module, click on the module code for more information\"\n                        onClick={() => this.handleClick(code, name, MCs, moduleCat)}\n                        >\n                        <a href={link}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          className=\"text-decoration-none\">\n                        <td>{code}</td>\n                        </a>\n                        <td>{name}</td>\n                        <td>{MCs + 'MCs'}</td>\n                    </tr>\n                </div>\n            )\n            } else{\n            return (\n                <div>\n                    <tr key={code} >\n                    <a href={link} \n                               target=\"_blank\" \n                               rel=\"noopener noreferrer\"\n                               className=\"text-white text-decoration-none\">\n                        <td>{code}</td>\n                        <td>{name}</td>\n                        <td>{MCs + 'MCs'}</td>\n                        </a>\n                    </tr>\n                </div>\n            )}\n       })\n      }\n    }\n\n    render(){\n        return (\n            <div class=\"full-container\">\n<div className=\"row\">\n <h1 className=\"display-3 ml-4\">\n   Module Information\n </h1>\n</div>\n\n{/* <div className=\"row text-left ml-4\"> \n <ModuleList onFacultyChange={this.changeFaculty}\n          onMajorChange={this.changeMajor}\n          onSpecialisationChange={this.changeSpecialisation}\n          onResidenceChange={this.changeResidence}\n          facultyOptions={this.generateOptions('faculty')}\n          majorOptions={this.generateOptions('major')}\n          specialisationOptions={this.generateOptions('specialisation')}\n          residenceOptions={this.generateOptions('residence')}\n          username=\"abc\" //need to change\n          major={this.state.major}\n          specialisation={this.state.specialisation}\n          residence={this.state.residence}\n          receiveModuleRules={this.receiveModuleRules}\n          />\n</div> */}\n\n<div className=\"row\"> \n\n <div className=\"col-lg col-md-4 col-sm-6\">\n <Table\n       title=\"Year 1 Semester 1\"\n       module={this.makeTable('y1s1')} />\n </div>\n\n <div className=\"col-lg col-md-4 col-sm-6\">\n <Table\n       title=\"Year 1 Semester 2\"\n       module={this.makeTable('y1s2')} />\n </div>\n\n <div className=\"col-lg col-md-4 col-sm-6\">\n <Table\n       title=\"Year 2 Semester 1\"\n       module={this.makeTable('y2s1')} />\n </div>\n\n <div className=\"col-lg col-md-4 col-sm-6\">\n <Table\n       title=\"Year 2 Semester 2\"\n       module={this.makeTable('y2s2')} />\n </div>\n\n </div>\n\n\n <div className=\"row\"> \n <div className=\"col-lg col-md-4 col-sm-6\">\n <Table\n       title=\"Year 3 Semester 1\"\n       module={this.makeTable('y3s1')} />\n </div>\n\n <div className=\"col-lg col-md-4 col-sm-6\">\n <Table\n       title=\"Year 3 Semester 2\"\n       module={this.makeTable('y3s2')} />\n </div>\n\n\n  \n <div className=\"col-lg col-md-4 col-sm-6\">\n <Table\n       title=\"Year 4 Semester 1\"\n       module={this.makeTable('y4s1')} />\n </div>\n\n <div className=\"col-lg col-md-4 col-sm-6\">\n <Table\n       title=\"Year 4 Semester 2\"\n       module={this.makeTable('y4s2')} />\n </div>\n \n </div>\n </div>\n\n\n\n /* <div className=\"col-lg col-md-4 col-sm-6\">\n     <Table\n       title=\"Core Modules\"\n       module={this.makeTable('coreModule')} />\n </div>\n\n <div className=\"col-lg col-md-4 col-sm-6\">\n   <Table \n     title=\"Specialisation Modules\"\n     module={this.makeTable('specialisation')} />\n </div>\n\n <div className=\"col-lg col-md-6 col-sm-6\">\n   <Table\n       title=\"Unrestricted Electives\"\n        module={this.makeTable('unrestricted')} />\n </div>\n\n\n <div className=\"col-lg col-md-6\">\n   <Table\n     title=\"Total Modular Credits\"\n     module={this.makeTable('summary')}\n     total={this.state.grandTotal}/>\n </div>\n\n</div> */\n\n// </div>\n\n\n\n/* <div className=\"row\"> \n\n <div className=\"col-lg col-md-4 col-sm-6\">\n     {this.generateDropDown()}\n </div>\n\n <div className=\"col-lg col-md-4 col-sm-6\">\n     <Table\n       title=\"Core Modules\"\n       module={this.makeTable('coreModule')} />\n </div>\n\n <div className=\"col-lg col-md-4 col-sm-6\">\n   <Table \n     title=\"Specialisation Modules\"\n     module={this.makeTable('specialisation')} />\n </div>\n\n <div className=\"col-lg col-md-6 col-sm-6\">\n   <Table\n       title=\"Unrestricted Electives\"\n        module={this.makeTable('unrestricted')} />\n </div>\n\n\n <div className=\"col-lg col-md-6\">\n   <Table\n     title=\"Total Modular Credits\"\n     module={this.makeTable('summary')}\n     total={this.state.grandTotal}/>\n </div>\n\n</div>\n\n</div> */\n\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}