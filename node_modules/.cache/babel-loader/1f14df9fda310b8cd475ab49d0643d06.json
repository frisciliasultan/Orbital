{"ast":null,"code":"var _jsxFileName = \"/Users/frisciliasultan/Documents/Orbitalhosting/src/Settings/HiddenOptions.js\";\nimport React, { useState } from \"react\";\nimport Options from \"./Options\";\nimport { Switch } from \"antd\";\n\nconst HiddenOptions = props => {\n  const [isOpen, setIsOpen] = useState(false);\n  return (\n    /*#__PURE__*/\n\n    /* <p onClick={() => setIsOpen(!isOpen)}>{props.title}</p> */\n\n    /* {console.log(props.optionList)}\n    {isOpen &&  */\n    React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Options, {\n      status: props.status,\n      label: props.label,\n      handleChange: props.handleChange,\n      name: props.name,\n      value: props.value,\n      optionList: props.optionList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      onChange: () => setIsOpen(!isOpen),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }\n    })))\n  );\n};\n\nexport default HiddenOptions;","map":{"version":3,"sources":["/Users/frisciliasultan/Documents/Orbitalhosting/src/Settings/HiddenOptions.js"],"names":["React","useState","Options","Switch","HiddenOptions","props","isOpen","setIsOpen","status","label","handleChange","name","value","optionList"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,MAAT,QAAuB,MAAvB;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC7B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,KAAD,CAApC;AAEA;AAAA;;AAEI;;AACA;;AAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,OAAD;AACI,MAAA,MAAM,EAAEI,KAAK,CAACG,MADlB;AAEI,MAAA,KAAK,EAAEH,KAAK,CAACI,KAFjB;AAGI,MAAA,YAAY,EAAEJ,KAAK,CAACK,YAHxB;AAII,MAAA,IAAI,EAAEL,KAAK,CAACM,IAJhB;AAKI,MAAA,KAAK,EAAEN,KAAK,CAACO,KALjB;AAMI,MAAA,UAAU,EAAEP,KAAK,CAACQ,UANtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,eASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAI,oBAAC,MAAD;AAAQ,MAAA,QAAQ,EAAE,MAAMN,SAAS,CAAC,CAACD,MAAF,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAJ,CATA;AALR;AAkBH,CArBD;;AAuBA,eAAeF,aAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Options from \"./Options\";\nimport { Switch } from \"antd\";\n\nconst HiddenOptions = (props) => {\n    const [isOpen, setIsOpen] = useState(false);\n\n    return (\n        \n        /* <p onClick={() => setIsOpen(!isOpen)}>{props.title}</p> */\n        /* {console.log(props.optionList)}\n        {isOpen &&  */\n            <div>\n            <Options\n                status={props.status}\n                label={props.label}\n                handleChange={props.handleChange}\n                name={props.name}\n                value={props.value}\n                optionList={props.optionList}/> \n\n            <td><Switch onChange={() => setIsOpen(!isOpen)}/></td>\n\n        </div>\n    )\n}\n\nexport default HiddenOptions;"]},"metadata":{},"sourceType":"module"}