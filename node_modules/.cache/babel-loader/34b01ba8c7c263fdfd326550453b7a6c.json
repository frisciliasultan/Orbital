{"ast":null,"code":"var _jsxFileName = \"/Users/frisciliasultan/Documents/Orbitalhosting/src/utils/commonFunctions.js\";\nimport React from \"react\";\nimport { Select } from \"antd\";\nimport { TableContent } from \"../Pages/Module Selection Page/Table Content\";\nimport YearDisplay from \"../Pages/Module Planner Page/YearDisplay\";\nimport isEmpty from \"is-empty\";\nconst {\n  Option\n} = Select;\nexport const generateOptions = (optionList, category, object) => {\n  if (!isEmpty(optionList)) {\n    if (category === \"grade\") {\n      return optionList.map(option => {\n        return /*#__PURE__*/React.createElement(Option, {\n          value: option.grade,\n          object: object,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 21\n          }\n        }, option.grade);\n      }); //DO NOT DELETE CATEGORY. Need diff category names for saving input\n    } else if (category === 'major' || category === \"secondMajors\" || category === \"minors\" || category === \"residence\") {\n      return optionList.map((option, index) => {\n        if (option) {\n          if (!isEmpty(option.options)) {\n            return /*#__PURE__*/React.createElement(Option, {\n              key: option.fullName,\n              value: option.fullName,\n              name: category,\n              tag: option.tag,\n              honours: option.options.honours,\n              specialisation: option.options.specialisation,\n              selectedindex: index,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 33\n              }\n            }, option.name);\n          } else {\n            return /*#__PURE__*/React.createElement(Option, {\n              key: option.fullName,\n              value: option.fullName,\n              name: category,\n              tag: option.tag,\n              selectedindex: index,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 33\n              }\n            }, option.name);\n          }\n        }\n      });\n    } else if (category === 'matriculationYear') {\n      return optionList.map(option => {\n        return /*#__PURE__*/React.createElement(Option, {\n          key: option.substr(3, 9),\n          value: option.substr(3, 9),\n          name: category,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 21\n          }\n        }, option);\n      });\n    } else if (category === 'targetGradYear') {\n      return optionList.map(option => {\n        return /*#__PURE__*/React.createElement(Option, {\n          key: option.substr(6, 9),\n          value: option.substr(6, 9),\n          name: category,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 21\n          }\n        }, option);\n      });\n    }\n\n    return optionList.map((option, i) => {\n      return /*#__PURE__*/React.createElement(Option, {\n        key: option,\n        value: option,\n        name: category,\n        index: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }\n      }, option);\n    });\n  }\n};\nexport const handleSaveClick = props => {\n  const userData = {\n    name: props.auth.user.name,\n    email: props.auth.user.email,\n    modPlan: props.modplan.selectedModules,\n    residential: props.settings.userInfo.residential,\n    major: props.settings.userInfo.major,\n    majorIndex: props.settings.userInfo.majorIndex,\n    specialisation: props.settings.userInfo.specialisation,\n    secondMajors: props.settings.userInfo.secondMajors,\n    minors: props.settings.userInfo.minors,\n    matriculationYear: props.settings.userInfo.matriculationYear,\n    targetGradYear: props.settings.userInfo.targetGradYear,\n    cap: props.cap.cap,\n    targetCap: props.cap.targetCap\n  };\n  props.updateSettings(userData);\n}; // generate Year Cards in Module Planner Page / Tables in Mod Info Page\n\nexport const generateObject = (matriYear, gradYear, category, module, props) => {\n  if (matriYear && gradYear) {\n    const matYear = Number(matriYear.substr(0, 4));\n    const noOfYear = Number(gradYear.substr(5, 4)) - matYear;\n    let display = [];\n\n    if (category === \"yearDisplay\") {\n      for (let i = 1; i <= noOfYear; i++) {\n        const start = matYear + i - 1;\n        display.push({\n          year: `Year ${i}`,\n          AY: `${start}/${start + 1}`\n        });\n      }\n\n      return display.map(object => {\n        return /*#__PURE__*/React.createElement(YearDisplay, {\n          year: object.year,\n          AY: object.AY,\n          module: module,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }\n        });\n      });\n    } else {\n      let sem1;\n      let sem2;\n\n      for (let i = 1; i < noOfYear * 2; i += 2) {\n        const year = Math.ceil(i / 2);\n        sem1 = `Year ${year} Semester 1`;\n        sem2 = `Year ${year} Semester 2`;\n        display[i - 1] = sem1;\n        display[i] = sem2;\n      }\n\n      if (category === \"semesterOptions\") {\n        return display;\n      } else if (category === \"tables\") {\n        let nthFutureSem = 0;\n        return display.map((sem, i) => {\n          if (props) {\n            if (props.userSemester) {\n              const status = checkIsPast(sem, props.userSemester, props.currentSemester, props.month);\n              const nextStatus = status ? checkIsPast(display[i + 1], props.userSemester, props.currentSemester, props.month) : null;\n\n              if (!status) {\n                nthFutureSem++;\n              } // if(i === (display.length - 1) || (status && !nextStatus)) {\n              //     isLastinCategory = true;\n              // }\n\n\n              return /*#__PURE__*/React.createElement(TableContent, {\n                title: sem,\n                module: module,\n                category: \"capTable\",\n                handleGradeClick: props.handleGradeClick,\n                handleCheckboxChange: props.handleCheckboxChange,\n                isPast: status,\n                displayHeader: i === 0 || nthFutureSem === 1,\n                lastInCategory: i === display.length - 1 || status && !nextStatus,\n                gradeList: props.gradeList,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 33\n                }\n              });\n            } else {\n              return null;\n            }\n          } else {\n            return /*#__PURE__*/React.createElement(TableContent, {\n              title: sem,\n              module: module,\n              category: category,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 29\n              }\n            });\n          }\n        });\n      }\n    }\n  }\n}; //Eg. Y2S1 => 3 (third sem)\n\nexport const convertSemToNumber = sem => {\n  if (sem.substr(7) === \"Semester 1\") {\n    return sem.substr(5, 1) * 2 - 1;\n  } else {\n    return sem.substr(5, 1) * 2;\n  }\n}; //check if the semester chosen is in the past or future\n\nexport const checkIsPast = (curr, user, currentSemester, month) => {\n  const currSem = convertSemToNumber(curr);\n\n  if (user > currSem) {\n    return true;\n  } else if (user === currSem) {\n    if (currentSemester === \"Semester 1\" && month === 12 || currentSemester === \"Semester 2\" && month >= 6) {\n      return true;\n    }\n  } else {\n    return false;\n  }\n}; //Check if there is any part of userData that is undefined/falsy\n\nconst checkSubmission = userData => {\n  const keys = Object.keys(userData);\n  let status;\n\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    status = userData[key] || userData[key] === 0 ? true : false;\n\n    if (!status) {\n      return status = false;\n    }\n  }\n\n  return status;\n};","map":{"version":3,"sources":["/Users/frisciliasultan/Documents/Orbitalhosting/src/utils/commonFunctions.js"],"names":["React","Select","TableContent","YearDisplay","isEmpty","Option","generateOptions","optionList","category","object","map","option","grade","index","options","fullName","tag","honours","specialisation","name","substr","i","handleSaveClick","props","userData","auth","user","email","modPlan","modplan","selectedModules","residential","settings","userInfo","major","majorIndex","secondMajors","minors","matriculationYear","targetGradYear","cap","targetCap","updateSettings","generateObject","matriYear","gradYear","module","matYear","Number","noOfYear","display","start","push","year","AY","sem1","sem2","Math","ceil","nthFutureSem","sem","userSemester","status","checkIsPast","currentSemester","month","nextStatus","handleGradeClick","handleCheckboxChange","length","gradeList","convertSemToNumber","curr","currSem","checkSubmission","keys","Object","key"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Select } from \"antd\";\nimport { TableContent } from \"../Pages/Module Selection Page/Table Content\";\nimport  YearDisplay  from \"../Pages/Module Planner Page/YearDisplay\";\nimport isEmpty from \"is-empty\";\n\nconst { Option } = Select;\n\nexport const generateOptions = (optionList, category, object) => {\n    if(!isEmpty(optionList)) {\n        if(category === \"grade\") {\n            return optionList.map((option) => {\n                return (\n                    <Option value={option.grade} object={object}>\n                    {option.grade}\n                    </Option>\n                );\n            })\n\n        //DO NOT DELETE CATEGORY. Need diff category names for saving input\n        } else if (category === 'major' || category === \"secondMajors\" || category === \"minors\" \n                        || category === \"residence\" \n                        ) {\n            return optionList.map((option, index) => {\n                    if(option) {\n                        if(!isEmpty(option.options)) {\n                            return (\n                                <Option \n                                    key={option.fullName} \n                                    value={option.fullName}\n                                    name={category}\n                                    tag={option.tag}\n                                    honours={option.options.honours}\n                                    specialisation={option.options.specialisation}\n                                    selectedindex={index}>\n                                    {option.name}\n                                </Option>\n                            );\n                        } else {\n                            \n                            return (\n                                <Option \n                                    key={option.fullName} \n                                    value={option.fullName}\n                                    name={category}\n                                    tag={option.tag}\n                                    selectedindex={index}>\n                                    {option.name}\n                                </Option>\n                            );\n                        }\n                    }\n            })\n        } else if (category === 'matriculationYear') {\n            return optionList.map((option) => {\n                return (\n                    <Option \n                        key={option.substr(3,9)} \n                        value={option.substr(3,9)}\n                        name={category}>\n                    {option}\n                    </Option>\n                );\n            })\n        } else if (category === 'targetGradYear') {\n            return optionList.map((option) => {\n                return (\n                    <Option \n                        key={option.substr(6,9)} \n                        value={option.substr(6,9)}\n                        name={category}>\n                    {option}\n                    </Option>\n                );\n            })\n        } \n    \n        return optionList.map((option, i) => {\n            return (\n                <Option key={option} value={option} name={category} index={i}>\n                {option}\n                </Option>\n            );\n        });\n    }\n}\n\nexport const handleSaveClick = (props) => {\n    const userData = {\n        name: props.auth.user.name,\n        email: props.auth.user.email,\n        modPlan: props.modplan.selectedModules,\n        residential: props.settings.userInfo.residential,\n        major: props.settings.userInfo.major,\n        majorIndex: props.settings.userInfo.majorIndex,\n        specialisation: props.settings.userInfo.specialisation,\n        secondMajors: props.settings.userInfo.secondMajors,\n        minors: props.settings.userInfo.minors,\n        matriculationYear: props.settings.userInfo.matriculationYear,\n        targetGradYear: props.settings.userInfo.targetGradYear,\n        cap: props.cap.cap,\n        targetCap: props.cap.targetCap\n    }\n\n    props.updateSettings(userData);\n}\n\n// generate Year Cards in Module Planner Page / Tables in Mod Info Page\nexport const generateObject = (matriYear, gradYear, category, module, props) => {\n\n    if(matriYear && gradYear) {\n        const matYear = Number(matriYear.substr(0, 4));\n        const noOfYear = Number(gradYear.substr(5, 4)) - matYear;\n        let display = [];\n\n        if(category === \"yearDisplay\") {\n            for(let i = 1; i <= noOfYear; i++) {\n                const start = matYear + i - 1;\n                display.push({\n                    year: `Year ${i}`,\n                    AY: `${start}/${start + 1}`\n                })\n            }\n            \n            return display.map((object) => {\n                    return (\n                        <YearDisplay\n                            year={object.year}\n                            AY={object.AY}\n                            module={module} />\n                    )\n                })\n        } else {\n            let sem1;\n            let sem2;\n\n            for(let i = 1; i < (noOfYear * 2); i += 2) {\n                const year = Math.ceil(i / 2);\n                sem1 = `Year ${year} Semester 1`;\n                sem2 = `Year ${year} Semester 2`;\n                display[i - 1] = sem1;\n                display[i] = sem2;\n            }\n            \n            if(category === \"semesterOptions\") {\n                return display;\n            } else if(category === \"tables\") {\n                let nthFutureSem = 0;\n               \n                return display.map((sem, i) => {\n                    if(props) {\n                        if(props.userSemester) {\n                            const status = checkIsPast(sem, props.userSemester, props.currentSemester, props.month);\n                            const nextStatus = status \n                                            ? checkIsPast(display[i + 1], props.userSemester, props.currentSemester, props.month)\n                                            : null;\n                            if(!status) {\n                                nthFutureSem++\n                            }\n                            // if(i === (display.length - 1) || (status && !nextStatus)) {\n                            //     isLastinCategory = true;\n                            // }\n        \n                            return (\n                                <TableContent\n                                    title={sem}\n                                    module={module}\n                                    category={\"capTable\"}\n                                    handleGradeClick={props.handleGradeClick}\n                                    handleCheckboxChange={props.handleCheckboxChange}\n                                    isPast={status}\n                                    displayHeader={ i === 0 || nthFutureSem === 1}\n                                    lastInCategory={i === (display.length - 1) || (status && !nextStatus)}\n                                    gradeList={props.gradeList}/>\n                            )\n                        } else {\n                            return null;\n                        }\n                    } else {\n                        return (\n                            <TableContent\n                                title={sem}\n                                module={module}\n                                category={category}/>\n                        )\n                    }\n                })\n            } \n        }\n    }\n} \n\n     //Eg. Y2S1 => 3 (third sem)\n    export const convertSemToNumber = (sem) => {\n        if(sem.substr(7) === \"Semester 1\") {\n            return sem.substr(5,1) * 2 - 1;\n        } else {\n            return sem.substr(5,1) * 2;\n        }\n    }\n\n    //check if the semester chosen is in the past or future\n    export const checkIsPast = (curr, user, currentSemester, month) => {\n        \n        const currSem = convertSemToNumber(curr);\n        if (user > currSem) {\n            return true;\n        } else if (user === currSem) {\n            if ((currentSemester === \"Semester 1\" && month === 12) \n                || (currentSemester === \"Semester 2\" && month >= 6)) {\n                    return true;\n            }\n        } else {\n            return false;\n        }\n    };\n\n\n  //Check if there is any part of userData that is undefined/falsy\n  const checkSubmission = (userData) => {\n    const keys = Object.keys(userData);\n    let status;\n\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      status = (userData[key] || userData[key] === 0) ? true : false;\n     \n      if(!status) {\n        return status = false;\n      }\n    }\n\n    return status;\n  }"]},"metadata":{},"sourceType":"module"}