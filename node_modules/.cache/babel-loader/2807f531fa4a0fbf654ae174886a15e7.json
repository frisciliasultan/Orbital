{"ast":null,"code":"var _jsxFileName = \"/Users/frisciliasultan/Documents/Orbitalhosting/src/Settings/DegreeSettings.js\";\nimport React, { useState } from \"react\";\nimport Options from \"./Options\";\nimport isEmpty from \"is-empty\";\nimport { Card } from \"react-bootstrap\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\"; // import { handleSaveClick } from \"\"\n\nconst DegreeSettings = props => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [addDegree, setAddDegree] = useState(false);\n\n  const presentButton = () => {\n    if (!props.settings.editAll) {\n      if (!isEditing) {\n        return /*#__PURE__*/React.createElement(\"button\", {\n          className: \"button settings-button\",\n          onClick: () => setIsEditing(true),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 20\n          }\n        }, \"Edit Settings\");\n      } else {\n        return /*#__PURE__*/React.createElement(\"button\", {\n          className: \"button settings-button\",\n          onClick: () => {\n            props.handleSubmit();\n            setIsEditing(false);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 20\n          }\n        }, \"Save Settings\");\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"container\",\n    id: \"degree-settings\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"card-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, \"Degree Settings\"), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table settings-table table-hover \",\n    id: \"degree-acad-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Options, {\n    status: props.status,\n    editing: isEditing || props.settings.editAll,\n    label: \"Degree\",\n    handleChange: props.handleChange,\n    name: \"major\",\n    value: props.userInput.major,\n    optionList: !isEmpty(props.settings.bachelorOptions) ? props.settings.bachelorOptions : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Options, {\n    status: props.status,\n    editing: isEditing || props.settings.editAll,\n    hidden: true,\n    title: \"Add Specialisation\",\n    label: \"Specialisation\",\n    handleChange: props.handleChange,\n    name: \"specialisation\",\n    value: props.userInput.specialisation,\n    optionList: !isEmpty(props.settings.bachelorOptions) ? props.settings.bachelorOptions : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Options, {\n    status: props.status,\n    editing: isEditing || props.settings.editAll,\n    hidden: true,\n    category: \"secondMajor\",\n    label: \"Second Major\",\n    handleChange: props.handleChange,\n    name: \"secondMajor\",\n    value: props.userInput.secondMajor,\n    setUserInput: props.setUserInput,\n    optionList: !isEmpty(props.settings.secondMajorOptions) ? props.settings.secondMajorOptions : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Options, {\n    status: props.status,\n    editing: isEditing || props.settings.editAll,\n    hidden: true,\n    category: \"minor\",\n    label: \"Minor : \",\n    handleChange: props.handleChange,\n    name: \"minor\",\n    value: props.userInput.minor,\n    setUserInput: props.setUserInput,\n    optionList: !isEmpty(props.settings.minorOptions) ? props.settings.minorOptions : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }))), presentButton()));\n};\n\nDegreeSettings.propType = {\n  settings: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  settings: state.settings\n});\n\nexport default connect(mapStateToProps)(DegreeSettings);","map":{"version":3,"sources":["/Users/frisciliasultan/Documents/Orbitalhosting/src/Settings/DegreeSettings.js"],"names":["React","useState","Options","isEmpty","Card","PropTypes","connect","DegreeSettings","props","isEditing","setIsEditing","addDegree","setAddDegree","presentButton","settings","editAll","handleSubmit","status","handleChange","userInput","major","bachelorOptions","specialisation","secondMajor","setUserInput","secondMajorOptions","minor","minorOptions","propType","object","isRequired","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Options from \"./Options\";\nimport isEmpty from \"is-empty\";\nimport { Card } from \"react-bootstrap\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n// import { handleSaveClick } from \"\"\n\nconst DegreeSettings = (props) => {\n    const [isEditing, setIsEditing] = useState(false);\n    const [addDegree, setAddDegree] = useState(false);\n\n    const presentButton = () => {\n        if(!props.settings.editAll) {\n          if(!isEditing) {\n            return <button \n              className=\"button settings-button\" \n              onClick={() => setIsEditing(true)}>\n                  Edit Settings\n            </button>\n          } else {\n            return <button \n              className=\"button settings-button\" \n              onClick={() => {\n                props.handleSubmit();\n                setIsEditing(false);}}>\n                Save Settings\n            </button>\n          }\n        }\n      }\n\n    return (\n        <div>\n        <Card className=\"container\" id=\"degree-settings\">\n            <h2 className=\"card-header\">Degree Settings</h2>\n\n            <table className=\"table settings-table table-hover \" id=\"degree-acad-table\">\n            <tbody>\n                {/* <Options\n                    status={props.status}\n                    editing={isEditing || props.settings.editAll}\n                    label={props.status === \"first\" ? \"Faculty : \" : `${props.status} Faculty : `}\n                    handleChange={props.handleChange}\n                    name={\"faculty\"}\n                    value={props.userInput.faculty}\n                    optionList={props.settings.facultyOptions}/> */}\n\n                <Options\n                    status={props.status}\n                    editing={isEditing || props.settings.editAll}\n                    label=\"Degree\"\n                    handleChange={props.handleChange}\n                    name=\"major\"\n                    value={props.userInput.major}\n                    optionList={!isEmpty(props.settings.bachelorOptions)\n                        ? props.settings.bachelorOptions\n                            : null}/>\n\n                <Options \n                    status={props.status}\n                    editing={isEditing || props.settings.editAll}\n                    hidden={true}\n                    title=\"Add Specialisation\"\n                    label=\"Specialisation\"\n                    handleChange={props.handleChange}\n                    name=\"specialisation\"\n                    value={props.userInput.specialisation}\n                    optionList={!isEmpty(props.settings.bachelorOptions)\n                        ?  props.settings.bachelorOptions\n                        : null}/>\n\n                <Options \n                    status={props.status}\n                    editing={isEditing || props.settings.editAll}\n                    hidden={true}\n                    category=\"secondMajor\"\n                    label=\"Second Major\"\n                    handleChange={props.handleChange}\n                    name=\"secondMajor\"\n                    value={props.userInput.secondMajor}\n                    setUserInput={props.setUserInput}\n                    optionList={!isEmpty(props.settings.secondMajorOptions) \n                        ? props.settings.secondMajorOptions\n                        : null}/>\n                \n                <Options \n                    status={props.status}\n                    editing={isEditing || props.settings.editAll}\n                    hidden={true}\n                    category=\"minor\"\n                    label=\"Minor : \"\n                    handleChange={props.handleChange}\n                    name=\"minor\"\n                    value={props.userInput.minor}\n                    setUserInput={props.setUserInput}\n                    optionList={(!isEmpty(props.settings.minorOptions)) \n                        ? props.settings.minorOptions\n                        : null}/>\n\n            </tbody>\n        </table>\n        \n        {presentButton()}\n        </Card>\n    </div>)\n}\n\n\nDegreeSettings.propType = {\n    settings: PropTypes.object.isRequired\n}\n\n\nconst mapStateToProps = state => ({\n    settings: state.settings\n})\n\nexport default connect(mapStateToProps) (DegreeSettings);"]},"metadata":{},"sourceType":"module"}