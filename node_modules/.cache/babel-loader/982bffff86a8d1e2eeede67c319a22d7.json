{"ast":null,"code":"var _jsxFileName = \"/Users/frisciliasultan/Documents/Orbital/client/src/Pages/Module Planner Page/Subrules.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { Card, Spinner } from \"react-bootstrap\";\n\nfunction Subrules(props) {\n  const [isLoading, setIsLoading] = useState(false);\n  const [isRuleFulfilled, setIsRuleFulfilled] = useState();\n  const [isBackendCalled, setIsBackendCalled] = useState();\n  const modules = props.selectedModules ? props.selectedModules.map(object => object.moduleCode) : null;\n  useEffect(() => {\n    const callBackendFunc = async ruleTag => {\n      try {\n        const link = \"http://172.31.21.121:3000/eval/\" + props.ruleTag;\n        const requestOptions = {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'accept': 'application/json'\n          },\n          body: JSON.stringify({\n            modules: modules\n          })\n        };\n        setIsLoading(true);\n        const response = await fetch(link, requestOptions); //const status = await response.json();\n\n        const status = await response.text();\n\n        if (!response.ok) {\n          throw new Error(\"An error has occurred\");\n        } else {\n          setIsRuleFulfilled(status);\n          setIsLoading(false);\n          console.log(status);\n          setIsBackendCalled(true); //alert('success');\n        }\n      } catch (error) {\n        setIsLoading(false);\n        console.error('There was an error!', error);\n      }\n\n      ;\n    };\n\n    if (props.callBackendNow) {\n      callBackendFunc(props.ruleTag);\n    }\n  }, [props.callBackendNow]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card.Title, {\n    style: {\n      color: isRuleFulfilled ? 'green' : 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, props.ruleName), isLoading && /*#__PURE__*/React.createElement(Spinner, {\n    animation: \"border\",\n    variant: \"success\",\n    role: \"status\",\n    as: \"span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sr-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, \"Loading...\")));\n}\n\nexport default Subrules;","map":{"version":3,"sources":["/Users/frisciliasultan/Documents/Orbital/client/src/Pages/Module Planner Page/Subrules.jsx"],"names":["React","useState","useEffect","Card","Spinner","Subrules","props","isLoading","setIsLoading","isRuleFulfilled","setIsRuleFulfilled","isBackendCalled","setIsBackendCalled","modules","selectedModules","map","object","moduleCode","callBackendFunc","ruleTag","link","requestOptions","method","headers","body","JSON","stringify","response","fetch","status","text","ok","Error","console","log","error","callBackendNow","color","ruleName"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,OAAf,QAA8B,iBAA9B;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACrB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACQ,eAAD,EAAkBC,kBAAlB,IAAwCT,QAAQ,EAAtD;AACA,QAAM,CAACU,eAAD,EAAkBC,kBAAlB,IAAwCX,QAAQ,EAAtD;AACA,QAAMY,OAAO,GAAGP,KAAK,CAACQ,eAAN,GAAwBR,KAAK,CAACQ,eAAN,CAAsBC,GAAtB,CAA2BC,MAAD,IAAYA,MAAM,CAACC,UAA7C,CAAxB,GAAmF,IAAnG;AAEAf,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMgB,eAAe,GAAG,MAAOC,OAAP,IAAmB;AACvC,UAAG;AACC,cAAMC,IAAI,GAAG,oCAAoCd,KAAK,CAACa,OAAvD;AACA,cAAME,cAAc,GAAG;AACnBC,UAAAA,MAAM,EAAE,MADW;AAEnBC,UAAAA,OAAO,EAAE;AAAE,4BAAgB,kBAAlB;AACG,sBAAU;AADb,WAFU;AAKnBC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACEb,YAAAA,OAAO,EAAEA;AADX,WAAf;AALa,SAAvB;AASAL,QAAAA,YAAY,CAAC,IAAD,CAAZ;AAGA,cAAMmB,QAAQ,GAAG,MAAMC,KAAK,CAACR,IAAD,EAAOC,cAAP,CAA5B,CAdD,CAeC;;AACA,cAAMQ,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAArB;;AAEA,YAAG,CAACH,QAAQ,CAACI,EAAb,EAAiB;AACb,gBAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;AACH,SAFD,MAEM;AACFtB,UAAAA,kBAAkB,CAACmB,MAAD,CAAlB;AACArB,UAAAA,YAAY,CAAC,KAAD,CAAZ;AACAyB,UAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ;AACAjB,UAAAA,kBAAkB,CAAC,IAAD,CAAlB,CAJE,CAKF;AACH;AAEJ,OA5BD,CA4BE,OAAMuB,KAAN,EAAa;AACD3B,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAyB,QAAAA,OAAO,CAACE,KAAR,CAAc,qBAAd,EAAqCA,KAArC;AACH;;AAAA;AACd,KAjCD;;AAmCA,QAAG7B,KAAK,CAAC8B,cAAT,EAAyB;AACrBlB,MAAAA,eAAe,CAACZ,KAAK,CAACa,OAAP,CAAf;AACH;AAEJ,GAxCQ,EAwCN,CAACb,KAAK,CAAC8B,cAAP,CAxCM,CAAT;AA4CA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,KAAN;AACY,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAE5B,eAAe,GAAG,OAAH,GAAa;AAApC,KADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACgEH,KAAK,CAACgC,QADtE,CADJ,EAGK/B,SAAS,iBAAI,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAC,QAAnB;AAA4B,IAAA,OAAO,EAAC,SAApC;AAA8C,IAAA,IAAI,EAAC,QAAnD;AAA4D,IAAA,EAAE,EAAC,MAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACV;AAAM,IAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADU,CAHlB,CADJ;AAUH;;AAED,eAAeF,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Card, Spinner } from \"react-bootstrap\";\n\nfunction Subrules(props) {\n    const [isLoading, setIsLoading] = useState(false);\n    const [isRuleFulfilled, setIsRuleFulfilled] = useState();\n    const [isBackendCalled, setIsBackendCalled] = useState();\n    const modules = props.selectedModules ? props.selectedModules.map((object) => object.moduleCode) : null;\n\n    useEffect(() => {\n        const callBackendFunc = async (ruleTag) => {\n            try{\n                const link = \"http://172.31.21.121:3000/eval/\" + props.ruleTag;\n                const requestOptions = {\n                    method: 'POST',\n                    headers: { 'Content-Type': 'application/json',\n                                'accept': 'application/json'            \n                    },\n                    body: JSON.stringify({\n                                           modules: modules\n                                        })\n                };\n                setIsLoading(true);\n                \n                \n                const response = await fetch(link, requestOptions);\n                //const status = await response.json();\n                const status = await response.text();\n\n                if(!response.ok) {\n                    throw new Error(\"An error has occurred\")\n                } else{\n                    setIsRuleFulfilled(status);\n                    setIsLoading(false);\n                    console.log(status);\n                    setIsBackendCalled(true);\n                    //alert('success');\n                }\n\n            } catch(error) {\n                          setIsLoading(false);\n                          console.error('There was an error!', error);\n                      };\n        };\n\n        if(props.callBackendNow) {\n            callBackendFunc(props.ruleTag);\n        }\n        \n    }, [props.callBackendNow]);\n\n    \n\n    return (    \n        <div>\n            <Card.Title \n                        style={{color: isRuleFulfilled ? 'green' : 'red'}}>{props.ruleName}</Card.Title>\n            {isLoading && <Spinner animation=\"border\" variant=\"success\" role=\"status\" as=\"span\">\n                <span className=\"sr-only\">Loading...</span>\n            </Spinner>}\n        </div>\n    )\n\n}\n\nexport default Subrules;"]},"metadata":{},"sourceType":"module"}