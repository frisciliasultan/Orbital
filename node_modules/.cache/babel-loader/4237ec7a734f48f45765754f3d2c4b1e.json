{"ast":null,"code":"var _jsxFileName = \"/Users/frisciliasultan/Documents/Orbitalhosting/src/Settings/Options.js\";\nimport React, { useState } from \"react\";\nimport AutoCompleteText from \"../Pages/Module Planner Page/AutocompleteText\";\nimport { generateOptions } from \"../utils/commonFunctions\";\nimport isEmpty from \"is-empty\";\nimport { Switch, Select } from \"antd\";\nimport DynamicFieldSet from \"./DynamicFieldSet\";\n\nconst Options = props => {\n  const [isOpen, setIsOpen] = useState(props.value ? true : false);\n  const {\n    Option\n  } = Select;\n\n  function onChange(value, name, label) {\n    console.log(`selected ${value}`);\n    console.log(value);\n    console.log(label);\n  }\n\n  function onBlur() {\n    console.log('blur');\n  }\n\n  function onFocus() {\n    console.log('focus');\n  }\n\n  function onSearch(val) {\n    console.log('search:', val);\n  }\n\n  const renderContent = () => {\n    if (props.editing) {\n      if (!props.hidden || isOpen && !props.category) {\n        return /*#__PURE__*/React.createElement(Select, {\n          showSearch: true,\n          name: props.name,\n          labelInValue: true // onChange={props.handleChange}\n          ,\n          defaultValue: \"None\",\n          value: props.value,\n          style: {\n            width: 300\n          },\n          optionFilterProp: \"from\",\n          onChange: onChange,\n          onFocus: onFocus,\n          onSearch: onSearch,\n          filterOption: (input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Option, {\n          key: \"choose\" + props.label,\n          value: \"None\",\n          disabled: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }\n        }, \"Choose \" + props.label), generateOptions(props.optionList, props.name));\n      } else if (isOpen && props.category) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(DynamicFieldSet, {\n          setUserInput: props.setUserInput,\n          options: props.optionList,\n          name: props.category,\n          value: props.value,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }\n        }));\n      } else {\n        return props.value ? props.value : \"None\";\n      }\n    } else {\n      return props.value ? props.value : \"None\";\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, props.label)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, renderContent()), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, props.hidden && props.editing ? /*#__PURE__*/React.createElement(Switch, {\n    checked: isOpen,\n    onChange: () => setIsOpen(!isOpen),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 27\n    }\n  }) : null));\n};\n\nexport default Options;","map":{"version":3,"sources":["/Users/frisciliasultan/Documents/Orbitalhosting/src/Settings/Options.js"],"names":["React","useState","AutoCompleteText","generateOptions","isEmpty","Switch","Select","DynamicFieldSet","Options","props","isOpen","setIsOpen","value","Option","onChange","name","label","console","log","onBlur","onFocus","onSearch","val","renderContent","editing","hidden","category","width","input","option","children","toLowerCase","indexOf","optionList","setUserInput"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport AutoCompleteText from \"../Pages/Module Planner Page/AutocompleteText\";\nimport { generateOptions } from \"../utils/commonFunctions\";\nimport isEmpty from \"is-empty\";\nimport { Switch, Select } from \"antd\";\nimport DynamicFieldSet from \"./DynamicFieldSet\";\n\nconst Options = (props) => {\n    const [isOpen, setIsOpen] = useState(props.value ? true : false);\n\n\n    const { Option } = Select;\n\nfunction onChange(value, name, label) {\n  console.log(`selected ${value}`);\n  console.log(value)\n  console.log(label)\n}\n\nfunction onBlur() {\n  console.log('blur');\n}\n\nfunction onFocus() {\n  console.log('focus');\n}\n\nfunction onSearch(val) {\n  console.log('search:', val);\n}\n\n    const renderContent = () => {\n        if(props.editing) {\n            if(!props.hidden || (isOpen && !props.category )) {\n                return (\n                    <Select\n                        showSearch\n                        name={props.name}\n                        labelInValue\n                        // onChange={props.handleChange}\n                        defaultValue=\"None\"\n                        value={props.value}\n                        style={{ width: 300 }}\n                        optionFilterProp=\"from\"\n                        onChange={onChange}\n                        onFocus={onFocus}\n                        onSearch={onSearch}\n                        filterOption={(input, option) =>\n                        option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                        }\n                    >\n                        <Option \n                            key={\"choose\" + props.label}\n                            value=\"None\" \n                             disabled>\n                            {\"Choose \" + props.label}\n                        </Option>\n                        {generateOptions(props.optionList, props.name)}\n                    </Select> ) \n            } else if (isOpen && props.category) {\n                return (\n                    <div>\n                    {/* <p>{props.value}</p> */}\n                    <DynamicFieldSet\n                        setUserInput={props.setUserInput}\n                        options={props.optionList}\n                        name={props.category}\n                        value={props.value}/>\n                    </div>\n                )\n            } else {\n                return props.value ? props.value : \"None\";\n            }\n        } else {\n            return props.value ? props.value : \"None\";\n        }\n    }\n    return (\n            <tr>\n                <td>\n                    <label>{props.label}</label>\n                </td>\n\n                <td>\n                    {renderContent()}\n                </td>\n\n                <td>\n                    {props.hidden && props.editing\n                        ? <Switch  \n                            checked={isOpen} \n                            onChange={() => setIsOpen(!isOpen)}/>\n                        : null}\n                </td>\n            </tr>\n    )        \n}\n\nexport default Options;"]},"metadata":{},"sourceType":"module"}