{"ast":null,"code":"var _jsxFileName = \"/Users/frisciliasultan/Documents/Orbital/client/src/Settings/AcadSettings.jsx\";\nimport React, { useState, useEffect, useReducer } from 'react';\nimport { Options } from '../Pages/Module Selection Page/ModuleList';\nimport { Link } from 'react-router-dom';\nimport axios from \"axios\";\nimport { Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport PropTypes from \"prop-types\";\nimport { updateSettings, setMatriculationYearOptions, setTargetGradYearOptions } from \"../actions/settingsActions\";\nimport { deleteUser } from \"../actions/authActions\";\nimport { removeSuccess } from \"../actions/successActions\";\nimport isEmpty from \"is-empty\";\nimport { generateOptions } from '../utils/commonFunctions';\n\nconst AcadSettings = props => {\n  const [userInput, setUserInput] = useReducer((state, newState) => ({ ...state,\n    ...newState\n  }), {\n    faculty: props.userInfo.faculty,\n    facIndex: props.userInfo.facIndex,\n    major: props.userInfo.major,\n    majorIndex: props.userInfo.majorIndex,\n    specialisation: props.userInfo.specialisation,\n    residence: props.userInfo.residential,\n    matriculationYear: props.userInfo.matriculationYear,\n    targetGradYear: props.userInfo.targetGradYear\n  });\n  console.log(userInput.facIndex);\n  const residenceOptions = ['N/A', 'CAPT', 'RC4', 'RVRC', 'Tembusu', 'USP'];\n  const dummyfac = [{\n    'Business': [{\n      'Business Administration': ['A', 'B']\n    }, {\n      'Accountancy': ['C', 'D']\n    }]\n  }, {\n    'FASS': [{\n      'C': ['N/A']\n    }, {\n      'D': ['N/A']\n    }]\n  }, {\n    'Computing': [{\n      'Computer Science': ['N/A']\n    }, {\n      'Business Analytics': ['N/A']\n    }]\n  }];\n  useEffect(() => {\n    if (props.settings.currentAY && isEmpty(props.settings.matriculationOptions)) {\n      props.setMatriculationYearOptions(props.settings.currentAY, props.settings.currentSemester);\n      props.setTargetGradYearOptions(props.settings.currentAY, props.settings.currentSemester);\n    }\n  }, [props.settings.currentAY]);\n  useEffect(() => {\n    if (!isEmpty(props.settings.userInfo)) {\n      setUserInput({\n        faculty: props.userInfo.faculty,\n        facIndex: props.userInfo.facIndex,\n        major: props.userInfo.major,\n        majorIndex: props.userInfo.majorIndex,\n        specialisation: props.userInfo.specialisation,\n        residence: props.userInfo.residential,\n        matriculationYear: props.userInfo.matriculationYear,\n        targetGradYear: props.userInfo.targetGradYear\n      });\n    }\n  }, [props.settings.userInfo]);\n\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      selectedIndex\n    } = e.target;\n\n    if (name === \"faculty\") {\n      setUserInput({\n        [name]: value,\n        facIndex: selectedIndex - 1,\n        major: null\n      });\n    } else if (name === \"major\") {\n      setUserInput({\n        [name]: value,\n        majorIndex: selectedIndex - 1\n      });\n    } else {\n      setUserInput({\n        [name]: value\n      });\n    }\n\n    console.log(userInput.facIndex);\n  }; //turn array of choices into options dropdown\n\n\n  const generateOptions = choices => {\n    let facIndex = userInput.facIndex;\n\n    if (choices === 'faculty') {\n      return dummyfac.map(obj => {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          value: Object.keys(obj),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 7\n          }\n        }, Object.keys(obj));\n      });\n    } else if (choices === 'major') {\n      if (userInput.faculty) {\n        return dummyfac[facIndex][userInput.faculty].map(obj => {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            value: Object.keys(obj),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 23\n            }\n          }, Object.keys(obj));\n        });\n      }\n    } else if (choices === 'specialisation') {\n      if (userInput.major && userInput.faculty) {\n        return dummyfac[facIndex][userInput.faculty][userInput.majorIndex][userInput.major].map(item => {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 23\n            }\n          }, item);\n        });\n      }\n    } else if (choices === 'residence') {\n      return residenceOptions.map(obj => {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          value: obj,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 9\n          }\n        }, obj);\n      });\n    } else {\n      if (choices === 'matriculationYear') {\n        return props.settings.matriculationOptions.map(option => {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            value: option.substr(3, 9),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 13\n            }\n          }, option);\n        });\n      } else {\n        return props.settings.targetGradOptions.map(option => {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            value: option.substr(6, 9),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }\n          }, option);\n        });\n      }\n    }\n  }; //Check if there is any part of userData that is undefined/falsy\n\n\n  const checkSubmission = userData => {\n    const keys = Object.keys(userData);\n    let status;\n\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      status = userData[key] ? true : false;\n    }\n\n    return status;\n  };\n\n  const handleSubmit = () => {\n    const userData = {\n      faculty: userInput.faculty,\n      facIndex: userInput.facIndex,\n      major: userInput.major,\n      majorIndex: userInput.majorIndex,\n      specialisation: userInput.specialisation,\n      residential: userInput.residence,\n      matriculationYear: userInput.matriculationYear,\n      targetGradYear: userInput.targetGradYear,\n      modPlan: props.modplan,\n      cap: props.cap.cap,\n      targetCap: props.cap.targetCap\n    }; //if all props of userData is filled, allow user to save\n    //else alert popup to redirect user back to filling in their data (TEMPORARY)\n\n    return checkSubmission(userData) ? props.updateSettings(userData) : alert(\"Please fill in all the fields before saving!\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }\n  }, \"Enter your particulars so that we can personalise your user experience!\"), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 11\n    }\n  }, \"Your Faculty: \", userInput.faculty), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"faculty\",\n    onChange: handleChange,\n    value: userInput.faculty,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    selected: true,\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 17\n    }\n  }, \"Choose Your Faculty\"), !isEmpty(props.settings.userInfo) && generateOptions(\"faculty\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }\n  }, \"Your Major: \", userInput.major), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"major\",\n    onChange: handleChange,\n    value: userInput.major,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }\n  }, \"(\", /*#__PURE__*/React.createElement(\"option\", {\n    selected: true,\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 18\n    }\n  }, \"Choose Your Major\"), \")\", !isEmpty(props.settings.userInfo) && generateOptions(\"major\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }\n  }, \"Your Specialisation: \", userInput.specialisation, \"  \"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"specialisation\",\n    onChange: handleChange,\n    value: userInput.specialisation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }\n  }, \"(\", /*#__PURE__*/React.createElement(\"option\", {\n    selected: true,\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 18\n    }\n  }, \"Choose Your Specialisation\"), \")\", !isEmpty(props.settings.userInfo) && generateOptions(\"specialisation\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 13\n    }\n  }, \"Your Residential College: \", userInput.residence), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"residence\",\n    onChange: handleChange,\n    value: userInput.residence,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 13\n    }\n  }, \"(\", /*#__PURE__*/React.createElement(\"option\", {\n    selected: true,\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 18\n    }\n  }, \"Choose Your Residence\"), \")\", !isEmpty(props.settings.userInfo) && generateOptions(\"residence\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 13\n    }\n  }, \"Year of Matriculation: \", userInput.matriculationYear), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"matriculationYear\",\n    onChange: handleChange,\n    value: userInput.matriculationYear,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 13\n    }\n  }, \"(\", /*#__PURE__*/React.createElement(\"option\", {\n    selected: true,\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 18\n    }\n  }, \"Choose Your Year of Matriculation\"), \")\", !isEmpty(props.settings.userInfo) && generateOptions(\"matriculationYear\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 13\n    }\n  }, \"Target Graduation Year: \", userInput.targetGradYear), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"targetGradYear\",\n    onChange: handleChange,\n    value: userInput.targetGradYear,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 13\n    }\n  }, \"(\", /*#__PURE__*/React.createElement(\"option\", {\n    selected: true,\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 18\n    }\n  }, \"Choose Your Target Graduation Year\"), \")\", !isEmpty(props.settings.userInfo) && generateOptions(\"targetGradYear\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: \"button\",\n    id: \"save\",\n    onClick: () => handleSubmit(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 9\n    }\n  }, \"Save Settings\"), !isEmpty(props.success) && setTimeout(props.removeSuccess, 500) && clearTimeout(setTimeout(props.removeSuccess, 2000)), !isEmpty(props.success) && alert(\"Saved successfully!\") // <p className=\"success\">\n  //     {props.success}\n  // </p>\n  , /*#__PURE__*/React.createElement(Button, {\n    className: \"button\",\n    id: \"delete\",\n    onClick: () => props.deleteUser(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 9\n    }\n  }, \"Delete Account\"));\n};\n\nAcadSettings.propTypes = {\n  updateSettings: PropTypes.func.isRequired,\n  setMatriculationYearOptions: PropTypes.func.isRequired,\n  setTargetGradYearOptions: PropTypes.func.isRequired,\n  removeSuccess: PropTypes.func.isRequired,\n  deleteUser: PropTypes.func.isRequired,\n  modplan: PropTypes.object.isRequired,\n  settings: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  modplan: state.modplan.selectedModules,\n  settings: state.settings,\n  userInfo: state.settings.userInfo,\n  cap: state.cap,\n  success: state.success\n});\n\nexport default connect(mapStateToProps, {\n  updateSettings,\n  setMatriculationYearOptions,\n  setTargetGradYearOptions,\n  removeSuccess,\n  deleteUser\n})(AcadSettings);","map":{"version":3,"sources":["/Users/frisciliasultan/Documents/Orbital/client/src/Settings/AcadSettings.jsx"],"names":["React","useState","useEffect","useReducer","Options","Link","axios","Button","connect","PropTypes","updateSettings","setMatriculationYearOptions","setTargetGradYearOptions","deleteUser","removeSuccess","isEmpty","generateOptions","AcadSettings","props","userInput","setUserInput","state","newState","faculty","userInfo","facIndex","major","majorIndex","specialisation","residence","residential","matriculationYear","targetGradYear","console","log","residenceOptions","dummyfac","settings","currentAY","matriculationOptions","currentSemester","handleChange","e","name","value","selectedIndex","target","choices","map","obj","Object","keys","item","option","substr","targetGradOptions","checkSubmission","userData","status","i","length","key","handleSubmit","modPlan","modplan","cap","targetCap","alert","success","setTimeout","clearTimeout","propTypes","func","isRequired","object","mapStateToProps","selectedModules"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useReducer} from 'react';\nimport { Options } from '../Pages/Module Selection Page/ModuleList';\nimport { Link } from 'react-router-dom';\nimport axios from \"axios\";\nimport { Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport PropTypes from \"prop-types\";\nimport { updateSettings, setMatriculationYearOptions, setTargetGradYearOptions } from \"../actions/settingsActions\";\nimport { deleteUser } from \"../actions/authActions\";\nimport { removeSuccess } from \"../actions/successActions\";\nimport isEmpty from \"is-empty\";\nimport { generateOptions } from '../utils/commonFunctions';\n\n\n\nconst AcadSettings = (props) => {\n  const [userInput, setUserInput] = useReducer(\n    (state, newState) => ({...state, ...newState}), \n    {\n      faculty: props.userInfo.faculty,\n      facIndex: props.userInfo.facIndex,\n      major: props.userInfo.major,\n      majorIndex: props.userInfo.majorIndex,\n      specialisation: props.userInfo.specialisation,\n      residence: props.userInfo.residential,\n      matriculationYear: props.userInfo.matriculationYear,\n      targetGradYear: props.userInfo.targetGradYear\n    }\n  )\n\n\n  console.log(userInput.facIndex);\n  const residenceOptions = ['N/A','CAPT', 'RC4', 'RVRC','Tembusu', 'USP'];\n  const dummyfac = [{'Business': [{'Business Administration': ['A', 'B']},\n                    {'Accountancy': ['C', 'D']}]},\n                  {'FASS': [{'C': ['N/A']},\n                  {'D': ['N/A']}]},\n                  {\n                  'Computing': [\n                        {'Computer Science': ['N/A']},\n                        {'Business Analytics': ['N/A']}\n                  ] \n  }];\n\n  useEffect(() => {\n    if(props.settings.currentAY && isEmpty(props.settings.matriculationOptions)) {\n        props.setMatriculationYearOptions(props.settings.currentAY, props.settings.currentSemester);\n        props.setTargetGradYearOptions(props.settings.currentAY, props.settings.currentSemester);\n    }\n  }, [props.settings.currentAY]);\n\n  useEffect(() => {\n    if(!isEmpty(props.settings.userInfo)) {\n      setUserInput({\n        faculty: props.userInfo.faculty,\n        facIndex: props.userInfo.facIndex,\n        major: props.userInfo.major,\n        majorIndex: props.userInfo.majorIndex,\n        specialisation: props.userInfo.specialisation,\n        residence: props.userInfo.residential,\n        matriculationYear: props.userInfo.matriculationYear,\n        targetGradYear: props.userInfo.targetGradYear\n      });\n    }\n  }, [props.settings.userInfo]);\n\n  const handleChange = (e) => {\n    const {name, value, selectedIndex} = e.target;\n\n    if(name === \"faculty\") {\n      setUserInput({[name]: value,\n                      facIndex: (selectedIndex - 1),\n                      major: null});\n        \n    } else if(name === \"major\") {\n      setUserInput({[name]: value,\n                      majorIndex: (selectedIndex - 1)});\n\n    } else {\n      setUserInput({[name]: value});\n    } \n    console.log(userInput.facIndex);\n  };\n\n //turn array of choices into options dropdown\n  const generateOptions = (choices) => {\n    let facIndex = userInput.facIndex;\n  if(choices === 'faculty'){\n    return dummyfac.map((obj) => {\n      return (\n      <option value={Object.keys(obj)}>\n        {Object.keys(obj)}\n      </option>\n      );\n    });\n  } else if(choices === 'major') {\n      if(userInput.faculty) {\n      return dummyfac\n            [facIndex]\n            [userInput.faculty].map((obj) => {\n                    return (\n                      <option value={Object.keys(obj)}>\n                        {Object.keys(obj)}\n                      </option>\n                    )\n                }\n      )}\n    } else if(choices === 'specialisation') {\n        if(userInput.major && userInput.faculty) {\n        return dummyfac\n              [facIndex]\n              [userInput.faculty][userInput.majorIndex][userInput.major].map((item) => {\n                    return (\n                      <option>\n                        {item}\n                      </option>\n                    )\n                  }    \n        )}\n    } else if(choices === 'residence') {\n      return residenceOptions.map((obj) => {\n        return (\n        <option value={obj}>\n          {obj}\n        </option>\n        );\n      });\n    } else {\n        if(choices === 'matriculationYear') {\n          return props.settings.matriculationOptions.map((option) => {\n            return (\n            <option value={option.substr(3,9)}>\n              {option}\n            </option>\n            );\n          });\n        } else {\n            return props.settings.targetGradOptions.map((option) => {\n              return (\n              <option value={option.substr(6,9)}>\n                {option}\n              </option>\n              );\n            });\n          }\n      }\n}\n\n//Check if there is any part of userData that is undefined/falsy\nconst checkSubmission = (userData) => {\n  const keys = Object.keys(userData);\n  let status;\n\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    status = userData[key] ? true : false;\n  }\n  return status;\n}\n\nconst handleSubmit = () => {\n  const userData = {\n    faculty: userInput.faculty,\n    facIndex: userInput.facIndex,\n    major: userInput.major,\n    majorIndex: userInput.majorIndex,\n    specialisation: userInput.specialisation,\n    residential: userInput.residence,\n    matriculationYear: userInput.matriculationYear,\n    targetGradYear: userInput.targetGradYear,\n    modPlan: props.modplan,\n    cap: props.cap.cap,\n    targetCap: props.cap.targetCap\n  }\n\n  //if all props of userData is filled, allow user to save\n  //else alert popup to redirect user back to filling in their data (TEMPORARY)\n  return checkSubmission(userData) ?  props.updateSettings(userData) : alert(\"Please fill in all the fields before saving!\");\n\n} \n\n  return (\n      <div className=\"container\">\n        <h5>Enter your particulars so that we can personalise your user experience!</h5>\n\n        <form>\n          <label>Your Faculty: {userInput.faculty}</label>\n          <select\n              name=\"faculty\" \n              onChange={handleChange}\n              value={userInput.faculty}>\n                <option selected disabled>\n                  Choose Your Faculty\n                </option>\n              {!isEmpty(props.settings.userInfo) && generateOptions(\"faculty\")}\n            </select>   \n            <br/>\n            <br/>\n\n            <label>Your Major: {userInput.major}</label>\n            <select\n              name=\"major\"\n              onChange={handleChange}\n              value={userInput.major}>\n                (<option selected disabled>\n                  Choose Your Major\n                </option>)\n              {!isEmpty(props.settings.userInfo) && generateOptions(\"major\") }\n            </select>\n            <br/>\n            <br/>\n\n            <label>Your Specialisation: {userInput.specialisation}  </label>\n            <select\n              name=\"specialisation\"\n              onChange={handleChange}\n              value={userInput.specialisation}>\n                (<option selected disabled>\n                  Choose Your Specialisation\n                </option>)\n              {!isEmpty(props.settings.userInfo) && generateOptions(\"specialisation\")}\n            </select>\n            <br/>\n            <br/>\n\n            <label>Your Residential College: {userInput.residence}</label>\n            <select\n              name=\"residence\"\n              onChange={handleChange}\n              value={userInput.residence}>\n                (<option selected disabled>\n                  Choose Your Residence\n                </option>)\n              {!isEmpty(props.settings.userInfo) && generateOptions(\"residence\")}\n            </select>\n            <br/>\n            <br/>\n\n            <label>Year of Matriculation: {userInput.matriculationYear}</label>\n            <select\n              name=\"matriculationYear\"\n              onChange={handleChange}\n              value={userInput.matriculationYear}>\n                (<option selected disabled>\n                  Choose Your Year of Matriculation\n                </option>)\n              {!isEmpty(props.settings.userInfo) && generateOptions(\"matriculationYear\")}\n            </select>\n            <br/>\n            <br/>\n\n            <label>Target Graduation Year: {userInput.targetGradYear}</label>\n            <select\n              name=\"targetGradYear\"\n              onChange={handleChange}\n              value={userInput.targetGradYear}>\n                (<option selected disabled>\n                  Choose Your Target Graduation Year\n                </option>)\n              {!isEmpty(props.settings.userInfo) && generateOptions(\"targetGradYear\")}\n            </select>\n            <br/>\n            <br/>\n          </form>\n\n        <Button className='button' id='save' onClick={() => handleSubmit()}>Save Settings</Button>\n        {!isEmpty(props.success) && \n                    setTimeout(props.removeSuccess, 500) &&\n                    clearTimeout(setTimeout(props.removeSuccess, 2000))}\n        {!isEmpty(props.success) && alert(\"Saved successfully!\")\n                // <p className=\"success\">\n                //     {props.success}\n                // </p>\n                \n                }\n                \n               \n\n        <Button className='button' id='delete' onClick={() => props.deleteUser()}>Delete Account</Button>\n        \n      </div>\n  );\n}\n\n\nAcadSettings.propTypes = {\n  updateSettings: PropTypes.func.isRequired,\n  setMatriculationYearOptions: PropTypes.func.isRequired,\n  setTargetGradYearOptions: PropTypes.func.isRequired,\n  removeSuccess: PropTypes.func.isRequired,\n  deleteUser: PropTypes.func.isRequired,\n  modplan: PropTypes.object.isRequired,\n  settings: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  modplan: state.modplan.selectedModules,\n  settings: state.settings,\n  userInfo: state.settings.userInfo,\n  cap: state.cap,\n  success: state.success\n});\n\nexport default connect(mapStateToProps, \n  { updateSettings, setMatriculationYearOptions, setTargetGradYearOptions, removeSuccess, deleteUser }) (AcadSettings);\n"]},"metadata":{},"sourceType":"module"}