{"ast":null,"code":"var _jsxFileName = \"/Users/frisciliasultan/Documents/Orbital/client/src/Pages/Module Planner Page/ModulePlannerPage.jsx\";\nimport React from 'react';\nimport Board from './Board';\nimport Rules from './Rules';\nimport TrashBox from './TrashBox';\nimport YearDisplay from './YearDisplay';\nimport './plannertemp.css';\nimport { Button, Card } from 'react-bootstrap';\nimport { HTML5Backend as Backend } from 'react-dnd-html5-backend';\nimport { DndProvider } from 'react-dnd';\nimport { connect } from 'react-redux';\nimport { callBackendAPI, setCallBackendNow } from '../../actions/modplanActions';\nimport PropTypes from 'prop-types';\nimport isEmpty from 'is-empty';\n\nclass ModulePlannerPageTemp extends React.Component {\n  componentDidMount() {\n    if (!this.props.modplan.rules) {\n      this.props.callBackendAPI('Rules');\n    }\n\n    if (!this.props.modplan.modules) {\n      this.props.callBackendAPI('NUSMods');\n    }\n  } // updateSelectedModules(object) {\n  //     let newSelectedModules = this.state.selectedModules ? this.state.selectedModules : [];\n  //     let unique = true;\n  //     let indexOfDuplicate;\n  //     for(let i = 0; i < newSelectedModules.length; i++) {\n  //         if(newSelectedModules[i].moduleCode === object.moduleCode) {\n  //             unique = false;\n  //             indexOfDuplicate = i;\n  //         }\n  //     }\n  //      if (!newSelectedModules.includes(object) && unique) {\n  //          if(unique) {\n  //             newSelectedModules.push(object);\n  //          } else {\n  //             newSelectedModules.splice(indexOfDuplicate, 1);\n  //             newSelectedModules.push(object);           \n  //          }\n  //          this.setState({selectedModules: newSelectedModules});\n  //     }\n  //      console.log(this.state.selectedModules);\n  //  }\n  //  updateModuleLocation(item, location) {\n  //      let changedModule;\n  //      if(!location) {\n  //          changedModule = this.state.selectedModules.filter((object) => object.moduleCode !== item.id);\n  //      } else {\n  //         const moduleToChange = this.state.selectedModules.filter((object) => object.moduleCode === item.id);\n  //         moduleToChange[0].location =  location;\n  //         changedModule = this.state.selectedModules.filter((object) => object.moduleCode !== item.id).concat(moduleToChange[0])\n  //      }\n  //      this.setState({selectedModules: changedModule});\n  //     console.log(changedModule);\n  // }\n  // updateCallBackendNow() {\n  //     // this.setState({callBackendNow: false});\n  //     this.props.setCallBackendNow(false);\n  // }\n\n\n  handleEvalButtonClick() {\n    const modules = this.props.modplan.selectedModules;\n    console.log(modules);\n\n    if (isEmpty(modules)) {\n      alert('Please add modules before evaluating');\n    } else {\n      this.props.setCallBackendNow(true);\n    }\n  }\n\n  render() {\n    const module = this.props.modplan.modules;\n    return /*#__PURE__*/React.createElement(DndProvider, {\n      backend: Backend,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-module-planner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(YearDisplay, {\n      year: \"Year 1\",\n      AY: \"2018/2019\",\n      module: this.props.modplan.modules,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(YearDisplay, {\n      year: \"Year 2\",\n      AY: \"2019/2020\",\n      module: this.props.modplan.modules,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(YearDisplay, {\n      year: \"Year 3\",\n      AY: \"2020/2021\",\n      module: this.props.modplan.modules,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(YearDisplay, {\n      year: \"Year 4\",\n      AY: \"2022/2023\",\n      module: this.props.modplan.modules,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(TrashBox, {\n      module: this.props.modplan.selectedModules,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      className: \"button\",\n      id: \"eval-button\",\n      onClick: () => this.handleEvalButtonClick(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }\n    }, \"Evaluate\"), /*#__PURE__*/React.createElement(Button, {\n      className: \"button\",\n      onClick: () => {},\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }\n    }, \"Save\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Rules, {\n      rules: this.props.modplan.rules,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nModulePlannerPageTemp.propTypes = {\n  callBackendAPI: PropTypes.func.isRequired,\n  setCallBackendNow: PropTypes.func.isRequired,\n  modplan: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  modplan: state.modplan\n});\n\nexport default connect(mapStateToProps, {\n  callBackendAPI,\n  setCallBackendNow\n})(ModulePlannerPageTemp);","map":{"version":3,"sources":["/Users/frisciliasultan/Documents/Orbital/client/src/Pages/Module Planner Page/ModulePlannerPage.jsx"],"names":["React","Board","Rules","TrashBox","YearDisplay","Button","Card","HTML5Backend","Backend","DndProvider","connect","callBackendAPI","setCallBackendNow","PropTypes","isEmpty","ModulePlannerPageTemp","Component","componentDidMount","props","modplan","rules","modules","handleEvalButtonClick","selectedModules","console","log","alert","render","module","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Board from './Board';\nimport Rules from './Rules';\nimport TrashBox from './TrashBox';\nimport YearDisplay from './YearDisplay';\nimport './plannertemp.css';\nimport { Button, Card } from 'react-bootstrap';\nimport { HTML5Backend as Backend } from 'react-dnd-html5-backend';\nimport { DndProvider } from 'react-dnd';\nimport { connect } from 'react-redux';\nimport { callBackendAPI, setCallBackendNow } from '../../actions/modplanActions';\nimport PropTypes from 'prop-types';\nimport isEmpty from 'is-empty'\n\n\nclass ModulePlannerPageTemp extends React.Component {\n\n    componentDidMount() {\n        if(!this.props.modplan.rules) {\n            this.props.callBackendAPI('Rules');\n        }\n        \n        if(!this.props.modplan.modules){\n            this.props.callBackendAPI('NUSMods');\n        }\n    }\n    \n    // updateSelectedModules(object) {\n    //     let newSelectedModules = this.state.selectedModules ? this.state.selectedModules : [];\n    //     let unique = true;\n    //     let indexOfDuplicate;\n        \n    //     for(let i = 0; i < newSelectedModules.length; i++) {\n    //         if(newSelectedModules[i].moduleCode === object.moduleCode) {\n    //             unique = false;\n    //             indexOfDuplicate = i;\n    //         }\n    //     }\n\n    //      if (!newSelectedModules.includes(object) && unique) {\n    //          if(unique) {\n    //             newSelectedModules.push(object);\n                \n    //          } else {\n    //             newSelectedModules.splice(indexOfDuplicate, 1);\n    //             newSelectedModules.push(object);           \n    //          }\n    //          this.setState({selectedModules: newSelectedModules});\n    //     }\n         \n    //      console.log(this.state.selectedModules);\n    //  }\n    \n    //  updateModuleLocation(item, location) {\n    //      let changedModule;\n    //      if(!location) {\n    //          changedModule = this.state.selectedModules.filter((object) => object.moduleCode !== item.id);\n    //      } else {\n    //         const moduleToChange = this.state.selectedModules.filter((object) => object.moduleCode === item.id);\n    //         moduleToChange[0].location =  location;\n    //         changedModule = this.state.selectedModules.filter((object) => object.moduleCode !== item.id).concat(moduleToChange[0])\n    //      }\n    //      this.setState({selectedModules: changedModule});\n    //     console.log(changedModule);\n    // }\n    \n    // updateCallBackendNow() {\n    //     // this.setState({callBackendNow: false});\n    //     this.props.setCallBackendNow(false);\n    // }\n\n    handleEvalButtonClick() {\n        const modules = this.props.modplan.selectedModules;\n        console.log(modules);\n        if (isEmpty(modules)) {\n            alert('Please add modules before evaluating');\n        } else {\n            this.props.setCallBackendNow(true);\n        }\n    }\n    \n    render () {\n        const module = this.props.modplan.modules\n        return (\n            <DndProvider backend={Backend} >\n                <div className=\"container-module-planner\">\n                    <YearDisplay\n                            year=\"Year 1\"\n                            AY=\"2018/2019\"\n                            module={this.props.modplan.modules} />\n\n                    <YearDisplay\n                            year=\"Year 2\"\n                            AY=\"2019/2020\"\n                            module={this.props.modplan.modules}/> \n\n                    <YearDisplay\n                            year=\"Year 3\"\n                            AY=\"2020/2021\"\n                            module={this.props.modplan.modules} />\n\n                    <YearDisplay\n                            year=\"Year 4\"\n                            AY=\"2022/2023\"\n                            module={this.props.modplan.modules} /> \n                    \n                    <TrashBox\n                            module={this.props.modplan.selectedModules}/>\n\n\n                    <br/>\n\n                    <Button className=\"button\" id=\"eval-button\" onClick={() => this.handleEvalButtonClick()}>Evaluate</Button>\n                    <Button className=\"button\" onClick={() => {}}>Save</Button>\n                    <br/>\n                    <br/>\n                    <Card>\n                        <Rules\n                            rules={this.props.modplan.rules}/>\n                    </Card>\n                    <br/>\n                </div>\n           </DndProvider>\n        )\n    }\n}\n\nModulePlannerPageTemp.propTypes = {\n    callBackendAPI: PropTypes.func.isRequired,\n    setCallBackendNow: PropTypes.func.isRequired,\n    modplan: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    modplan: state.modplan\n});\n\nexport default connect(mapStateToProps, { callBackendAPI, setCallBackendNow }) (ModulePlannerPageTemp);\n"]},"metadata":{},"sourceType":"module"}