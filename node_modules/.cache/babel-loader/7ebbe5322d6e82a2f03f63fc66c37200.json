{"ast":null,"code":"var _jsxFileName = \"/Users/frisciliasultan/Documents/Orbitalhosting/src/Settings/AcadSettings.jsx\";\nimport React, { useState, useEffect, useReducer } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from \"axios\";\nimport { Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport PropTypes from \"prop-types\";\nimport { updateSettings, setMatriculationYearOptions, setTargetGradYearOptions, setDegreeOptions } from \"../actions/settingsActions\";\nimport { deleteUser } from \"../actions/authActions\";\nimport { removeSuccess } from \"../actions/successActions\";\nimport isEmpty from \"is-empty\";\nimport { generateOptions } from '../utils/commonFunctions';\n\nconst AcadSettings = props => {\n  const [userInput, setUserInput] = useReducer((state, newState) => ({ ...state,\n    ...newState\n  }), {\n    faculty: props.userInfo.faculty,\n    facIndex: props.userInfo.facIndex,\n    major: props.userInfo.major,\n    majorIndex: props.userInfo.majorIndex,\n    specialisation: props.userInfo.specialisation,\n    residence: props.userInfo.residential,\n    matriculationYear: props.userInfo.matriculationYear,\n    targetGradYear: props.userInfo.targetGradYear\n  }); // const residenceOptions = ['N/A','CAPT', 'RC4', 'RVRC','Tembusu', 'USP'];\n  // const dummyfac = [{'Business': [{'Business Administration': ['A', 'B']},\n  //                   {'Accountancy': ['C', 'D']}]},\n  //                 {'FASS': [{'C': ['N/A']},\n  //                 {'D': ['N/A']}]},\n  //                 {\n  //                 'Computing': [\n  //                       {'Computer Science': ['N/A']},\n  //                       {'Business Analytics': ['N/A']}\n  //                 ] \n  // }];\n\n  useEffect(() => {\n    if (isEmpty(props.settings.facultyOptions)) {\n      props.setDegreeOptions();\n    }\n  }, []);\n  useEffect(() => {\n    if (props.settings.currentAY && isEmpty(props.settings.matriculationOptions)) {\n      props.setMatriculationYearOptions(props.settings.currentAY, props.settings.currentSemester);\n      props.setTargetGradYearOptions(props.settings.currentAY, props.settings.currentSemester);\n    }\n  }, [props.settings.currentAY]);\n  useEffect(() => {\n    if (!isEmpty(props.settings.userInfo)) {\n      setUserInput({\n        faculty: props.userInfo.faculty,\n        facIndex: props.userInfo.facIndex,\n        major: props.userInfo.major,\n        majorIndex: props.userInfo.majorIndex,\n        specialisation: props.userInfo.specialisation,\n        residence: props.userInfo.residential,\n        matriculationYear: props.userInfo.matriculationYear,\n        targetGradYear: props.userInfo.targetGradYear\n      });\n    }\n  }, [props.settings.userInfo]);\n\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      selectedIndex\n    } = e.target;\n\n    if (name === \"faculty\") {\n      setUserInput({\n        [name]: value,\n        facIndex: selectedIndex - 1,\n        major: null\n      });\n    } else if (name === \"major\") {\n      setUserInput({\n        [name]: value,\n        majorIndex: selectedIndex - 1\n      });\n    } else {\n      setUserInput({\n        [name]: value\n      });\n    }\n\n    console.log(userInput.facIndex);\n  }; //turn array of choices into options dropdown\n  //   const generateOptions = (choices) => {\n  //     if(choices === 'faculty'){\n  //       return props.settings.facultyOptions.map((obj) => {\n  //         return (\n  //         <option value={Object.keys(obj)}>\n  //           {Object.keys(obj)}\n  //         </option>\n  //         );\n  //       });\n  //     } else if(choices === 'major') {\n  //         if(userInput.faculty) {\n  //         return dummyfac\n  //               [facIndex]\n  //               [userInput.faculty].map((obj) => {\n  //                       return (\n  //                         <option value={Object.keys(obj)}>\n  //                           {Object.keys(obj)}\n  //                         </option>\n  //                       )\n  //                   }\n  //         )}\n  //     } else if(choices === 'specialisation') {\n  //         if(userInput.major && userInput.faculty) {\n  //         return dummyfac\n  //               [facIndex]\n  //               [userInput.faculty][userInput.majorIndex][userInput.major].map((item) => {\n  //                     return (\n  //                       <option>\n  //                         {item}\n  //                       </option>\n  //                     )\n  //                   }    \n  //         )}\n  //     } else if(choices === 'residence') {\n  //       return residenceOptions.map((obj) => {\n  //         return (\n  //         <option value={obj}>\n  //           {obj}\n  //         </option>\n  //         );\n  //       });\n  //     } else {\n  //         if(choices === 'matriculationYear') {\n  //           return props.settings.matriculationOptions.map((option) => {\n  //             return (\n  //             <option value={option.substr(3,9)}>\n  //               {option}\n  //             </option>\n  //             );\n  //           });\n  //         } else {\n  //             return props.settings.targetGradOptions.map((option) => {\n  //               return (\n  //               <option value={option.substr(6,9)}>\n  //                 {option}\n  //               </option>\n  //               );\n  //             });\n  //           }\n  //       }\n  // }\n  //Check if there is any part of userData that is undefined/falsy\n\n\n  const checkSubmission = userData => {\n    const keys = Object.keys(userData);\n    let status;\n\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      status = userData[key] || userData[key] === 0 ? true : false;\n      console.log(status);\n      console.log(userData[key]);\n\n      if (!status) {\n        return status = false;\n      }\n    }\n\n    return status;\n  };\n\n  const handleSubmit = () => {\n    const userData = {\n      faculty: userInput.faculty,\n      facIndex: userInput.facIndex,\n      major: userInput.major,\n      majorIndex: userInput.majorIndex,\n      specialisation: userInput.specialisation,\n      residential: userInput.residence,\n      matriculationYear: userInput.matriculationYear,\n      targetGradYear: userInput.targetGradYear,\n      modPlan: props.modplan,\n      cap: props.cap.cap,\n      targetCap: props.cap.targetCap\n    }; //if all props of userData is filled, allow user to save\n    //else alert popup to redirect user back to filling in their data (TEMPORARY)\n\n    return checkSubmission(userData) ? props.updateSettings(userData) : alert(\"Please fill in all the fields before saving!\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 9\n    }\n  }, \"Enter your particulars so that we can personalise your user experience!\"), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Options, {\n    title: \"faculty\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 11\n    }\n  }, \"Your Faculty: \", userInput.faculty), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"faculty\",\n    onChange: handleChange,\n    value: userInput.faculty,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    selected: true,\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 17\n    }\n  }, \"Choose Your Faculty\"), generateOptions(props.settings.facultyOptions, \"faculty\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }\n  }, \"Your Major: \", userInput.major), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"major\",\n    onChange: handleChange,\n    value: userInput.major,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }\n  }, \"(\", /*#__PURE__*/React.createElement(\"option\", {\n    selected: true,\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 18\n    }\n  }, \"Choose Your Major\"), \")\", !isEmpty(props.settings.userInfo) && generateOptions(\"major\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 13\n    }\n  }, \"Your Specialisation: \", userInput.specialisation, \"  \"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"specialisation\",\n    onChange: handleChange,\n    value: userInput.specialisation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 13\n    }\n  }, \"(\", /*#__PURE__*/React.createElement(\"option\", {\n    selected: true,\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 18\n    }\n  }, \"Choose Your Specialisation\"), \")\", !isEmpty(props.settings.userInfo) && generateOptions(\"specialisation\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 13\n    }\n  }, \"Your Residential College: \", userInput.residence), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"residence\",\n    onChange: handleChange,\n    value: userInput.residence,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 13\n    }\n  }, \"(\", /*#__PURE__*/React.createElement(\"option\", {\n    selected: true,\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 18\n    }\n  }, \"Choose Your Residence\"), \")\", generateOptions(props.settings.residenceOptions, \"residence\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 13\n    }\n  }, \"Year of Matriculation: \", userInput.matriculationYear), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"matriculationYear\",\n    onChange: handleChange,\n    value: userInput.matriculationYear,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 13\n    }\n  }, \"(\", /*#__PURE__*/React.createElement(\"option\", {\n    selected: true,\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 18\n    }\n  }, \"Choose Your Year of Matriculation\"), \")\", !isEmpty(props.settings.userInfo) && generateOptions(\"matriculationYear\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 13\n    }\n  }, \"Target Graduation Year: \", userInput.targetGradYear), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"targetGradYear\",\n    onChange: handleChange,\n    value: userInput.targetGradYear,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 13\n    }\n  }, \"(\", /*#__PURE__*/React.createElement(\"option\", {\n    selected: true,\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 18\n    }\n  }, \"Choose Your Target Graduation Year\"), \")\", !isEmpty(props.settings.userInfo) && generateOptions(\"targetGradYear\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: \"button\",\n    id: \"save\",\n    onClick: () => handleSubmit(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 9\n    }\n  }, \"Save Settings\"), !isEmpty(props.success) && setTimeout(props.removeSuccess, 500) && clearTimeout(setTimeout(props.removeSuccess, 2000)), !isEmpty(props.success) && props.history.push(\"/module-planner\") // <p className=\"success\">\n  //     {props.success}\n  // </p>\n  , /*#__PURE__*/React.createElement(Button, {\n    className: \"button\",\n    id: \"delete\",\n    onClick: () => props.deleteUser(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 9\n    }\n  }, \"Delete Account\"));\n};\n\nAcadSettings.propTypes = {\n  updateSettings: PropTypes.func.isRequired,\n  setMatriculationYearOptions: PropTypes.func.isRequired,\n  setTargetGradYearOptions: PropTypes.func.isRequired,\n  setDegreeOptions: PropTypes.func.isRequired,\n  removeSuccess: PropTypes.func.isRequired,\n  deleteUser: PropTypes.func.isRequired,\n  modplan: PropTypes.object.isRequired,\n  settings: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  modplan: state.modplan.selectedModules,\n  settings: state.settings,\n  userInfo: state.settings.userInfo,\n  cap: state.cap,\n  success: state.success\n});\n\nexport default connect(mapStateToProps, {\n  updateSettings,\n  setMatriculationYearOptions,\n  setTargetGradYearOptions,\n  setDegreeOptions,\n  removeSuccess,\n  deleteUser\n})(AcadSettings);","map":{"version":3,"sources":["/Users/frisciliasultan/Documents/Orbitalhosting/src/Settings/AcadSettings.jsx"],"names":["React","useState","useEffect","useReducer","Link","axios","Button","connect","PropTypes","updateSettings","setMatriculationYearOptions","setTargetGradYearOptions","setDegreeOptions","deleteUser","removeSuccess","isEmpty","generateOptions","AcadSettings","props","userInput","setUserInput","state","newState","faculty","userInfo","facIndex","major","majorIndex","specialisation","residence","residential","matriculationYear","targetGradYear","settings","facultyOptions","currentAY","matriculationOptions","currentSemester","handleChange","e","name","value","selectedIndex","target","console","log","checkSubmission","userData","keys","Object","status","i","length","key","handleSubmit","modPlan","modplan","cap","targetCap","alert","residenceOptions","success","setTimeout","clearTimeout","history","push","propTypes","func","isRequired","object","mapStateToProps","selectedModules"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useReducer} from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from \"axios\";\nimport { Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport PropTypes from \"prop-types\";\nimport { updateSettings, setMatriculationYearOptions, setTargetGradYearOptions, setDegreeOptions } from \"../actions/settingsActions\";\nimport { deleteUser } from \"../actions/authActions\";\nimport { removeSuccess } from \"../actions/successActions\";\nimport isEmpty from \"is-empty\";\nimport { generateOptions } from '../utils/commonFunctions';\n\n\n\nconst AcadSettings = (props) => {\n  const [userInput, setUserInput] = useReducer(\n    (state, newState) => ({...state, ...newState}), \n    {\n      faculty: props.userInfo.faculty,\n      facIndex: props.userInfo.facIndex,\n      major: props.userInfo.major,\n      majorIndex: props.userInfo.majorIndex,\n      specialisation: props.userInfo.specialisation,\n      residence: props.userInfo.residential,\n      matriculationYear: props.userInfo.matriculationYear,\n      targetGradYear: props.userInfo.targetGradYear\n    }\n  )\n\n  // const residenceOptions = ['N/A','CAPT', 'RC4', 'RVRC','Tembusu', 'USP'];\n  // const dummyfac = [{'Business': [{'Business Administration': ['A', 'B']},\n  //                   {'Accountancy': ['C', 'D']}]},\n  //                 {'FASS': [{'C': ['N/A']},\n  //                 {'D': ['N/A']}]},\n  //                 {\n  //                 'Computing': [\n  //                       {'Computer Science': ['N/A']},\n  //                       {'Business Analytics': ['N/A']}\n  //                 ] \n  // }];\n\n  useEffect(() => {\n    if(isEmpty(props.settings.facultyOptions)) {\n        props.setDegreeOptions();\n    }\n  }, []);\n\n  useEffect(() => {\n    if(props.settings.currentAY && isEmpty(props.settings.matriculationOptions)) {\n        props.setMatriculationYearOptions(props.settings.currentAY, props.settings.currentSemester);\n        props.setTargetGradYearOptions(props.settings.currentAY, props.settings.currentSemester);\n    }\n  }, [props.settings.currentAY]);\n\n  useEffect(() => {\n    if(!isEmpty(props.settings.userInfo)) {\n      setUserInput({\n        faculty: props.userInfo.faculty,\n        facIndex: props.userInfo.facIndex,\n        major: props.userInfo.major,\n        majorIndex: props.userInfo.majorIndex,\n        specialisation: props.userInfo.specialisation,\n        residence: props.userInfo.residential,\n        matriculationYear: props.userInfo.matriculationYear,\n        targetGradYear: props.userInfo.targetGradYear\n      });\n    }\n  }, [props.settings.userInfo]);\n\n  const handleChange = (e) => {\n    const {name, value, selectedIndex} = e.target;\n\n    if(name === \"faculty\") {\n      setUserInput({[name]: value,\n                      facIndex: (selectedIndex - 1),\n                      major: null});\n        \n    } else if(name === \"major\") {\n      setUserInput({[name]: value,\n                      majorIndex: (selectedIndex - 1)});\n\n    } else {\n      setUserInput({[name]: value});\n    } \n    console.log(userInput.facIndex);\n  };\n\n //turn array of choices into options dropdown\n//   const generateOptions = (choices) => {\n//     if(choices === 'faculty'){\n//       return props.settings.facultyOptions.map((obj) => {\n//         return (\n//         <option value={Object.keys(obj)}>\n//           {Object.keys(obj)}\n//         </option>\n//         );\n//       });\n//     } else if(choices === 'major') {\n//         if(userInput.faculty) {\n//         return dummyfac\n//               [facIndex]\n//               [userInput.faculty].map((obj) => {\n//                       return (\n//                         <option value={Object.keys(obj)}>\n//                           {Object.keys(obj)}\n//                         </option>\n//                       )\n//                   }\n//         )}\n//     } else if(choices === 'specialisation') {\n//         if(userInput.major && userInput.faculty) {\n//         return dummyfac\n//               [facIndex]\n//               [userInput.faculty][userInput.majorIndex][userInput.major].map((item) => {\n//                     return (\n//                       <option>\n//                         {item}\n//                       </option>\n//                     )\n//                   }    \n//         )}\n//     } else if(choices === 'residence') {\n//       return residenceOptions.map((obj) => {\n//         return (\n//         <option value={obj}>\n//           {obj}\n//         </option>\n//         );\n//       });\n//     } else {\n//         if(choices === 'matriculationYear') {\n//           return props.settings.matriculationOptions.map((option) => {\n//             return (\n//             <option value={option.substr(3,9)}>\n//               {option}\n//             </option>\n//             );\n//           });\n//         } else {\n//             return props.settings.targetGradOptions.map((option) => {\n//               return (\n//               <option value={option.substr(6,9)}>\n//                 {option}\n//               </option>\n//               );\n//             });\n//           }\n//       }\n// }\n\n//Check if there is any part of userData that is undefined/falsy\nconst checkSubmission = (userData) => {\n  const keys = Object.keys(userData);\n  let status;\n\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    status = (userData[key] || userData[key] === 0) ? true : false;\n    console.log(status);\n    console.log(userData[key]);\n    if(!status) {\n      return status = false;\n    }\n  }\n  return status;\n}\n\nconst handleSubmit = () => {\n  const userData = {\n    faculty: userInput.faculty,\n    facIndex: userInput.facIndex,\n    major: userInput.major,\n    majorIndex: userInput.majorIndex,\n    specialisation: userInput.specialisation,\n    residential: userInput.residence,\n    matriculationYear: userInput.matriculationYear,\n    targetGradYear: userInput.targetGradYear,\n    modPlan: props.modplan,\n    cap: props.cap.cap,\n    targetCap: props.cap.targetCap\n  }\n\n  //if all props of userData is filled, allow user to save\n  //else alert popup to redirect user back to filling in their data (TEMPORARY)\n  return checkSubmission(userData) ?  props.updateSettings(userData) : alert(\"Please fill in all the fields before saving!\");\n\n} \n\n  return (\n      <div className=\"container\">\n        <h5>Enter your particulars so that we can personalise your user experience!</h5>\n\n        <form>\n          <Options\n            title=\"faculty\"/>\n\n          <label>Your Faculty: {userInput.faculty}</label>\n          <select\n              name=\"faculty\" \n              onChange={handleChange}\n              value={userInput.faculty}>\n                <option selected disabled>\n                  Choose Your Faculty\n                </option>\n              {/* {!isEmpty(props.settings.userInfo) && generateOptions(props.settings.facultyOptions, \"faculty\")} */}\n              {generateOptions(props.settings.facultyOptions, \"faculty\")}\n            </select>   \n            <br/>\n            <br/>\n\n            <label>Your Major: {userInput.major}</label>\n            <select\n              name=\"major\"\n              onChange={handleChange}\n              value={userInput.major}>\n                (<option selected disabled>\n                  Choose Your Major\n                </option>)\n              {!isEmpty(props.settings.userInfo) && generateOptions(\"major\") }\n            </select>\n            <br/>\n            <br/>\n\n            <label>Your Specialisation: {userInput.specialisation}  </label>\n            <select\n              name=\"specialisation\"\n              onChange={handleChange}\n              value={userInput.specialisation}>\n                (<option selected disabled>\n                  Choose Your Specialisation\n                </option>)\n              {!isEmpty(props.settings.userInfo) && generateOptions(\"specialisation\")}\n            </select>\n            <br/>\n            <br/>\n\n            <label>Your Residential College: {userInput.residence}</label>\n            <select\n              name=\"residence\"\n              onChange={handleChange}\n              value={userInput.residence}>\n                (<option selected disabled>\n                  Choose Your Residence\n                </option>)\n              {/* {!isEmpty(props.settings.userInfo) && generateOptions(\"residence\")} */}\n              {generateOptions(props.settings.residenceOptions, \"residence\")}\n            </select>\n            <br/>\n            <br/>\n\n            <label>Year of Matriculation: {userInput.matriculationYear}</label>\n            <select\n              name=\"matriculationYear\"\n              onChange={handleChange}\n              value={userInput.matriculationYear}>\n                (<option selected disabled>\n                  Choose Your Year of Matriculation\n                </option>)\n              {!isEmpty(props.settings.userInfo) && generateOptions(\"matriculationYear\")}\n            </select>\n            <br/>\n            <br/>\n\n            <label>Target Graduation Year: {userInput.targetGradYear}</label>\n            <select\n              name=\"targetGradYear\"\n              onChange={handleChange}\n              value={userInput.targetGradYear}>\n                (<option selected disabled>\n                  Choose Your Target Graduation Year\n                </option>)\n              {!isEmpty(props.settings.userInfo) && generateOptions(\"targetGradYear\")}\n            </select>\n            <br/>\n            <br/>\n          </form>\n\n        <Button className='button' id='save' onClick={() => handleSubmit()}>Save Settings</Button>\n        {!isEmpty(props.success) && \n                    setTimeout(props.removeSuccess, 500) &&\n                    clearTimeout(setTimeout(props.removeSuccess, 2000))}\n        {!isEmpty(props.success) && props.history.push(\"/module-planner\")\n                // <p className=\"success\">\n                //     {props.success}\n                // </p>\n                \n                }\n                \n               \n\n        <Button className='button' id='delete' onClick={() => props.deleteUser()}>Delete Account</Button>\n        \n      </div>\n  );\n}\n\n\nAcadSettings.propTypes = {\n  updateSettings: PropTypes.func.isRequired,\n  setMatriculationYearOptions: PropTypes.func.isRequired,\n  setTargetGradYearOptions: PropTypes.func.isRequired,\n  setDegreeOptions: PropTypes.func.isRequired,\n  removeSuccess: PropTypes.func.isRequired,\n  deleteUser: PropTypes.func.isRequired,\n  modplan: PropTypes.object.isRequired,\n  settings: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  modplan: state.modplan.selectedModules,\n  settings: state.settings,\n  userInfo: state.settings.userInfo,\n  cap: state.cap,\n  success: state.success\n});\n\nexport default connect(mapStateToProps, \n  { updateSettings, setMatriculationYearOptions, setTargetGradYearOptions, setDegreeOptions, removeSuccess, deleteUser }) (AcadSettings);\n"]},"metadata":{},"sourceType":"module"}