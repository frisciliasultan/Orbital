{"ast":null,"code":"var _jsxFileName = \"/Users/frisciliasultan/Documents/Orbital/client/src/Pages/CAP Calculator Page/CAPCalculatorPage.jsx\";\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport { setSemesterOptions } from '../../actions/capActions';\nimport { updateSettings, initialSettings } from \"../../actions/settingsActions\";\nimport { generateOptions } from \"../../utils/optionGenerator\";\nimport isEmpty from 'is-empty';\n\nconst CAPCalculatorPage = props => {\n  useEffect(() => {\n    // if(isEmpty(props.settings.userInfo)) {\n    //     props.initialSettings();\n    // }\n    if (isEmpty(props.semesterOptions) && !isEmpty(props.settings.userInfo)) {\n      const start = props.settings.userInfo.matriculationYear.substr(0, 4);\n      const end = props.settings.userInfo.targetGradYear.substr(5, 4);\n      const diff = end - start;\n      props.setSemesterOptions(diff);\n    }\n  }, [props.settings.userInfo]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ml-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"display-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, \"CAP Calculator\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, \"CAP at the beginning of the semester: \", props.user.name, \" \"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, \"Semester: \"), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, generateOptions(props.cap.semesterOptions)), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, \"Courses taken this semester\"));\n};\n\nCAPCalculatorPage.propType = {\n  setSemesterOptions: PropTypes.func.isRequired,\n  updateSettings: PropTypes.func.isRequired,\n  initialSettings: PropTypes.func.isRequired,\n  generateOptions: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired,\n  settings: PropTypes.object.isRequired,\n  cap: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  user: state.auth.user,\n  settings: state.settings,\n  cap: state.cap\n});\n\nexport default connect(mapStateToProps, {\n  setSemesterOptions,\n  updateSettings,\n  initialSettings\n})(CAPCalculatorPage);\n{\n  /* <label>CAP: </label>\n            <input type=\"text\" name=\"prevCAP\" />\n            <label>Credits Earned: </label>\n            <input type=\"text\" name=\"prevCreditsEarned\" />\n            <br/>\n            <br/> */\n}\n{\n  /* <label>Module</label>\n            <label>Grade</label>\n            <br/>\n            <input type=\"text\" placeholder=\"Credits\"/>\n            <input type=\"text\" placeholder=\"MCs\" /> */\n}","map":{"version":3,"sources":["/Users/frisciliasultan/Documents/Orbital/client/src/Pages/CAP Calculator Page/CAPCalculatorPage.jsx"],"names":["React","useEffect","connect","PropTypes","setSemesterOptions","updateSettings","initialSettings","generateOptions","isEmpty","CAPCalculatorPage","props","semesterOptions","settings","userInfo","start","matriculationYear","substr","end","targetGradYear","diff","user","name","cap","propType","func","isRequired","object","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport { setSemesterOptions } from '../../actions/capActions';\nimport { updateSettings, initialSettings } from \"../../actions/settingsActions\";\nimport { generateOptions } from \"../../utils/optionGenerator\";\nimport isEmpty from 'is-empty';\n\n\nconst CAPCalculatorPage = (props) => {\n\n    useEffect(() => {\n\n            // if(isEmpty(props.settings.userInfo)) {\n            //     props.initialSettings();\n            // }\n\n            if(isEmpty(props.semesterOptions) && !isEmpty(props.settings.userInfo)){\n                const start = props.settings.userInfo.matriculationYear.substr(0, 4);\n                const end = props.settings.userInfo.targetGradYear.substr(5, 4);\n                const diff = end - start;\n                props.setSemesterOptions(diff);\n            }\n\n    }, [props.settings.userInfo])\n    \n\n    return(\n        <div className=\"ml-4\">\n        <h1 className=\"display-3\">CAP Calculator</h1>\n        <h3>CAP at the beginning of the semester: {props.user.name} </h3>\n        {/* <h5 onClick={() => {this.setState({open: true})}}>Or click here to manually input CAP</h5> */}\n        {/* {this.state.open && (<input type=\"text\"/>)} */}\n        <label>Semester: </label>\n        <select id=\"time\">\n            {generateOptions(props.cap.semesterOptions)}\n        </select>\n        <br/>\n        \n        <h3>Courses taken this semester</h3>\n        \n        </div>\n    );\n}\n\n\nCAPCalculatorPage.propType = {\n    setSemesterOptions: PropTypes.func.isRequired,\n    updateSettings: PropTypes.func.isRequired,\n    initialSettings: PropTypes.func.isRequired,\n    generateOptions: PropTypes.func.isRequired,\n    user: PropTypes.object.isRequired,\n    settings: PropTypes.object.isRequired,\n    cap: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    user: state.auth.user,\n    settings: state.settings,\n    cap: state.cap\n});\n\nexport default connect(mapStateToProps,\n                        { setSemesterOptions, updateSettings, initialSettings })\n                        (CAPCalculatorPage);\n\n\n\n {/* <label>CAP: </label>\n            <input type=\"text\" name=\"prevCAP\" />\n            <label>Credits Earned: </label>\n            <input type=\"text\" name=\"prevCreditsEarned\" />\n            <br/>\n            <br/> */}\n\n\n\n {/* <label>Module</label>\n            <label>Grade</label>\n            <br/>\n            <input type=\"text\" placeholder=\"Credits\"/>\n            <input type=\"text\" placeholder=\"MCs\" /> */}"]},"metadata":{},"sourceType":"module"}