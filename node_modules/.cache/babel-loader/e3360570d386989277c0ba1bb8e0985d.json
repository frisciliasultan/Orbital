{"ast":null,"code":"var _jsxFileName = \"/Users/frisciliasultan/Documents/Orbitalhosting/src/utils/commonFunctions.js\";\nimport React from \"react\";\nimport { Select } from \"antd\";\nimport { TableContent } from \"../Pages/Module Selection Page/Table Content\";\nimport YearDisplay from \"../Pages/Module Planner Page/YearDisplay\";\nconst {\n  Option\n} = Select;\nexport const generateOptions = (optionList, category, object) => {\n  if (optionList) {\n    if (category === \"grade\") {\n      return optionList.map(option => {\n        return /*#__PURE__*/React.createElement(Option, {\n          value: option.grade,\n          object: object,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 21\n          }\n        }, option.grade);\n      }); // } else if (category === 'faculty') {\n      //         return optionList.map((option, index) => {\n      //             return (\n      //                 <Option \n      //                     key={option.name} \n      //                     value={option.name}\n      //                     name={category}\n      //                     selectedindex={index}>\n      //                 {option.name}\n      //                 </Option>\n      //             );\n      //         })\n      //DO NOT DELETE CATEGORY. Need diff category names for saving input\n    } else if (category === 'major' || category === \"specialisation\" || category === \"secondMajors\" || category === \"minors\" || category === \"residence\") {\n      return optionList.map((option, index) => {\n        if (option) {\n          return /*#__PURE__*/React.createElement(Option, {\n            key: option.fullName,\n            value: option.fullName,\n            name: category,\n            tag: option.tag,\n            selectedindex: index,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 25\n            }\n          }, option.name);\n        }\n      });\n    } else if (category === 'matriculationYear') {\n      return optionList.map(option => {\n        return /*#__PURE__*/React.createElement(Option, {\n          key: option.substr(3, 9),\n          value: option.substr(3, 9),\n          name: category,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 21\n          }\n        }, option);\n      });\n    } else if (category === 'targetGradYear') {\n      return optionList.map(option => {\n        return /*#__PURE__*/React.createElement(Option, {\n          key: option.substr(6, 9),\n          value: option.substr(6, 9),\n          name: category,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }\n        }, option);\n      });\n    }\n\n    return optionList.map((option, i) => {\n      return /*#__PURE__*/React.createElement(Option, {\n        key: option,\n        value: option,\n        index: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }\n      }, option);\n    });\n  }\n};\nexport const handleSaveClick = props => {\n  const userData = {\n    modPlan: props.modplan.selectedModules,\n    residential: props.settings.userInfo.residential,\n    major: props.settings.userInfo.major,\n    majorIndex: props.settings.userInfo.majorIndex,\n    specialisation: props.settings.userInfo.specialisation,\n    matriculationYear: props.settings.userInfo.matriculationYear,\n    targetGradYear: props.settings.userInfo.targetGradYear,\n    cap: props.cap.cap,\n    targetCap: props.cap.targetCap\n  };\n  props.updateSettings(userData);\n}; // generate Year Cards in Module Planner Page / Tables in Mod Info Page\n\nexport const generateObject = (matriYear, gradYear, category, module, props) => {\n  if (matriYear && gradYear) {\n    const matYear = Number(matriYear.substr(0, 4));\n    const noOfYear = Number(gradYear.substr(5, 4)) - matYear;\n    let display = [];\n\n    if (category === \"yearDisplay\") {\n      for (let i = 1; i <= noOfYear; i++) {\n        const start = matYear + i - 1;\n        display.push({\n          year: `Year ${i}`,\n          AY: `${start}/${start + 1}`\n        });\n      }\n\n      return display.map(object => {\n        return /*#__PURE__*/React.createElement(YearDisplay, {\n          year: object.year,\n          AY: object.AY,\n          module: module,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }\n        });\n      });\n    } else {\n      let sem1;\n      let sem2;\n\n      for (let i = 1; i < noOfYear * 2; i += 2) {\n        const year = Math.ceil(i / 2);\n        sem1 = `Year ${year} Semester 1`;\n        sem2 = `Year ${year} Semester 2`;\n        display[i - 1] = sem1;\n        display[i] = sem2;\n      }\n\n      if (category === \"semesterOptions\") {\n        return display;\n      } else if (category === \"tables\") {\n        let nthFutureSem = 0;\n        return display.map((sem, i) => {\n          if (props) {\n            console.log(props.userSemester);\n            console.log(props.currentSemester);\n            const status = checkIsPast(sem, props.userSemester, props.currentSemester, props.month);\n            const nextStatus = status ? checkIsPast(display[i + 1], props.userSemester, props.currentSemester, props.month) : null;\n\n            if (!status) {\n              nthFutureSem++;\n            } // if(i === (display.length - 1) || (status && !nextStatus)) {\n            //     isLastinCategory = true;\n            // }\n\n\n            return /*#__PURE__*/React.createElement(TableContent, {\n              title: sem,\n              module: module,\n              category: \"capTable\",\n              handleGradeClick: props.handleGradeClick,\n              handleCheckboxChange: props.handleCheckboxChange,\n              isPast: status,\n              displayHeader: i === 0 || nthFutureSem === 1,\n              lastInCategory: i === display.length - 1 || status && !nextStatus,\n              gradeList: props.gradeList,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 29\n              }\n            });\n          } else {\n            return /*#__PURE__*/React.createElement(TableContent, {\n              title: sem,\n              module: module,\n              category: category,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 29\n              }\n            });\n          }\n        });\n      }\n    }\n  }\n}; //Eg. Y2S1 => 3 (third sem)\n\nexport const convertSemToNumber = sem => {\n  if (sem.substr(7) === \"Semester 1\") {\n    return sem.substr(5, 1) * 2 - 1;\n  } else {\n    return sem.substr(5, 1) * 2;\n  }\n}; //check if the semester chosen is in the past or future\n\nexport const checkIsPast = (curr, user, currentSemester, month) => {\n  const currSem = convertSemToNumber(curr);\n\n  if (user > currSem) {\n    return true;\n  } else if (user === currSem) {\n    if (currentSemester === \"Semester 1\" && month === 12 || currentSemester === \"Semester 2\" && month >= 6) {\n      return true;\n    }\n  } else {\n    return false;\n  }\n};","map":{"version":3,"sources":["/Users/frisciliasultan/Documents/Orbitalhosting/src/utils/commonFunctions.js"],"names":["React","Select","TableContent","YearDisplay","Option","generateOptions","optionList","category","object","map","option","grade","index","fullName","tag","name","substr","i","handleSaveClick","props","userData","modPlan","modplan","selectedModules","residential","settings","userInfo","major","majorIndex","specialisation","matriculationYear","targetGradYear","cap","targetCap","updateSettings","generateObject","matriYear","gradYear","module","matYear","Number","noOfYear","display","start","push","year","AY","sem1","sem2","Math","ceil","nthFutureSem","sem","console","log","userSemester","currentSemester","status","checkIsPast","month","nextStatus","handleGradeClick","handleCheckboxChange","length","gradeList","convertSemToNumber","curr","user","currSem"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Select } from \"antd\";\nimport { TableContent } from \"../Pages/Module Selection Page/Table Content\";\nimport  YearDisplay  from \"../Pages/Module Planner Page/YearDisplay\";\n\nconst { Option } = Select;\n\nexport const generateOptions = (optionList, category, object) => {\n    if(optionList) {\n        if(category === \"grade\") {\n            return optionList.map((option) => {\n                return (\n                    <Option value={option.grade} object={object}>\n                    {option.grade}\n                    </Option>\n                );\n            })\n        // } else if (category === 'faculty') {\n        //         return optionList.map((option, index) => {\n        //             return (\n        //                 <Option \n        //                     key={option.name} \n        //                     value={option.name}\n        //                     name={category}\n        //                     selectedindex={index}>\n        //                 {option.name}\n        //                 </Option>\n        //             );\n        //         })\n\n        //DO NOT DELETE CATEGORY. Need diff category names for saving input\n        } else if (category === 'major' || category === \"specialisation\" \n                    || category === \"secondMajors\" || category === \"minors\" \n                        || category === \"residence\"\n                        ) {\n            return optionList.map((option, index) => {\n                if(option) {\n                    return (\n                        <Option \n                            key={option.fullName} \n                            value={option.fullName}\n                            name={category}\n                            tag={option.tag}\n                            selectedindex={index}>\n                            {option.name}\n                        </Option>\n                    );\n                }\n            })\n        } else if (category === 'matriculationYear') {\n            return optionList.map((option) => {\n                return (\n                    <Option \n                        key={option.substr(3,9)} \n                        value={option.substr(3,9)}\n                        name={category}>\n                    {option}\n                    </Option>\n                );\n            })\n        } else if (category === 'targetGradYear') {\n            return optionList.map((option) => {\n                return (\n                    <Option \n                        key={option.substr(6,9)} \n                        value={option.substr(6,9)}\n                        name={category}>\n                    {option}\n                    </Option>\n                );\n            })\n        } \n    \n        return optionList.map((option, i) => {\n            return (\n                <Option key={option} value={option} index={i}>\n                {option}\n                </Option>\n            );\n        });\n    }\n}\n\nexport const handleSaveClick = (props) => {\n    const userData = {\n        modPlan: props.modplan.selectedModules,\n        residential: props.settings.userInfo.residential,\n        major: props.settings.userInfo.major,\n        majorIndex: props.settings.userInfo.majorIndex,\n        specialisation: props.settings.userInfo.specialisation,\n        matriculationYear: props.settings.userInfo.matriculationYear,\n        targetGradYear: props.settings.userInfo.targetGradYear,\n        cap: props.cap.cap,\n        targetCap: props.cap.targetCap\n    }\n\n    props.updateSettings(userData);\n}\n\n// generate Year Cards in Module Planner Page / Tables in Mod Info Page\nexport const generateObject = (matriYear, gradYear, category, module, props) => {\n\n    if(matriYear && gradYear) {\n        const matYear = Number(matriYear.substr(0, 4));\n        const noOfYear = Number(gradYear.substr(5, 4)) - matYear;\n        let display = [];\n\n        if(category === \"yearDisplay\") {\n            for(let i = 1; i <= noOfYear; i++) {\n                const start = matYear + i - 1;\n                display.push({\n                    year: `Year ${i}`,\n                    AY: `${start}/${start + 1}`\n                })\n            }\n            \n            return display.map((object) => {\n                    return (\n                        <YearDisplay\n                            year={object.year}\n                            AY={object.AY}\n                            module={module} />\n                    )\n                })\n        } else {\n            let sem1;\n            let sem2;\n\n            for(let i = 1; i < (noOfYear * 2); i += 2) {\n                const year = Math.ceil(i / 2);\n                sem1 = `Year ${year} Semester 1`;\n                sem2 = `Year ${year} Semester 2`;\n                display[i - 1] = sem1;\n                display[i] = sem2;\n            }\n            \n            if(category === \"semesterOptions\") {\n                return display;\n            } else if(category === \"tables\") {\n                let nthFutureSem = 0;\n               \n                return display.map((sem, i) => {\n                    if(props) {\n                        console.log(props.userSemester)\n                        console.log(props.currentSemester)\n                        const status = checkIsPast(sem, props.userSemester, props.currentSemester, props.month);\n                        const nextStatus = status \n                                            ? checkIsPast(display[i + 1], props.userSemester, props.currentSemester, props.month)\n                                            : null;\n                        if(!status) {\n                            nthFutureSem++\n                        }\n                        // if(i === (display.length - 1) || (status && !nextStatus)) {\n                        //     isLastinCategory = true;\n                        // }\n     \n                        return (\n                            <TableContent\n                                title={sem}\n                                module={module}\n                                category={\"capTable\"}\n                                handleGradeClick={props.handleGradeClick}\n                                handleCheckboxChange={props.handleCheckboxChange}\n                                isPast={status}\n                                displayHeader={ i === 0 || nthFutureSem === 1}\n                                lastInCategory={i === (display.length - 1) || (status && !nextStatus)}\n                                gradeList={props.gradeList}/>\n                        )\n                    } else {\n                        return (\n                            <TableContent\n                                title={sem}\n                                module={module}\n                                category={category}/>\n                        )\n                    }\n                })\n            } \n        }\n    }\n} \n\n     //Eg. Y2S1 => 3 (third sem)\n    export const convertSemToNumber = (sem) => {\n        if(sem.substr(7) === \"Semester 1\") {\n            return sem.substr(5,1) * 2 - 1;\n        } else {\n            return sem.substr(5,1) * 2;\n        }\n    }\n\n    //check if the semester chosen is in the past or future\n    export const checkIsPast = (curr, user, currentSemester, month) => {\n        \n        const currSem = convertSemToNumber(curr);\n        if (user > currSem) {\n            return true;\n        } else if (user === currSem) {\n            if ((currentSemester === \"Semester 1\" && month === 12) \n                || (currentSemester === \"Semester 2\" && month >= 6)) {\n                    return true;\n            }\n        } else {\n            return false;\n        }\n    };"]},"metadata":{},"sourceType":"module"}