{"ast":null,"code":"var _jsxFileName = \"/Users/frisciliasultan/Documents/Orbital/client/src/Pages/Module Planner Page/AutocompleteSearch.jsx\";\nimport React from 'react';\n\nclass AutoCompleteText extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: ['Fris', 'Dani', 'Hey', 'Ho'],\n      suggestions: [],\n      text: ''\n    };\n    this.handleTextChange = this.handleTextChange.bind(this);\n    this.renderSuggestions = this.renderSuggestions.bind(this);\n    this.suggestionsSelected = this.suggestionsSelected.bind(this);\n  }\n\n  handleTextChange(e) {\n    const value = e.target.value;\n    let suggestions = [];\n\n    if (value.length > 0) {\n      const regex = new RegExp(`^${value}`, 'i');\n      suggestions = this.state.items.sort().filter(v => regex.test(v));\n    }\n\n    this.setState(() => ({\n      suggestions\n    }));\n  }\n\n  renderSuggestions() {\n    const {\n      suggestions\n    } = this.state;\n\n    if (suggestions.length === 0) {\n      return null;\n    }\n\n    return /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, suggestions.map(item => /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 44\n      }\n    }, item)));\n  }\n\n  suggestionsSelected(value) {\n    this.setState(() => ({\n      text: value,\n      suggestions: []\n    }));\n  }\n\n  render() {\n    const {\n      text\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      value: \"\",\n      onChange: this.handleTextChange,\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }), this.renderSuggestions());\n  }\n\n}\n\nexport default AutoCompleteText;","map":{"version":3,"sources":["/Users/frisciliasultan/Documents/Orbital/client/src/Pages/Module Planner Page/AutocompleteSearch.jsx"],"names":["React","AutoCompleteText","Component","constructor","props","state","items","suggestions","text","handleTextChange","bind","renderSuggestions","suggestionsSelected","e","value","target","length","regex","RegExp","sort","filter","v","test","setState","map","item","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,gBAAN,SAA+BD,KAAK,CAACE,SAArC,CAA+C;AAC3CC,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAChB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,KAAK,EAAE,CAAC,MAAD,EAAQ,MAAR,EAAe,KAAf,EAAqB,IAArB,CAAT;AACEC,MAAAA,WAAW,EAAE,EADf;AAEEC,MAAAA,IAAI,EAAE;AAFR,KAAb;AAIA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBD,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKE,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBF,IAAzB,CAA8B,IAA9B,CAA3B;AACH;;AAEDD,EAAAA,gBAAgB,CAAEI,CAAF,EAAK;AACjB,UAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASD,KAAvB;AACA,QAAIP,WAAW,GAAG,EAAlB;;AACA,QAAIO,KAAK,CAACE,MAAN,GAAe,CAAnB,EAAsB;AAClB,YAAMC,KAAK,GAAG,IAAIC,MAAJ,CAAY,IAAGJ,KAAM,EAArB,EAAwB,GAAxB,CAAd;AACAP,MAAAA,WAAW,GAAG,KAAKF,KAAL,CAAWC,KAAX,CAAiBa,IAAjB,GAAwBC,MAAxB,CAA+BC,CAAC,IAAIJ,KAAK,CAACK,IAAN,CAAWD,CAAX,CAApC,CAAd;AACH;;AACD,SAAKE,QAAL,CAAc,OAAO;AAAEhB,MAAAA;AAAF,KAAP,CAAd;AACH;;AAEDI,EAAAA,iBAAiB,GAAI;AACjB,UAAM;AAAEJ,MAAAA;AAAF,QAAkB,KAAKF,KAA7B;;AACA,QAAIE,WAAW,CAACS,MAAZ,KAAuB,CAA3B,EAA8B;AAC1B,aAAO,IAAP;AACH;;AAED,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKT,WAAW,CAACiB,GAAZ,CAAiBC,IAAD,iBAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,IAAL,CAA1B,CADL,CADJ;AAMH;;AAEDb,EAAAA,mBAAmB,CAAEE,KAAF,EAAS;AACxB,SAAKS,QAAL,CAAc,OAAO;AACjBf,MAAAA,IAAI,EAAEM,KADW;AAEjBP,MAAAA,WAAW,EAAE;AAFI,KAAP,CAAd;AAIH;;AAEDmB,EAAAA,MAAM,GAAI;AACN,UAAM;AAAElB,MAAAA;AAAF,QAAW,KAAKH,KAAtB;AACA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACO,MAAA,KAAK,EAAC,EADb;AAEO,MAAA,QAAQ,EAAE,KAAKI,gBAFtB;AAGO,MAAA,IAAI,EAAC,MAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAKK,KAAKE,iBAAL,EALL,CADJ;AASH;;AAvD0C;;AA0D/C,eAAeV,gBAAf","sourcesContent":["import React from 'react';\n\nclass AutoCompleteText extends React.Component {\n    constructor (props) {\n        super(props);\n\n        this.state = { items: ['Fris','Dani','Hey','Ho'] ,\n                       suggestions: [],\n                       text: ''\n                     };\n        this.handleTextChange = this.handleTextChange.bind(this);\n        this.renderSuggestions = this.renderSuggestions.bind(this);\n        this.suggestionsSelected = this.suggestionsSelected.bind(this);\n    }\n\n    handleTextChange (e) {\n        const value = e.target.value;\n        let suggestions = [];\n        if (value.length > 0) {\n            const regex = new RegExp(`^${value}`, 'i');\n            suggestions = this.state.items.sort().filter(v => regex.test(v));\n        }\n        this.setState(() => ({ suggestions }));\n    }\n\n    renderSuggestions () {\n        const { suggestions } = this.state\n        if (suggestions.length === 0) {\n            return null;\n        }\n\n        return (\n            <ul>\n                {suggestions.map((item) => <li>{item}</li>)}\n            </ul>\n        );\n\n    }\n\n    suggestionsSelected (value) {\n        this.setState(() => ({\n            text: value,\n            suggestions: []\n        }))\n    }\n\n    render () {\n        const { text } = this.state;\n        return (\n            <div>\n                <input \n                       value=''\n                       onChange={this.handleTextChange}\n                       type=\"text\" />\n                {this.renderSuggestions()}\n            </div>\n        )\n    }\n}\n\nexport default AutoCompleteText;"]},"metadata":{},"sourceType":"module"}