{"ast":null,"code":"var _jsxFileName = \"/Users/frisciliasultan/Documents/Orbitalhosting/src/Settings/AcadSettings.jsx\";\nimport React, { useState, useEffect, useReducer } from 'react';\nimport Options from '../Settings/Options';\nimport { Link } from 'react-router-dom';\nimport axios from \"axios\";\nimport { Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport PropTypes from \"prop-types\";\nimport { updateSettings, setMatriculationYearOptions, setTargetGradYearOptions, setDegreeOptions } from \"../actions/settingsActions\";\nimport { deleteUser } from \"../actions/authActions\";\nimport { removeSuccess } from \"../actions/successActions\";\nimport isEmpty from \"is-empty\";\nimport { generateOptions } from '../utils/commonFunctions';\n\nconst AcadSettings = props => {\n  const [userInput, setUserInput] = useReducer((state, newState) => ({ ...state,\n    ...newState\n  }), {\n    faculty: props.userInfo.faculty,\n    facIndex: props.userInfo.facIndex,\n    major: props.userInfo.major,\n    majorIndex: props.userInfo.majorIndex,\n    specialisation: props.userInfo.specialisation,\n    residence: props.userInfo.residential,\n    matriculationYear: props.userInfo.matriculationYear,\n    targetGradYear: props.userInfo.targetGradYear\n  });\n  useEffect(() => {\n    if (isEmpty(props.settings.facultyOptions)) {\n      props.setDegreeOptions();\n    }\n  }, []);\n  useEffect(() => {\n    if (props.settings.currentAY && isEmpty(props.settings.matriculationOptions)) {\n      props.setMatriculationYearOptions(props.settings.currentAY, props.settings.currentSemester);\n      props.setTargetGradYearOptions(props.settings.currentAY, props.settings.currentSemester);\n    }\n  }, [props.settings.currentAY]);\n  useEffect(() => {\n    if (!isEmpty(props.settings.userInfo)) {\n      setUserInput({\n        faculty: props.userInfo.faculty,\n        facIndex: props.userInfo.facIndex,\n        major: props.userInfo.major,\n        majorIndex: props.userInfo.majorIndex,\n        specialisation: props.userInfo.specialisation,\n        residence: props.userInfo.residential,\n        matriculationYear: props.userInfo.matriculationYear,\n        targetGradYear: props.userInfo.targetGradYear\n      });\n    }\n  }, [props.settings.userInfo]);\n\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      selectedIndex\n    } = e.target;\n\n    if (name === \"faculty\") {\n      setUserInput({\n        [name]: value,\n        facIndex: selectedIndex - 1,\n        major: null\n      });\n    } else if (name === \"major\") {\n      setUserInput({\n        [name]: value,\n        majorIndex: selectedIndex - 1\n      });\n    } else {\n      setUserInput({\n        [name]: value\n      });\n    }\n\n    console.log(userInput.facIndex);\n  }; //turn array of choices into options dropdown\n\n\n  const generateOptions = choices => {\n    if (choices === 'faculty') {\n      return props.settings.facultyOptions.map(obj => {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          value: Object.keys(obj),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 9\n          }\n        }, Object.keys(obj));\n      });\n    } else if (choices === 'major') {\n      if (userInput.faculty) {\n        return props.settings.facultyOptions[facIndex][userInput.faculty].map(obj => {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            value: Object.keys(obj),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 25\n            }\n          }, Object.keys(obj));\n        });\n      }\n    } else if (choices === 'specialisation') {\n      if (userInput.major && userInput.faculty) {\n        return props.settings.facultyOptions[facIndex][userInput.faculty][userInput.majorIndex][userInput.major].map(item => {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 23\n            }\n          }, item);\n        });\n      }\n    } else if (choices === 'residence') {\n      return props.settings.residenceOptions.map(obj => {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          value: obj,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 9\n          }\n        }, obj);\n      });\n    } else {\n      if (choices === 'matriculationYear') {\n        return props.settings.matriculationOptions.map(option => {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            value: option.substr(3, 9),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 13\n            }\n          }, option);\n        });\n      } else {\n        return props.settings.targetGradOptions.map(option => {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            value: option.substr(6, 9),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }\n          }, option);\n        });\n      }\n    }\n  }; //Check if there is any part of userData that is undefined/falsy\n\n\n  const checkSubmission = userData => {\n    const keys = Object.keys(userData);\n    let status;\n\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      status = userData[key] || userData[key] === 0 ? true : false;\n      console.log(status);\n      console.log(userData[key]);\n\n      if (!status) {\n        return status = false;\n      }\n    }\n\n    return status;\n  };\n\n  const handleSubmit = () => {\n    const userData = {\n      faculty: userInput.faculty,\n      facIndex: userInput.facIndex,\n      major: userInput.major,\n      majorIndex: userInput.majorIndex,\n      specialisation: userInput.specialisation,\n      residential: userInput.residence,\n      matriculationYear: userInput.matriculationYear,\n      targetGradYear: userInput.targetGradYear,\n      modPlan: props.modplan,\n      cap: props.cap.cap,\n      targetCap: props.cap.targetCap\n    }; //if all props of userData is filled, allow user to save\n    //else alert popup to redirect user back to filling in their data (TEMPORARY)\n\n    return checkSubmission(userData) ? props.updateSettings(userData) : alert(\"Please fill in all the fields before saving!\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }\n  }, \"Enter your particulars so that we can personalise your user experience!\"), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Options, {\n    title: \"faculty\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 11\n    }\n  }, \"Your Faculty: \", userInput.faculty), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"faculty\",\n    onChange: handleChange,\n    value: userInput.faculty,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    selected: true,\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 17\n    }\n  }, \"Choose Your Faculty\"), !isEmpty(props.settings.userInfo) && generateOptions(props.settings.facultyOptions, \"faculty\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }\n  }, \"Your Major: \", userInput.major), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"major\",\n    onChange: handleChange,\n    value: userInput.major,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }\n  }, \"(\", /*#__PURE__*/React.createElement(\"option\", {\n    selected: true,\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 18\n    }\n  }, \"Choose Your Major\"), \")\", !isEmpty(props.settings.userInfo) && generateOptions(\"major\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }\n  }, \"Your Specialisation: \", userInput.specialisation, \"  \"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"specialisation\",\n    onChange: handleChange,\n    value: userInput.specialisation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }\n  }, \"(\", /*#__PURE__*/React.createElement(\"option\", {\n    selected: true,\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 18\n    }\n  }, \"Choose Your Specialisation\"), \")\", !isEmpty(props.settings.userInfo) && generateOptions(\"specialisation\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 13\n    }\n  }, \"Your Residential College: \", userInput.residence), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"residence\",\n    onChange: handleChange,\n    value: userInput.residence,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 13\n    }\n  }, \"(\", /*#__PURE__*/React.createElement(\"option\", {\n    selected: true,\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 18\n    }\n  }, \"Choose Your Residence\"), \")\", generateOptions(props.settings.residenceOptions, \"residence\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 13\n    }\n  }, \"Year of Matriculation: \", userInput.matriculationYear), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"matriculationYear\",\n    onChange: handleChange,\n    value: userInput.matriculationYear,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 13\n    }\n  }, \"(\", /*#__PURE__*/React.createElement(\"option\", {\n    selected: true,\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 18\n    }\n  }, \"Choose Your Year of Matriculation\"), \")\", !isEmpty(props.settings.userInfo) && generateOptions(\"matriculationYear\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 13\n    }\n  }, \"Target Graduation Year: \", userInput.targetGradYear), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"targetGradYear\",\n    onChange: handleChange,\n    value: userInput.targetGradYear,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 13\n    }\n  }, \"(\", /*#__PURE__*/React.createElement(\"option\", {\n    selected: true,\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 18\n    }\n  }, \"Choose Your Target Graduation Year\"), \")\", !isEmpty(props.settings.userInfo) && generateOptions(\"targetGradYear\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: \"button\",\n    id: \"save\",\n    onClick: () => handleSubmit(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 9\n    }\n  }, \"Save Settings\"), !isEmpty(props.success) && setTimeout(props.removeSuccess, 500) && clearTimeout(setTimeout(props.removeSuccess, 2000)), !isEmpty(props.success) && props.history.push(\"/module-planner\") // <p className=\"success\">\n  //     {props.success}\n  // </p>\n  , /*#__PURE__*/React.createElement(Button, {\n    className: \"button\",\n    id: \"delete\",\n    onClick: () => props.deleteUser(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 9\n    }\n  }, \"Delete Account\"));\n};\n\nAcadSettings.propTypes = {\n  updateSettings: PropTypes.func.isRequired,\n  setMatriculationYearOptions: PropTypes.func.isRequired,\n  setTargetGradYearOptions: PropTypes.func.isRequired,\n  setDegreeOptions: PropTypes.func.isRequired,\n  removeSuccess: PropTypes.func.isRequired,\n  deleteUser: PropTypes.func.isRequired,\n  modplan: PropTypes.object.isRequired,\n  settings: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  modplan: state.modplan.selectedModules,\n  settings: state.settings,\n  userInfo: state.settings.userInfo,\n  cap: state.cap,\n  success: state.success\n});\n\nexport default connect(mapStateToProps, {\n  updateSettings,\n  setMatriculationYearOptions,\n  setTargetGradYearOptions,\n  setDegreeOptions,\n  removeSuccess,\n  deleteUser\n})(AcadSettings);","map":{"version":3,"sources":["/Users/frisciliasultan/Documents/Orbitalhosting/src/Settings/AcadSettings.jsx"],"names":["React","useState","useEffect","useReducer","Options","Link","axios","Button","connect","PropTypes","updateSettings","setMatriculationYearOptions","setTargetGradYearOptions","setDegreeOptions","deleteUser","removeSuccess","isEmpty","generateOptions","AcadSettings","props","userInput","setUserInput","state","newState","faculty","userInfo","facIndex","major","majorIndex","specialisation","residence","residential","matriculationYear","targetGradYear","settings","facultyOptions","currentAY","matriculationOptions","currentSemester","handleChange","e","name","value","selectedIndex","target","console","log","choices","map","obj","Object","keys","item","residenceOptions","option","substr","targetGradOptions","checkSubmission","userData","status","i","length","key","handleSubmit","modPlan","modplan","cap","targetCap","alert","success","setTimeout","clearTimeout","history","push","propTypes","func","isRequired","object","mapStateToProps","selectedModules"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useReducer} from 'react';\nimport Options from '../Settings/Options';\nimport { Link } from 'react-router-dom';\nimport axios from \"axios\";\nimport { Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport PropTypes from \"prop-types\";\nimport { updateSettings, setMatriculationYearOptions, setTargetGradYearOptions, setDegreeOptions } from \"../actions/settingsActions\";\nimport { deleteUser } from \"../actions/authActions\";\nimport { removeSuccess } from \"../actions/successActions\";\nimport isEmpty from \"is-empty\";\nimport { generateOptions } from '../utils/commonFunctions';\n\n\n\nconst AcadSettings = (props) => {\n  const [userInput, setUserInput] = useReducer(\n    (state, newState) => ({...state, ...newState}), \n    {\n      faculty: props.userInfo.faculty,\n      facIndex: props.userInfo.facIndex,\n      major: props.userInfo.major,\n      majorIndex: props.userInfo.majorIndex,\n      specialisation: props.userInfo.specialisation,\n      residence: props.userInfo.residential,\n      matriculationYear: props.userInfo.matriculationYear,\n      targetGradYear: props.userInfo.targetGradYear\n    }\n  )\n\n  useEffect(() => {\n    if(isEmpty(props.settings.facultyOptions)) {\n        props.setDegreeOptions();\n    }\n  }, []);\n\n  useEffect(() => {\n    if(props.settings.currentAY && isEmpty(props.settings.matriculationOptions)) {\n        props.setMatriculationYearOptions(props.settings.currentAY, props.settings.currentSemester);\n        props.setTargetGradYearOptions(props.settings.currentAY, props.settings.currentSemester);\n    }\n  }, [props.settings.currentAY]);\n\n  useEffect(() => {\n    if(!isEmpty(props.settings.userInfo)) {\n      setUserInput({\n        faculty: props.userInfo.faculty,\n        facIndex: props.userInfo.facIndex,\n        major: props.userInfo.major,\n        majorIndex: props.userInfo.majorIndex,\n        specialisation: props.userInfo.specialisation,\n        residence: props.userInfo.residential,\n        matriculationYear: props.userInfo.matriculationYear,\n        targetGradYear: props.userInfo.targetGradYear\n      });\n    }\n  }, [props.settings.userInfo]);\n\n  const handleChange = (e) => {\n    const {name, value, selectedIndex} = e.target;\n\n    if(name === \"faculty\") {\n      setUserInput({[name]: value,\n                      facIndex: (selectedIndex - 1),\n                      major: null});\n        \n    } else if(name === \"major\") {\n      setUserInput({[name]: value,\n                      majorIndex: (selectedIndex - 1)});\n\n    } else {\n      setUserInput({[name]: value});\n    } \n    console.log(userInput.facIndex);\n  };\n\n //turn array of choices into options dropdown\n  const generateOptions = (choices) => {\n    if(choices === 'faculty'){\n      return props.settings.facultyOptions.map((obj) => {\n        return (\n        <option value={Object.keys(obj)}>\n          {Object.keys(obj)}\n        </option>\n        );\n      });\n    } else if(choices === 'major') {\n        if(userInput.faculty) {\n        return props.settings.facultyOptions\n              [facIndex]\n              [userInput.faculty].map((obj) => {\n                      return (\n                        <option value={Object.keys(obj)}>\n                          {Object.keys(obj)}\n                        </option>\n                      )\n                  }\n        )}\n    } else if(choices === 'specialisation') {\n        if(userInput.major && userInput.faculty) {\n        return props.settings.facultyOptions\n              [facIndex]\n              [userInput.faculty][userInput.majorIndex][userInput.major].map((item) => {\n                    return (\n                      <option>\n                        {item}\n                      </option>\n                    )\n                  }    \n        )}\n    } else if(choices === 'residence') {\n      return props.settings.residenceOptions.map((obj) => {\n        return (\n        <option value={obj}>\n          {obj}\n        </option>\n        );\n      });\n    } else {\n        if(choices === 'matriculationYear') {\n          return props.settings.matriculationOptions.map((option) => {\n            return (\n            <option value={option.substr(3,9)}>\n              {option}\n            </option>\n            );\n          });\n        } else {\n            return props.settings.targetGradOptions.map((option) => {\n              return (\n              <option value={option.substr(6,9)}>\n                {option}\n              </option>\n              );\n            });\n          }\n      }\n}\n\n//Check if there is any part of userData that is undefined/falsy\nconst checkSubmission = (userData) => {\n  const keys = Object.keys(userData);\n  let status;\n\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    status = (userData[key] || userData[key] === 0) ? true : false;\n    console.log(status);\n    console.log(userData[key]);\n    if(!status) {\n      return status = false;\n    }\n  }\n  return status;\n}\n\nconst handleSubmit = () => {\n  const userData = {\n    faculty: userInput.faculty,\n    facIndex: userInput.facIndex,\n    major: userInput.major,\n    majorIndex: userInput.majorIndex,\n    specialisation: userInput.specialisation,\n    residential: userInput.residence,\n    matriculationYear: userInput.matriculationYear,\n    targetGradYear: userInput.targetGradYear,\n    modPlan: props.modplan,\n    cap: props.cap.cap,\n    targetCap: props.cap.targetCap\n  }\n\n  //if all props of userData is filled, allow user to save\n  //else alert popup to redirect user back to filling in their data (TEMPORARY)\n  return checkSubmission(userData) ?  props.updateSettings(userData) : alert(\"Please fill in all the fields before saving!\");\n\n} \n\n  return (\n      <div className=\"container\">\n        <h5>Enter your particulars so that we can personalise your user experience!</h5>\n\n        <form>\n          <Options\n            title=\"faculty\"/>\n\n          <label>Your Faculty: {userInput.faculty}</label>\n          <select\n              name=\"faculty\" \n              onChange={handleChange}\n              value={userInput.faculty}>\n                <option selected disabled>\n                  Choose Your Faculty\n                </option>\n              {!isEmpty(props.settings.userInfo) && generateOptions(props.settings.facultyOptions, \"faculty\")}\n              {/* {generateOptions(props.settings.facultyOptions, \"faculty\")} */}\n            </select>   \n            <br/>\n            <br/>\n\n            <label>Your Major: {userInput.major}</label>\n            <select\n              name=\"major\"\n              onChange={handleChange}\n              value={userInput.major}>\n                (<option selected disabled>\n                  Choose Your Major\n                </option>)\n              {!isEmpty(props.settings.userInfo) && generateOptions(\"major\") }\n            </select>\n            <br/>\n            <br/>\n\n            <label>Your Specialisation: {userInput.specialisation}  </label>\n            <select\n              name=\"specialisation\"\n              onChange={handleChange}\n              value={userInput.specialisation}>\n                (<option selected disabled>\n                  Choose Your Specialisation\n                </option>)\n              {!isEmpty(props.settings.userInfo) && generateOptions(\"specialisation\")}\n            </select>\n            <br/>\n            <br/>\n\n            <label>Your Residential College: {userInput.residence}</label>\n            <select\n              name=\"residence\"\n              onChange={handleChange}\n              value={userInput.residence}>\n                (<option selected disabled>\n                  Choose Your Residence\n                </option>)\n              {/* {!isEmpty(props.settings.userInfo) && generateOptions(\"residence\")} */}\n              {generateOptions(props.settings.residenceOptions, \"residence\")}\n            </select>\n            <br/>\n            <br/>\n\n            <label>Year of Matriculation: {userInput.matriculationYear}</label>\n            <select\n              name=\"matriculationYear\"\n              onChange={handleChange}\n              value={userInput.matriculationYear}>\n                (<option selected disabled>\n                  Choose Your Year of Matriculation\n                </option>)\n              {!isEmpty(props.settings.userInfo) && generateOptions(\"matriculationYear\")}\n            </select>\n            <br/>\n            <br/>\n\n            <label>Target Graduation Year: {userInput.targetGradYear}</label>\n            <select\n              name=\"targetGradYear\"\n              onChange={handleChange}\n              value={userInput.targetGradYear}>\n                (<option selected disabled>\n                  Choose Your Target Graduation Year\n                </option>)\n              {!isEmpty(props.settings.userInfo) && generateOptions(\"targetGradYear\")}\n            </select>\n            <br/>\n            <br/>\n          </form>\n\n        <Button className='button' id='save' onClick={() => handleSubmit()}>Save Settings</Button>\n        {!isEmpty(props.success) && \n                    setTimeout(props.removeSuccess, 500) &&\n                    clearTimeout(setTimeout(props.removeSuccess, 2000))}\n        {!isEmpty(props.success) && props.history.push(\"/module-planner\")\n                // <p className=\"success\">\n                //     {props.success}\n                // </p>\n                \n                }\n                \n               \n\n        <Button className='button' id='delete' onClick={() => props.deleteUser()}>Delete Account</Button>\n        \n      </div>\n  );\n}\n\n\nAcadSettings.propTypes = {\n  updateSettings: PropTypes.func.isRequired,\n  setMatriculationYearOptions: PropTypes.func.isRequired,\n  setTargetGradYearOptions: PropTypes.func.isRequired,\n  setDegreeOptions: PropTypes.func.isRequired,\n  removeSuccess: PropTypes.func.isRequired,\n  deleteUser: PropTypes.func.isRequired,\n  modplan: PropTypes.object.isRequired,\n  settings: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  modplan: state.modplan.selectedModules,\n  settings: state.settings,\n  userInfo: state.settings.userInfo,\n  cap: state.cap,\n  success: state.success\n});\n\nexport default connect(mapStateToProps, \n  { updateSettings, setMatriculationYearOptions, setTargetGradYearOptions, setDegreeOptions, removeSuccess, deleteUser }) (AcadSettings);\n"]},"metadata":{},"sourceType":"module"}