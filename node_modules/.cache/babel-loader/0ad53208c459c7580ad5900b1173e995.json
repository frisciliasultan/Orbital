{"ast":null,"code":"var _jsxFileName = \"/Users/frisciliasultan/Documents/Orbital/client/src/Pages/CAP Calculator Page/CAPCalculatorPage.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport { setSemesterOptions, setModulesForCAP } from '../../actions/capActions';\nimport { updateSettings, initialSettings } from \"../../actions/settingsActions\";\nimport { setSelectedModules } from \"../../actions/modplanActions\";\nimport { generateOptions } from \"../../utils/optionGenerator\";\nimport isEmpty from 'is-empty';\n\nconst CAPCalculatorPage = props => {\n  const gradeList = [{\n    grade: \"A+\",\n    gradePoint: 5\n  }, {\n    grade: \"A\",\n    gradePoint: 5\n  }, {\n    grade: \"A-\",\n    gradePoint: 5\n  }, {\n    grade: \"B+\",\n    gradePoint: 5\n  }, {\n    grade: \"B\",\n    gradePoint: 5\n  }, {\n    grade: \"B-\",\n    gradePoint: 5\n  }, {\n    grade: \"C+\",\n    gradePoint: 5\n  }, {\n    grade: \"C\",\n    gradePoint: 5\n  }, {\n    grade: \"D+\",\n    gradePoint: 5\n  }, {\n    grade: \"D\",\n    gradePoint: 5\n  }, {\n    grade: \"F\",\n    gradePoint: 0\n  }];\n  const [semester, setSemester] = useState(\"Year 1 Semester 1\");\n  const [transcript, setTranscript] = useState([]);\n  useEffect(() => {\n    if (isEmpty(props.cap.semesterOptions) && !isEmpty(props.settings.userInfo)) {\n      const start = props.settings.userInfo.matriculationYear.substr(0, 4);\n      const end = props.settings.userInfo.targetGradYear.substr(5, 4);\n      const diff = end - start;\n      props.setSemesterOptions(diff);\n    }\n\n    if (!isEmpty(props.settings.userInfo.modPlan) && isEmpty(props.selectedModules)) {\n      props.setSelectedModules(null, props.settings.userInfo.modPlan);\n    }\n  }, [props.settings.userInfo]);\n  useEffect(() => {\n    props.setModulesForCAP(props.selectedModules);\n  }, [props.selectedModules]); // const gradeDropDown = ;\n\n  const handleGradeClick = (e, object) => {\n    console.log(object);\n    const module = {\n      moduleCode: object.moduleCode,\n      title: object.title,\n      moduleCredit: object.moduleCredit,\n      grade: e.target.value\n    };\n    setTranscript(transcript.push(module));\n  };\n\n  const generateTable = () => {\n    return props.cap.CAPModules.filter(object => object.location === semester).map(object => {\n      const {\n        moduleCode,\n        title,\n        moduleCredit\n      } = object;\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: moduleCode,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 29\n        }\n      }, title), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 29\n        }\n      }, moduleCode), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 29\n        }\n      }, moduleCredit), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"select\", {\n        name: object,\n        onChange: e => handleGradeClick(e, object),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        selected: true,\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 37\n        }\n      }, \"Grade\"), generateOptions(gradeList, \"grade\"))));\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ml-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"display-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, \"CAP Calculator\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, \"CAP at the beginning of the semester: \", props.settings.userInfo.cap, \" \"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, \"Semester: \"), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"time\",\n    onChange: e => setSemester(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, isEmpty(props.cap.semesterOptions) && /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 52\n    }\n  }, \"Year 1 Semester 1\"), generateOptions(props.cap.semesterOptions)), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, \"Courses taken this semester\"), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table table-hover\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, \"Module Title\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, \"Module Code\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, \"Modular Credits\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }, \"Grade\"), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, !isEmpty(props.settings.userInfo) && generateTable())));\n};\n\nCAPCalculatorPage.propType = {\n  setSemesterOptions: PropTypes.func.isRequired,\n  setModulesForCAP: PropTypes.func.isRequired,\n  setSelectedModules: PropTypes.func.isRequired,\n  updateSettings: PropTypes.func.isRequired,\n  initialSettings: PropTypes.func.isRequired,\n  generateOptions: PropTypes.func.isRequired,\n  settings: PropTypes.object.isRequired,\n  cap: PropTypes.object.isRequired,\n  selectedModules: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  settings: state.settings,\n  cap: state.cap,\n  selectedModules: state.modplan.selectedModules\n});\n\nexport default connect(mapStateToProps, {\n  setSemesterOptions,\n  setModulesForCAP,\n  setSelectedModules,\n  updateSettings,\n  initialSettings\n})(CAPCalculatorPage);\n{\n  /* <label>CAP: </label>\n            <input type=\"text\" name=\"prevCAP\" />\n            <label>Credits Earned: </label>\n            <input type=\"text\" name=\"prevCreditsEarned\" />\n            <br/>\n            <br/> */\n}\n{\n  /* <label>Module</label>\n            <label>Grade</label>\n            <br/>\n            <input type=\"text\" placeholder=\"Credits\"/>\n            <input type=\"text\" placeholder=\"MCs\" /> */\n}","map":{"version":3,"sources":["/Users/frisciliasultan/Documents/Orbital/client/src/Pages/CAP Calculator Page/CAPCalculatorPage.jsx"],"names":["React","useState","useEffect","connect","PropTypes","setSemesterOptions","setModulesForCAP","updateSettings","initialSettings","setSelectedModules","generateOptions","isEmpty","CAPCalculatorPage","props","gradeList","grade","gradePoint","semester","setSemester","transcript","setTranscript","cap","semesterOptions","settings","userInfo","start","matriculationYear","substr","end","targetGradYear","diff","modPlan","selectedModules","handleGradeClick","e","object","console","log","module","moduleCode","title","moduleCredit","target","value","push","generateTable","CAPModules","filter","location","map","propType","func","isRequired","mapStateToProps","state","modplan"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport { setSemesterOptions, setModulesForCAP } from '../../actions/capActions';\nimport { updateSettings, initialSettings } from \"../../actions/settingsActions\";\nimport { setSelectedModules } from \"../../actions/modplanActions\";\nimport { generateOptions } from \"../../utils/optionGenerator\";\nimport isEmpty from 'is-empty';\n\n\nconst CAPCalculatorPage = (props) => {\n    const gradeList = [\n                        {grade: \"A+\", gradePoint: 5},\n                        {grade: \"A\", gradePoint: 5},\n                        {grade: \"A-\", gradePoint: 5},\n                        {grade: \"B+\", gradePoint: 5},\n                        {grade: \"B\", gradePoint: 5},\n                        {grade: \"B-\", gradePoint: 5},\n                        {grade: \"C+\", gradePoint: 5},\n                        {grade: \"C\", gradePoint: 5},\n                        {grade: \"D+\", gradePoint: 5},\n                        {grade: \"D\", gradePoint: 5},\n                        {grade: \"F\", gradePoint: 0}\n    ]       \n\n    const [semester, setSemester] = useState(\"Year 1 Semester 1\");\n    const [transcript, setTranscript] = useState([]);\n\n    useEffect(() => {\n        if(isEmpty(props.cap.semesterOptions) && !isEmpty(props.settings.userInfo)){\n            const start = props.settings.userInfo.matriculationYear.substr(0, 4);\n            const end = props.settings.userInfo.targetGradYear.substr(5, 4);\n            const diff = end - start;\n            props.setSemesterOptions(diff);\n        }\n        if(!isEmpty(props.settings.userInfo.modPlan) && isEmpty(props.selectedModules)) {\n            props.setSelectedModules(null, props.settings.userInfo.modPlan)\n        }\n    }, [props.settings.userInfo])\n\n    useEffect(() => {\n        props.setModulesForCAP(props.selectedModules);\n    }, [props.selectedModules])\n    \n    // const gradeDropDown = ;\n\n    const handleGradeClick = (e, object) => {\n        console.log(object)\n        const module = {\n                        moduleCode: object.moduleCode,\n                        title: object.title,\n                        moduleCredit: object.moduleCredit,\n                        grade: e.target.value\n        };\n        setTranscript(transcript.push(module));\n    }\n\n    const generateTable = () => {\n            return props.cap.CAPModules\n                .filter((object) => object.location === semester)\n                .map((object) => {\n                    const { moduleCode, title, moduleCredit } = object;\n                    return (\n                        <tr key={moduleCode}>\n                            <td>{title}</td>\n                            <td>{moduleCode}</td>\n                            <td>{moduleCredit}</td>\n                            <td>\n                                <select \n                                    name={object}\n                                    onChange={(e) => handleGradeClick(e, object)}>\n                                    <option selected disabled>Grade</option>\n                                    {generateOptions(gradeList, \"grade\")}\n                                </select>\n                            </td>\n                        </tr>\n                    )\n                })   \n    }\n\n    \n    return(\n        <div className=\"ml-4\">\n        <h1 className=\"display-3\">CAP Calculator</h1>\n        <h3>CAP at the beginning of the semester: {props.settings.userInfo.cap} </h3>\n        {/* <h5 onClick={() => {this.setState({open: true})}}>Or click here to manually input CAP</h5> */}\n        {/* {this.state.open && (<input type=\"text\"/>)} */}\n        <label>Semester: </label>\n        <select \n            id=\"time\"\n            onChange={(e) => setSemester(e.target.value)}>\n\n            {/* buffer to display to wait for userInfo */}\n            {isEmpty(props.cap.semesterOptions) && <option>Year 1 Semester 1</option>}\n            {generateOptions(props.cap.semesterOptions)}\n        </select>\n        <br/>\n        \n        <h3>Courses taken this semester</h3>\n            <table className=\"table table-hover\">\n                <th>Module Title</th>\n                <th>Module Code</th>\n                <th>Modular Credits</th>\n                <th>Grade</th>\n                <tbody>\n                    {!isEmpty(props.settings.userInfo) && generateTable()}\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\n\nCAPCalculatorPage.propType = {\n    setSemesterOptions: PropTypes.func.isRequired,\n    setModulesForCAP: PropTypes.func.isRequired,\n    setSelectedModules: PropTypes.func.isRequired,\n    updateSettings: PropTypes.func.isRequired,\n    initialSettings: PropTypes.func.isRequired,\n    generateOptions: PropTypes.func.isRequired,\n    settings: PropTypes.object.isRequired,\n    cap: PropTypes.object.isRequired,\n    selectedModules: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    settings: state.settings,\n    cap: state.cap,\n    selectedModules: state.modplan.selectedModules\n});\n\nexport default connect(mapStateToProps,\n                        { setSemesterOptions, setModulesForCAP, setSelectedModules, updateSettings, initialSettings })\n                        (CAPCalculatorPage);\n\n\n\n {/* <label>CAP: </label>\n            <input type=\"text\" name=\"prevCAP\" />\n            <label>Credits Earned: </label>\n            <input type=\"text\" name=\"prevCreditsEarned\" />\n            <br/>\n            <br/> */}\n\n\n\n {/* <label>Module</label>\n            <label>Grade</label>\n            <br/>\n            <input type=\"text\" placeholder=\"Credits\"/>\n            <input type=\"text\" placeholder=\"MCs\" /> */}"]},"metadata":{},"sourceType":"module"}