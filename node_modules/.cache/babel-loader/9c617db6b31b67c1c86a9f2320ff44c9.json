{"ast":null,"code":"var _jsxFileName = \"/Users/frisciliasultan/Documents/Orbital/client/src/Pages/Module Planner Page/ModulePlannerPageTemp.jsx\";\nimport React from 'react';\nimport Board from './Board';\nimport Rules from './Rules';\nimport YearDisplay from './YearDisplay';\nimport './plannertemp.css';\nimport { Button, Card } from 'react-bootstrap';\nimport { HTML5Backend as Backend } from 'react-dnd-html5-backend';\nimport { DndProvider } from 'react-dnd';\n\nclass ModulePlannerPageTemp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedModules: null,\n      isLoading: false,\n      modulesSelected: ['MA1101R'],\n      rules: {\n        _id: \"5ed0d9a9a9225a12882ec26d\",\n        name: \"Degree Requirement\",\n        desc: \"Complete at least 20MCs worth of General Education Modules, with at least 1 module in each of the GEH, GEQ, GER, GES and GET pillars\",\n        tag: \"r_ulr\",\n        sub: [{\n          _id: \"5ed0dd49a9225a12882ec26e\",\n          name: \"University Level Requirement\",\n          desc: \"Complete a GEH-coded module\",\n          tag: \"r_geh_pillar\",\n          sub: [{\n            _id: \"5ed0dd54a9225a12882ec26f\",\n            name: \"GEQ Pillar\",\n            desc: \"Complete a GEQ-coded module\",\n            tag: \"r_geq_pillar\"\n          }, {\n            _id: \"5ed0dd60a9225a12882ec270\",\n            name: \"GER Pillar\",\n            desc: \"Complete a GER-coded module\",\n            tag: \"r_ger_pillar\"\n          }, {\n            _id: \"5ed0dd6ca9225a12882ec271\",\n            name: \"GES Pillar\",\n            desc: \"Complete a GES-coded module\",\n            tag: \"r_ges_pillar\"\n          }, {\n            _id: \"5ed0dd76a9225a12882ec272\",\n            name: \"GET Pillar\",\n            desc: \"Complete a GET-coded module\",\n            tag: \"r_get_pillar\"\n          }]\n        }, {\n          _id: \"5ed0dd54a9225a12882ec26f\",\n          name: \"GEQ Pillar\",\n          desc: \"Complete a GEQ-coded module\",\n          tag: \"r_geq_pillar\"\n        }, {\n          _id: \"5ed0dd60a9225a12882ec270\",\n          name: \"GER Pillar\",\n          desc: \"Complete a GER-coded module\",\n          tag: \"r_ger_pillar\"\n        }, {\n          _id: \"5ed0dd6ca9225a12882ec271\",\n          name: \"GES Pillar\",\n          desc: \"Complete a GES-coded module\",\n          tag: \"r_ges_pillar\"\n        }, {\n          _id: \"5ed0dd76a9225a12882ec272\",\n          name: \"GET Pillar\",\n          desc: \"Complete a GET-coded module\",\n          tag: \"r_get_pillar\"\n        }]\n      }\n    };\n    this.updateSelectedModules = this.updateSelectedModules.bind(this);\n  } // componentDidMount() {\n  //     // Call our fetch function below once the component mounts\n  //   this.callBackendAPI()\n  //     .then(res => this.setState({ data: res.express }))\n  //     .catch(err => console.log(err));\n  // }\n  //   // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n  // callBackendAPI = async () => {\n  //   const response = await fetch('http://localhost:5000/rules/r_cs_degree');\n  //   const body = await response.json();\n  //   if (response.status !== 200) {\n  //     throw Error(body.message) \n  //   }\n  //   return body;\n  // };\n\n\n  updateSelectedModules(object) {\n    let newSelectedModules = this.state.selectedModules ? this.state.selectedModules : [];\n\n    if (!newSelectedModules.includes(object)) {\n      newSelectedModules.push(object);\n      this.setState({\n        selectedModules: newSelectedModules\n      });\n    }\n\n    console.log(this.state.selectedModules);\n  }\n\n  updateModuleLocation(item) {\n    const moduleToChange = this.state.selectedModules.filter(object => object.moduleCode === item.id);\n    moduleToChange[0].location = item.location;\n    changedModule = this.state.selectedModules.filter(object => object.moduleCode !== item.id).concat(moduleToChange);\n    this.setState({\n      selectedModules: changedModule\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(DndProvider, {\n      backend: Backend,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(YearDisplay, {\n      year: \"Year 1\",\n      updateSelectedModules: this.updateSelectedModules,\n      selectedModules: this.state.selectedModules,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(YearDisplay, {\n      year: \"Year 2\",\n      updateSelectedModules: this.updateSelectedModules,\n      selectedModules: this.state.selectedModules,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Board, {\n      id: \"board-1\",\n      className: \"board\",\n      year: \"Year 3\",\n      semester: \"Semester 1\",\n      generateModuleCards: this.generateModuleCards,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Board, {\n      id: \"board-1\",\n      className: \"board\",\n      year: \"Year 4\",\n      semester: \"Semester 1\",\n      generateModuleCards: this.generateModuleCards,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      onClick: () => {\n        this.setState({\n          callBackendNow: true\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }\n    }, \"Evaluate\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Rules, {\n      rules: this.state.rules,\n      callBackendNow: this.state.callBackendNow,\n      modulesSelected: this.state.modulesSelected,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default ModulePlannerPageTemp;","map":{"version":3,"sources":["/Users/frisciliasultan/Documents/Orbital/client/src/Pages/Module Planner Page/ModulePlannerPageTemp.jsx"],"names":["React","Board","Rules","YearDisplay","Button","Card","HTML5Backend","Backend","DndProvider","ModulePlannerPageTemp","Component","constructor","props","state","selectedModules","isLoading","modulesSelected","rules","_id","name","desc","tag","sub","updateSelectedModules","bind","object","newSelectedModules","includes","push","setState","console","log","updateModuleLocation","item","moduleToChange","filter","moduleCode","id","location","changedModule","concat","render","generateModuleCards","callBackendNow"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Board from './Board';\nimport Rules from './Rules';\nimport YearDisplay from './YearDisplay';\nimport './plannertemp.css';\nimport { Button, Card } from 'react-bootstrap';\nimport { HTML5Backend as Backend } from 'react-dnd-html5-backend';\nimport { DndProvider } from 'react-dnd';\n\n\nclass ModulePlannerPageTemp extends React.Component {\n   constructor(props) {\n       super(props);\n       this.state = {   selectedModules: null,\n                        isLoading: false,\n                        modulesSelected: ['MA1101R'],\n                        rules: {_id:\"5ed0d9a9a9225a12882ec26d\",\n                                name:\"Degree Requirement\",\n                                desc:\"Complete at least 20MCs worth of General Education Modules, with at least 1 module in each of the GEH, GEQ, GER, GES and GET pillars\",\n                                tag:\"r_ulr\",\n                                sub:[\n                                        {_id:\"5ed0dd49a9225a12882ec26e\",\n                                        name:\"University Level Requirement\",\n                                        desc:\"Complete a GEH-coded module\",\n                                        tag:\"r_geh_pillar\",\n                                        sub: [\n                                                {_id:\"5ed0dd54a9225a12882ec26f\",\n                                                name:\"GEQ Pillar\",\n                                                desc:\"Complete a GEQ-coded module\",\n                                                tag:\"r_geq_pillar\"},\n                                                \n                                                {_id:\"5ed0dd60a9225a12882ec270\",\n                                                name:\"GER Pillar\",\n                                                desc:\"Complete a GER-coded module\",\n                                                tag:\"r_ger_pillar\"},\n                                                \n                                                {_id:\"5ed0dd6ca9225a12882ec271\",\n                                                name:\"GES Pillar\",\n                                                desc:\"Complete a GES-coded module\",\n                                                tag:\"r_ges_pillar\"},\n                                                \n                                                {_id:\"5ed0dd76a9225a12882ec272\",\n                                                name:\"GET Pillar\",\n                                                desc:\"Complete a GET-coded module\",\n                                                tag:\"r_get_pillar\"}\n                                            ]},\n                                        \n                                        {_id:\"5ed0dd54a9225a12882ec26f\",\n                                        name:\"GEQ Pillar\",\n                                        desc:\"Complete a GEQ-coded module\",\n                                        tag:\"r_geq_pillar\"},\n                                        \n                                        {_id:\"5ed0dd60a9225a12882ec270\",\n                                        name:\"GER Pillar\",\n                                        desc:\"Complete a GER-coded module\",\n                                        tag:\"r_ger_pillar\"},\n                                        \n                                        {_id:\"5ed0dd6ca9225a12882ec271\",\n                                        name:\"GES Pillar\",\n                                        desc:\"Complete a GES-coded module\",\n                                        tag:\"r_ges_pillar\"},\n                                        \n                                        {_id:\"5ed0dd76a9225a12882ec272\",\n                                        name:\"GET Pillar\",\n                                        desc:\"Complete a GET-coded module\",\n                                        tag:\"r_get_pillar\"}\n                                    ]\n\n                                },\n        }\n        this.updateSelectedModules = this.updateSelectedModules.bind(this);\n\n    }\n\n    // componentDidMount() {\n    //     // Call our fetch function below once the component mounts\n    //   this.callBackendAPI()\n    //     .then(res => this.setState({ data: res.express }))\n    //     .catch(err => console.log(err));\n    // }\n    //   // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n    // callBackendAPI = async () => {\n    //   const response = await fetch('http://localhost:5000/rules/r_cs_degree');\n    //   const body = await response.json();\n    \n    //   if (response.status !== 200) {\n    //     throw Error(body.message) \n    //   }\n    //   return body;\n    // };\n\n    updateSelectedModules(object) {\n        let newSelectedModules = this.state.selectedModules ? this.state.selectedModules : [];\n         if (!newSelectedModules.includes(object)) {\n             newSelectedModules.push(object);\n             this.setState({selectedModules: newSelectedModules});\n         }\n         console.log(this.state.selectedModules);\n \n     }\n    \n     updateModuleLocation(item) {\n        const moduleToChange = this.state.selectedModules.filter((object) => object.moduleCode === item.id);\n        moduleToChange[0].location =  item.location;\n        changedModule = this.state.selectedModules.filter((object) => object.moduleCode !== item.id).concat(moduleToChange)\n        this.setState({selectedModules: changedModule})\n    }\n    \n    \n    render () {\n        return (\n            <DndProvider backend={Backend}>\n\n                <YearDisplay\n                        year=\"Year 1\"\n                        updateSelectedModules={this.updateSelectedModules}\n                        selectedModules={this.state.selectedModules} />\n\n                <YearDisplay\n                        year=\"Year 2\"\n                        updateSelectedModules={this.updateSelectedModules}\n                        selectedModules={this.state.selectedModules} /> \n                \n\n                <Board \n                        id=\"board-1\"\n                        className=\"board\"\n                        year=\"Year 3\"\n                        semester=\"Semester 1\"\n                        generateModuleCards={this.generateModuleCards}>\n                    \n                </Board>\n\n                <Board \n                        id=\"board-1\"\n                        className=\"board\"\n                        year=\"Year 4\"\n                        semester=\"Semester 1\"\n                        generateModuleCards={this.generateModuleCards}>\n                    \n                </Board>\n                <br/>\n\n                <Button onClick={() => {this.setState({callBackendNow: true})}}>Evaluate</Button>\n                <br/>\n                <br/>\n\n                <Card>\n                    <Rules\n                        rules={this.state.rules}\n                        callBackendNow={this.state.callBackendNow}\n                        modulesSelected={this.state.modulesSelected}/>\n                </Card>\n                <br/>\n                \n\n           </DndProvider>\n        )\n    }\n}\n\nexport default ModulePlannerPageTemp;\n"]},"metadata":{},"sourceType":"module"}