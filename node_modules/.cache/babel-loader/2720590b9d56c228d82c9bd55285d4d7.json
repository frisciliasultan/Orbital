{"ast":null,"code":"var _jsxFileName = \"/Users/frisciliasultan/Documents/Orbitalhosting/src/Settings/Options.js\";\nimport React, { useState } from \"react\";\nimport AutoCompleteText from \"../Pages/Module Planner Page/AutocompleteText\";\nimport { generateOptions } from \"../utils/commonFunctions\";\nimport isEmpty from \"is-empty\";\nimport { Switch, Select } from \"antd\";\nimport DynamicFieldSet from \"./DynamicFieldSet\";\n\nconst Options = props => {\n  console.log(props.major);\n  const [isOpen, setIsOpen] = useState(isEmpty(props.value) || !props.value ? false : true);\n  const {\n    Option\n  } = Select;\n  let value;\n\n  if (!isEmpty(props.value) && props.name !== \"specialisation\" && props.name !== \"secondMajors\" && props.name !== \"minors\") {\n    if (props.name === \"honours\") {\n      value = props.value ? \"With Honours\" : \"Without Honours\";\n    } else {\n      value = props.value.name ? props.value.name : props.value;\n    }\n  } else {\n    value = \"None \";\n  }\n\n  const renderContent = () => {\n    if (props.editing) {\n      if (props.name !== \"honours\") {\n        if (!props.hidden) {\n          return /*#__PURE__*/React.createElement(Select, {\n            showSearch: true,\n            onChange: props.handleChange,\n            defaultValue: \"None \",\n            value: value,\n            style: {\n              width: 300\n            },\n            optionFilterProp: \"children\",\n            filterOption: (input, option) => {\n              return option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(Option, {\n            key: \"choose\" + props.label,\n            value: \"None \",\n            disabled: true,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 29\n            }\n          }, \"Choose \" + props.label), generateOptions(props.optionList, props.name));\n        } else if (isOpen) {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(DynamicFieldSet, {\n            label: props.label,\n            setUserInput: props.setUserInput,\n            optionList: props.optionList,\n            name: props.name,\n            value: props.value,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 25\n            }\n          }));\n        } else {\n          return value;\n        }\n      }\n    } else {\n      return value;\n    }\n  };\n\n  const handleSwitch = () => {\n    if (props.name === \"honours\") {\n      props.setUserInput({\n        major: { ...props.major,\n          honours: !isOpen\n        }\n      });\n    } else {\n      if (isOpen) {\n        if (props.name === \"specialisation\") {\n          props.setUserInput({\n            specialisation: \"None \"\n          });\n        } else {\n          props.setUserInput({\n            [props.name]: []\n          });\n        }\n      }\n    }\n\n    setIsOpen(!isOpen);\n  };\n\n  return /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, props.label)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, renderContent()), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, (props.hidden || props.name === \"honours\") && props.editing ? /*#__PURE__*/React.createElement(Switch, {\n    checked: isOpen,\n    onChange: handleSwitch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 27\n    }\n  }) : null));\n};\n\nexport default Options;","map":{"version":3,"sources":["/Users/frisciliasultan/Documents/Orbitalhosting/src/Settings/Options.js"],"names":["React","useState","AutoCompleteText","generateOptions","isEmpty","Switch","Select","DynamicFieldSet","Options","props","console","log","major","isOpen","setIsOpen","value","Option","name","renderContent","editing","hidden","handleChange","width","input","option","children","toLowerCase","indexOf","label","optionList","setUserInput","handleSwitch","honours","specialisation"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport AutoCompleteText from \"../Pages/Module Planner Page/AutocompleteText\";\nimport { generateOptions } from \"../utils/commonFunctions\";\nimport isEmpty from \"is-empty\";\nimport { Switch, Select } from \"antd\";\nimport DynamicFieldSet from \"./DynamicFieldSet\";\n\nconst Options = (props) => {\n    console.log(props.major)\n    const [isOpen, setIsOpen] = useState(isEmpty(props.value) || !props.value ? false : true);\n    const { Option } = Select;\n    let value;\n    if (!isEmpty(props.value) && props.name !== \"specialisation\"\n        && props.name !== \"secondMajors\" && props.name !== \"minors\") {\n        if(props.name === \"honours\") {\n            value = props.value ? \"With Honours\" : \"Without Honours\";\n        } else {\n            value = props.value.name ? props.value.name : props.value;\n        }\n    } else {\n        value = \"None \";\n    } \n\n    const renderContent = () => {\n        if(props.editing) {\n            if(props.name !== \"honours\") {\n                if(!props.hidden) {\n                    return (\n                        <Select\n                            showSearch\n                            onChange={props.handleChange}\n                            defaultValue=\"None \"\n                            value={value}\n                            style={{ width: 300 }}\n                            optionFilterProp=\"children\"\n                            filterOption={(input, option) => {\n                                return option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                            }}>\n                            <Option \n                                key={\"choose\" + props.label}\n                                value=\"None \" \n                                 disabled>\n                                {\"Choose \" + props.label}\n                            </Option>\n                            {generateOptions(props.optionList, props.name)}\n                        </Select> \n                        ) \n                } else if (isOpen) {\n                    return (\n                        <div>\n                        <DynamicFieldSet\n                            label={props.label}\n                            setUserInput={props.setUserInput}\n                            optionList={props.optionList}\n                            name={props.name}\n                            value={props.value}/>\n                        </div>\n                    )\n                } else {\n                    return value;\n                }\n            }\n             \n        } else {\n            return value;\n        }\n    }\n\n    const handleSwitch = () => {\n        if(props.name === \"honours\") {\n            \n            props.setUserInput({major: {...props.major, honours: !isOpen}});\n        } else {\n            if(isOpen) {\n                if(props.name === \"specialisation\") {\n                    props.setUserInput({specialisation: \"None \"});\n                } else {\n                    props.setUserInput({[props.name]: []});\n                }\n            }\n        }\n        setIsOpen(!isOpen);\n    }\n\n    return (\n            <tr>\n                <td>\n                    <label>{props.label}</label>\n                </td>\n\n                <td>\n                    {renderContent()}\n                </td>\n\n                <td>\n                    {(props.hidden || props.name === \"honours\") && props.editing\n                        ? <Switch  \n                            checked={isOpen} \n                            onChange={handleSwitch}/>\n                        : null}\n                </td>\n            </tr>\n    )        \n}\n\nexport default Options;"]},"metadata":{},"sourceType":"module"}