{"ast":null,"code":"var _jsxFileName = \"/Users/frisciliasultan/Documents/Orbitalhosting/src/Settings/AcadSettings.jsx\";\nimport React, { useState, useEffect, useReducer } from 'react';\nimport Options from './Options';\nimport { Link } from 'react-router-dom';\nimport axios from \"axios\";\nimport { Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport PropTypes from \"prop-types\";\nimport { updateSettings, setMatriculationYearOptions, setTargetGradYearOptions, setDegreeOptions } from \"../actions/settingsActions\";\nimport { deleteUser } from \"../actions/authActions\";\nimport { removeSuccess } from \"../actions/successActions\";\nimport isEmpty from \"is-empty\";\nimport { generateOptions } from '../utils/commonFunctions';\n\nconst AcadSettings = props => {\n  const [userInput, setUserInput] = useReducer((state, newState) => ({ ...state,\n    ...newState\n  }), {\n    faculty: props.userInfo.faculty,\n    facIndex: props.userInfo.facIndex,\n    major: props.userInfo.major,\n    majorIndex: props.userInfo.majorIndex,\n    specialisation: \"N/A\",\n    secondMajor: \"N/A\",\n    minor: \"N/A\",\n    residence: props.userInfo.residential,\n    matriculationYear: props.userInfo.matriculationYear,\n    targetGradYear: props.userInfo.targetGradYear\n  });\n  useEffect(() => {\n    if (isEmpty(props.settings.facultyOptions)) {\n      props.setDegreeOptions();\n    }\n  }, []);\n  useEffect(() => {\n    if (props.settings.currentAY && isEmpty(props.settings.matriculationOptions)) {\n      props.setMatriculationYearOptions(props.settings.currentAY, props.settings.currentSemester);\n      props.setTargetGradYearOptions(props.settings.currentAY, props.settings.currentSemester);\n    }\n  }, [props.settings.currentAY]);\n  useEffect(() => {\n    if (!isEmpty(props.settings.userInfo)) {\n      setUserInput({\n        faculty: props.userInfo.faculty,\n        facIndex: props.userInfo.facIndex,\n        major: props.userInfo.major,\n        majorIndex: props.userInfo.majorIndex,\n        specialisation: props.userInfo.specialisation ? props.userInfo.specialisation : \"N/A\",\n        secondMajor: props.userInfo.secondMajor ? props.userInfo.secondMajor : \"N/A\",\n        minor: props.userInfo.minor ? props.userInfo.minor : \"N/A\",\n        residence: props.userInfo.residential,\n        matriculationYear: props.userInfo.matriculationYear,\n        targetGradYear: props.userInfo.targetGradYear\n      });\n    }\n  }, [props.settings.userInfo]);\n\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      selectedIndex\n    } = e.target;\n\n    if (name === \"faculty\") {\n      setUserInput({\n        [name]: value,\n        facIndex: selectedIndex - 1,\n        major: null\n      });\n    } else if (name === \"major\") {\n      setUserInput({\n        [name]: value,\n        majorIndex: selectedIndex - 1\n      });\n    } else {\n      setUserInput({\n        [name]: value\n      });\n    }\n\n    console.log(userInput.facIndex);\n  }; //turn array of choices into options dropdown\n  // const generateOptions = (choices) => {\n  //   const facIndex = userInput.facIndex;\n  //   if(choices === 'faculty'){\n  //     return props.settings.facultyOptions.map((obj) => {\n  //       return (\n  //       <option value={obj.name}>\n  //         {obj.name}\n  //       </option>\n  //       );\n  //     });\n  // } else if(choices === 'major') {\n  //     if(userInput.faculty) {\n  //     return props.settings.facultyOptions\n  //           [facIndex]\n  //           [userInput.faculty].map((obj) => {\n  //                   return (\n  //                     <option value={Object.keys(obj)}>\n  //                       {Object.keys(obj)}\n  //                     </option>\n  //                   )\n  //               }\n  //     )}\n  // } else if(choices === 'specialisation') {\n  //     if(userInput.major && userInput.faculty) {\n  //     return props.settings.facultyOptions\n  //           [facIndex]\n  //           [userInput.faculty][userInput.majorIndex][userInput.major].map((item) => {\n  //                 return (\n  //                   <option>\n  //                     {item}\n  //                   </option>\n  //                 )\n  //               }    \n  //     )}\n  //     } else if(choices === 'residence') {\n  //       return props.settings.residenceOptions.map((obj) => {\n  //         return (\n  //         <option value={obj}>\n  //           {obj}\n  //         </option>\n  //         );\n  //       });\n  //     } else {\n  //         if(choices === 'matriculationYear') {\n  //           return props.settings.matriculationOptions.map((option) => {\n  //             return (\n  //             <option value={option.substr(3,9)}>\n  //               {option}\n  //             </option>\n  //             );\n  //           });\n  //         } else {\n  //             return props.settings.targetGradOptions.map((option) => {\n  //               return (\n  //               <option value={option.substr(6,9)}>\n  //                 {option}\n  //               </option>\n  //               );\n  //             });\n  //           }\n  //       }\n  // }\n  //Check if there is any part of userData that is undefined/falsy\n\n\n  const checkSubmission = userData => {\n    const keys = Object.keys(userData);\n    let status;\n\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      status = userData[key] || userData[key] === 0 ? true : false;\n      console.log(status);\n      console.log(userData[key]);\n\n      if (!status) {\n        return status = false;\n      }\n    }\n\n    return status;\n  };\n\n  const handleSubmit = () => {\n    const userData = {\n      faculty: userInput.faculty,\n      facIndex: userInput.facIndex,\n      major: userInput.major,\n      majorIndex: userInput.majorIndex,\n      specialisation: userInput.specialisation,\n      secondMajor: userInput.secondMajor,\n      minor: userInput.minor,\n      residential: userInput.residence,\n      matriculationYear: userInput.matriculationYear,\n      targetGradYear: userInput.targetGradYear,\n      modPlan: props.modplan,\n      cap: props.cap.cap,\n      targetCap: props.cap.targetCap\n    }; //if all props of userData is filled, allow user to save\n    //else alert popup to redirect user back to filling in their data (TEMPORARY)\n\n    return checkSubmission(userData) ? props.updateSettings(userData) : alert(\"Please fill in all the fields before saving!\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }\n  }, \"Enter your particulars so that we can personalise your user experience!\"), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Options, {\n    label: \"Your Faculty: \",\n    handleChange: handleChange,\n    name: \"faculty\",\n    value: userInput.faculty,\n    optionList: props.settings.facultyOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }\n  }), userInput.faculty && !isEmpty(props.settings.facultyOptions) && /*#__PURE__*/React.createElement(Options, {\n    label: \"Your Degree: \",\n    handleChange: handleChange,\n    name: \"major\",\n    value: userInput.major,\n    optionList: props.settings.facultyOptions[userInput.facIndex].undergraduate.degrees,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }\n  }, \"+Add Specialisation\"), /*#__PURE__*/React.createElement(Options, {\n    label: \"Your Residential College: \",\n    handleChange: handleChange,\n    name: \"residence\",\n    value: userInput.residence,\n    optionList: props.settings.residenceOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Options, {\n    label: \"Year of Matriculation: \",\n    handleChange: handleChange,\n    name: \"matriculationYear\",\n    value: userInput.matriculationYear,\n    optionList: props.settings.matriculationOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Options, {\n    label: \"Target Graduation Year: \",\n    handleChange: handleChange,\n    name: \"targetGradYear\",\n    value: userInput.targetGradYear,\n    optionList: props.settings.targetGradOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: \"button\",\n    id: \"save\",\n    onClick: () => handleSubmit(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 9\n    }\n  }, \"Save Settings\"), !isEmpty(props.success) && setTimeout(props.history.push(\"/module-planner\"), 500) && clearTimeout(setTimeout(props.removeSuccess, 2000)), !isEmpty(props.success) && alert(\"Saved successfully!\") && props.history.push(\"/module-planner\"), /*#__PURE__*/React.createElement(Button, {\n    className: \"button\",\n    id: \"delete\",\n    onClick: () => props.deleteUser(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 9\n    }\n  }, \"Delete Account\"));\n};\n\nAcadSettings.propTypes = {\n  updateSettings: PropTypes.func.isRequired,\n  setMatriculationYearOptions: PropTypes.func.isRequired,\n  setTargetGradYearOptions: PropTypes.func.isRequired,\n  setDegreeOptions: PropTypes.func.isRequired,\n  removeSuccess: PropTypes.func.isRequired,\n  deleteUser: PropTypes.func.isRequired,\n  modplan: PropTypes.array.isRequired,\n  settings: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  modplan: state.modplan.selectedModules,\n  settings: state.settings,\n  userInfo: state.settings.userInfo,\n  cap: state.cap,\n  success: state.success\n});\n\nexport default connect(mapStateToProps, {\n  updateSettings,\n  setMatriculationYearOptions,\n  setTargetGradYearOptions,\n  setDegreeOptions,\n  removeSuccess,\n  deleteUser\n})(AcadSettings);","map":{"version":3,"sources":["/Users/frisciliasultan/Documents/Orbitalhosting/src/Settings/AcadSettings.jsx"],"names":["React","useState","useEffect","useReducer","Options","Link","axios","Button","connect","PropTypes","updateSettings","setMatriculationYearOptions","setTargetGradYearOptions","setDegreeOptions","deleteUser","removeSuccess","isEmpty","generateOptions","AcadSettings","props","userInput","setUserInput","state","newState","faculty","userInfo","facIndex","major","majorIndex","specialisation","secondMajor","minor","residence","residential","matriculationYear","targetGradYear","settings","facultyOptions","currentAY","matriculationOptions","currentSemester","handleChange","e","name","value","selectedIndex","target","console","log","checkSubmission","userData","keys","Object","status","i","length","key","handleSubmit","modPlan","modplan","cap","targetCap","alert","undergraduate","degrees","residenceOptions","targetGradOptions","success","setTimeout","history","push","clearTimeout","propTypes","func","isRequired","array","object","mapStateToProps","selectedModules"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useReducer} from 'react';\nimport Options from './Options';\nimport { Link } from 'react-router-dom';\nimport axios from \"axios\";\nimport { Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport PropTypes from \"prop-types\";\nimport { updateSettings, setMatriculationYearOptions, setTargetGradYearOptions, setDegreeOptions } from \"../actions/settingsActions\";\nimport { deleteUser } from \"../actions/authActions\";\nimport { removeSuccess } from \"../actions/successActions\";\nimport isEmpty from \"is-empty\";\nimport { generateOptions } from '../utils/commonFunctions';\n\n\n\nconst AcadSettings = (props) => {\n  const [userInput, setUserInput] = useReducer(\n    (state, newState) => ({...state, ...newState}), \n    {\n      faculty: props.userInfo.faculty,\n      facIndex: props.userInfo.facIndex,\n      major: props.userInfo.major,\n      majorIndex: props.userInfo.majorIndex,\n      specialisation: \"N/A\",\n      secondMajor: \"N/A\",\n      minor: \"N/A\",\n      residence: props.userInfo.residential,\n      matriculationYear: props.userInfo.matriculationYear,\n      targetGradYear: props.userInfo.targetGradYear\n    }\n  )\n\n  useEffect(() => {\n    if(isEmpty(props.settings.facultyOptions)) {\n        props.setDegreeOptions();\n    }\n  }, []);\n\n  useEffect(() => {\n    if(props.settings.currentAY && isEmpty(props.settings.matriculationOptions)) {\n        props.setMatriculationYearOptions(props.settings.currentAY, props.settings.currentSemester);\n        props.setTargetGradYearOptions(props.settings.currentAY, props.settings.currentSemester);\n    }\n  }, [props.settings.currentAY]);\n\n  useEffect(() => {\n    if(!isEmpty(props.settings.userInfo)) {\n      setUserInput({\n        faculty: props.userInfo.faculty,\n        facIndex: props.userInfo.facIndex,\n        major: props.userInfo.major,\n        majorIndex: props.userInfo.majorIndex,\n        specialisation: props.userInfo.specialisation ? props.userInfo.specialisation : \"N/A\",\n        secondMajor: props.userInfo.secondMajor ? props.userInfo.secondMajor : \"N/A\",\n        minor: props.userInfo.minor ? props.userInfo.minor : \"N/A\",\n        residence: props.userInfo.residential,\n        matriculationYear: props.userInfo.matriculationYear,\n        targetGradYear: props.userInfo.targetGradYear\n      });\n    }\n  }, [props.settings.userInfo]);\n\n  const handleChange = (e) => {\n    const {name, value, selectedIndex} = e.target;\n\n    if(name === \"faculty\") {\n      setUserInput({[name]: value,\n                      facIndex: (selectedIndex - 1),\n                      major: null});\n        \n    } else if(name === \"major\") {\n      setUserInput({[name]: value,\n                      majorIndex: (selectedIndex - 1)});\n\n    } else {\n      setUserInput({[name]: value});\n    } \n    console.log(userInput.facIndex);\n  };\n\n //turn array of choices into options dropdown\n  // const generateOptions = (choices) => {\n  //   const facIndex = userInput.facIndex;\n  //   if(choices === 'faculty'){\n  //     return props.settings.facultyOptions.map((obj) => {\n  //       return (\n  //       <option value={obj.name}>\n  //         {obj.name}\n  //       </option>\n  //       );\n  //     });\n    // } else if(choices === 'major') {\n    //     if(userInput.faculty) {\n    //     return props.settings.facultyOptions\n    //           [facIndex]\n    //           [userInput.faculty].map((obj) => {\n    //                   return (\n    //                     <option value={Object.keys(obj)}>\n    //                       {Object.keys(obj)}\n    //                     </option>\n    //                   )\n    //               }\n    //     )}\n    // } else if(choices === 'specialisation') {\n    //     if(userInput.major && userInput.faculty) {\n    //     return props.settings.facultyOptions\n    //           [facIndex]\n    //           [userInput.faculty][userInput.majorIndex][userInput.major].map((item) => {\n    //                 return (\n    //                   <option>\n    //                     {item}\n    //                   </option>\n    //                 )\n    //               }    \n    //     )}\n//     } else if(choices === 'residence') {\n//       return props.settings.residenceOptions.map((obj) => {\n//         return (\n//         <option value={obj}>\n//           {obj}\n//         </option>\n//         );\n//       });\n//     } else {\n//         if(choices === 'matriculationYear') {\n//           return props.settings.matriculationOptions.map((option) => {\n//             return (\n//             <option value={option.substr(3,9)}>\n//               {option}\n//             </option>\n//             );\n//           });\n//         } else {\n//             return props.settings.targetGradOptions.map((option) => {\n//               return (\n//               <option value={option.substr(6,9)}>\n//                 {option}\n//               </option>\n//               );\n//             });\n//           }\n//       }\n// }\n\n//Check if there is any part of userData that is undefined/falsy\nconst checkSubmission = (userData) => {\n  const keys = Object.keys(userData);\n  let status;\n\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    status = (userData[key] || userData[key] === 0) ? true : false;\n    console.log(status);\n    console.log(userData[key]);\n    if(!status) {\n      return status = false;\n    }\n  }\n  return status;\n}\n\nconst handleSubmit = () => {\n  const userData = {\n    faculty: userInput.faculty,\n    facIndex: userInput.facIndex,\n    major: userInput.major,\n    majorIndex: userInput.majorIndex,\n    specialisation: userInput.specialisation,\n    secondMajor: userInput.secondMajor,\n    minor: userInput.minor,\n    residential: userInput.residence,\n    matriculationYear: userInput.matriculationYear,\n    targetGradYear: userInput.targetGradYear,\n    modPlan: props.modplan,\n    cap: props.cap.cap,\n    targetCap: props.cap.targetCap\n  }\n\n  //if all props of userData is filled, allow user to save\n  //else alert popup to redirect user back to filling in their data (TEMPORARY)\n  return checkSubmission(userData) ?  props.updateSettings(userData) : alert(\"Please fill in all the fields before saving!\");\n\n} \n\n  return (\n      <div className=\"container\">\n        <h5>Enter your particulars so that we can personalise your user experience!</h5>\n\n        <form>\n            <Options\n            label=\"Your Faculty: \"\n            handleChange={handleChange}\n            name=\"faculty\"\n            value={userInput.faculty}\n            optionList={props.settings.facultyOptions}/>\n          \n          \n          {userInput.faculty && !isEmpty(props.settings.facultyOptions) && \n            <Options\n            label=\"Your Degree: \"\n            handleChange={handleChange}\n            name=\"major\"\n            value={userInput.major}\n            optionList={props.settings.facultyOptions[userInput.facIndex].undergraduate.degrees}/>}\n\n            <h3>+Add Specialisation</h3>\n            {/* <Options\n            label=\"Your Specialisation\"\n            handleChange={handleChange}\n            name=\"specialisation\"\n            value={userInput.specialisation}\n            optionList={props.facultyOptions[facIndex].undergraduate.degrees}/> */}\n\n            <Options\n              label=\"Your Residential College: \"\n              handleChange={handleChange}\n              name=\"residence\"\n              value={userInput.residence}\n              optionList={props.settings.residenceOptions}/>\n            \n            <Options\n              label=\"Year of Matriculation: \"\n              handleChange={handleChange}\n              name=\"matriculationYear\"\n              value={userInput.matriculationYear}\n              optionList={props.settings.matriculationOptions}/>\n\n            <Options\n              label=\"Target Graduation Year: \"\n              handleChange={handleChange}\n              name=\"targetGradYear\"\n              value={userInput.targetGradYear}\n              optionList={props.settings.targetGradOptions}/>\n            \n          </form>\n\n        <Button className='button' id='save' onClick={() => handleSubmit()}>Save Settings</Button>\n        {!isEmpty(props.success) && \n                    setTimeout(props.history.push(\"/module-planner\"), 500) &&\n                    clearTimeout(setTimeout(props.removeSuccess, 2000))}\n        {!isEmpty(props.success) && alert(\"Saved successfully!\") && props.history.push(\"/module-planner\")}\n\n        <Button className='button' id='delete' onClick={() => props.deleteUser()}>Delete Account</Button>\n        \n      </div>\n  );\n}\n\n\nAcadSettings.propTypes = {\n  updateSettings: PropTypes.func.isRequired,\n  setMatriculationYearOptions: PropTypes.func.isRequired,\n  setTargetGradYearOptions: PropTypes.func.isRequired,\n  setDegreeOptions: PropTypes.func.isRequired,\n  removeSuccess: PropTypes.func.isRequired,\n  deleteUser: PropTypes.func.isRequired,\n  modplan: PropTypes.array.isRequired,\n  settings: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  modplan: state.modplan.selectedModules,\n  settings: state.settings,\n  userInfo: state.settings.userInfo,\n  cap: state.cap,\n  success: state.success\n});\n\nexport default connect(mapStateToProps, \n  { updateSettings, setMatriculationYearOptions, setTargetGradYearOptions, setDegreeOptions, removeSuccess, deleteUser }) (AcadSettings);\n"]},"metadata":{},"sourceType":"module"}